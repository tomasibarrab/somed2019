import { Button } from '@buffet/button';
import React from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';

import {
  SaveStatus,
} from '../store/types';
import { eventTracker, trackingCategory, trackingEvents } from '../utils/trackingUtils';


interface UserFormHeaderOwnProps {
  isNew: boolean;
  saveStatus: SaveStatus;
  onCancel: () => void;
}

type UserFormHeaderProps =  UserFormHeaderOwnProps & InjectedIntlProps;

const UserFormHeader: React.SFC<UserFormHeaderProps> = ({ intl, isNew, saveStatus, onCancel }) => {
  return (
    <>
      <Button
        type="button"
        theme="bare"
        data-testid="cancel-button"
        className="cancel-button"
        onClick={onCancel}
      >
        <FormattedMessage id="user.bt.cancel" />
      </Button>
      <Button
        type="button"
        theme="primary"
        data-testid="submit-button"
        className="submit-button"
        htmltype="submit"
        onClick={() => {
          eventTracker.sendEvent({
            action: isNew
              ? trackingEvents.addUser.action
              : trackingEvents.editUser.action,
            category: trackingCategory,
            label: isNew
              ? trackingEvents.addUser.labels.createTryButton
              : trackingEvents.editUser.labels.saveTryButton,
          })
        }}
        busy={saveStatus === 'started'}
      >
        <FormattedMessage id={isNew ? 'user.bt.create' : 'user.bt.update'} />
      </Button>
    </>
  );
};

export default injectIntl(UserFormHeader);
