const enum AsyncStatusType {
  Initial = 'ASYNC_INITIAL',
  Started = 'ASYNC_STARTED',
  Done = 'ASYNC_DONE',
  Failed = 'ASYNC_FAILED',
};

export default class AsyncStatus {

  public static readonly Initial: AsyncStatus = new AsyncStatus(AsyncStatusType.Initial);
  public static readonly Started: AsyncStatus = new AsyncStatus(AsyncStatusType.Started);
  public static readonly Done: AsyncStatus = new AsyncStatus(AsyncStatusType.Done);
  public static readonly Failed: AsyncStatus = new AsyncStatus(AsyncStatusType.Failed);

  private statusType: AsyncStatusType;

  constructor(statusType: AsyncStatusType) {
    this.statusType = statusType;
  }

  public toString(): string {
    return `[AsyncStatus: ${this.statusType}]`;
  }

  public isInitial(): boolean {
    return this.statusType === AsyncStatusType.Initial;
  }

  public isStarted(): boolean {
    return this.statusType === AsyncStatusType.Started;
  }

  public isDone(): boolean {
    return this.statusType === AsyncStatusType.Done;
  }

  public isFailed(): boolean {
    return this.statusType === AsyncStatusType.Failed;
  }
}
