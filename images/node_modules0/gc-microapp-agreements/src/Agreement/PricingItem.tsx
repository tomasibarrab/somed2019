import { Pricing } from '@buffet/user-agreement';
import { LangLocale } from 'gca-react-components/src/redux-modules/languageProvider';
import React from 'react';
import { FormattedMessage } from 'react-intl';

import formatProductPrice from '../utils/formatProductPrice';


interface PricingItemProps {
  item: Pricing;
  locale: LangLocale;
}

const PricingItem = ({ item, locale }: PricingItemProps) => {
  const itemPrice = formatProductPrice(item, locale);

  /* TODO: handle discounts
  if (item.listPrice < 0 || item.feeType.toLowerCase() === 'discount') {
    return <FormattedMessage id="some.id.to.be.created.for.discounts" />
  }
  */

  if (item.feeType.toLowerCase() === 'subscription' && item.termLength > 0) {
    return (
      <FormattedMessage
        id="agreement.pricing.recurring"
        values={{
          monthsNumber: item.termLength.toString(),
          price: itemPrice,
        }}
      />
    );
  } else if (item.feeType.toLowerCase() === 'installation' && !item.termLength) {
    return (
      <FormattedMessage id="agreement.pricing.installation" values={{ price: itemPrice }} />
    );
  }

  return null;
};

export default PricingItem;
