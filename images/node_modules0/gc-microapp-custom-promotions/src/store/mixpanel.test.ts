import moment from 'moment';
import configureMockStore from 'redux-mock-store';
import mixpanelMock from '../../../../packages/gca-jest-config/lib/mixpanel-mock';
import { actions } from './customPromotions/customPromotions';
import middleware from './mixpanel';

describe('middleware', () => {
  const scenarios = [
    {
      action: () => actions.clickOrInteract({
        action: 'Click',
        props: {
          name: 'Button that does something',
          page: 'Page somewhere',
        },
      }),
      description: 'click or interact',
    },
  ];

  scenarios.forEach(({ action, description }) => {
    test(description, () => {
      const mixpanel = mixpanelMock(moment() as any);
      const store = configureMockStore([middleware])({
        restaurantPIProperties: {
          data: {
            availableCPApproval: true,
            availableFlexPricing: true,
            hasActiveCP: true,
            hasActivePR: true,
            hasFlexPricing: true,
            hasInactiveCP: true,
            hasInactivePR: true,
            hasPendingCPApproval: false,
            isTestRid: false,
          },
          loading: false,
        },
      });
      store.dispatch(action());
      expect(mixpanel.events[0]).toMatchSnapshot();
    });
  });
});
