export enum CampaignState {
  Live = 'live',
}

export const enum CampaignTypes {
  CustomPromotions = 'paid_search',
}

export interface CustomSuppressionDate {
  startDate: string;
  endDate: string;
  label?: string;
}

export interface DefaultSuppressionDateDescription {
  endDate: string;
  label: string;
  varies: boolean;
  startDate: string;
}

export interface SuppressionDates {
  default: string[];
  custom: CustomSuppressionDate[];
}

export interface OpenCreationTermsModalPayload {
  formValuesSnapshot: any;
}

export interface SetProgressPercentagePayload {
  percentage: number;
}

export interface CreateCustomPromotionPayload {
  formValues: any;
  approvalInfo: any /* TODO: add approval info Type from Specials */;
}

export interface CreditsResponse {
  coverPrice: number;
  creditAmount: number;
  currencyCode: string;
  rid: number;
  activeCustomPromotion: boolean;
}

export type CreditsModel = CreditsResponse & {
  defaultCovers: number;
  defaultBudget: number;
  currencySymbol: string;
  formattedCoverPrice: string;
  shouldShowCredits: boolean;
};

export interface CustomPromotionsState {
  create: {
    modal: boolean;
    pending: boolean;
    success?: boolean;
    formValuesSnapshot?: any;
  };
  credits: {
    pending: boolean;
    success?: boolean;
    model?: CreditsModel;
  };
  educationPage: number;
  progressPercentage: number;
}

export enum EducationPageType {
  Single,
  Wizard,
}

export interface ClickOrInteractPayload {
  action: string;
  props: {
    name: string;
    page: string;
  };
};
