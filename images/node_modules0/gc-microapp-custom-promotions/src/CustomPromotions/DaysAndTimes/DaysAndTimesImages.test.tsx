import { mount } from 'enzyme';
import React from 'react';
import DaysAndTimesImages from './DaysAndTimesImages';

jest.mock('./ImageDay', () => () => 'ImageDay');
jest.mock('./Time', () => () => 'Time');

jest.mock('redux-form', () => ({
  FormSection: ({ children }) => children,
}));

const renderComponent = (props: any) => mount(<DaysAndTimesImages {...props} />);

describe('<DaysAndTimesImages />', () => {
  test('it matches snapshot', () => {
    const wrapper = renderComponent({});
    expect(wrapper.debug()).toMatchSnapshot();
  });

  test('clicking on a day selects that day', () => {
    const wrapper = renderComponent({});

    let tuesday = wrapper.find('[label="Tuesday"]');
    const tuesdayProps = tuesday.props();
    expect(tuesdayProps.selected).toEqual(false);

    tuesdayProps.onClickDay(3);
    wrapper.update();

    tuesday = wrapper.find('[label="Tuesday"]');
    expect(tuesday.props().selected).toEqual(true);
  });

  test('clicking on a day deselects other days', () => {
    const wrapper = renderComponent({});

    let tuesday = wrapper
      .find('[label="Tuesday"]')
      .props()
      .onClickDay(3);
    let wednesday = wrapper
      .find('[label="Wednesday"]')
      .props()
      .onClickDay(4);

    wrapper.update();

    tuesday = wrapper.find('[label="Tuesday"]');
    wednesday = wrapper.find('[label="Wednesday"]');
    expect(tuesday.props().selected).toEqual(false);
    expect(wednesday.props().selected).toEqual(true);
  });
});
