import { DateAttributes } from '../CustomPromotions/BlockedDays/BlockedDatesPickerModal/BlockedDatesPicker';
import { convertSuppressionDatesToMap, translateMap } from './suppression-dates-manipulator';

jest.mock('../CustomPromotions/constants', () => ({
  // tslint:disable:object-literal-sort-keys
  defaultSuppressionDates: {
    valentines_day: { label: 'Valentine\'s Day', startDate: '2018-02-14', endDate: '2018-02-14' },
    mothers_day_us: { label: 'Mother\'s Day', startDate: '2018-05-13', endDate: '2018-05-13' },
    thanksgiving_day_us: { label: 'Thanksgiving', startDate: '2018-11-22', endDate: '2018-11-22' },
    christmas_eve: { label: 'Christmas Eve', startDate: '2018-12-24', endDate: '2018-12-24' },
    christmas_day: { label: 'Christmas Day', startDate: '2018-12-25', endDate: '2018-12-25' },
    new_years_eve: { label: 'New Year\'s Eve', startDate: '2018-12-31', endDate: '2018-12-31' },
    new_years_day: { label: 'New Year\'s Day', startDate: '2019-01-01', endDate: '2019-01-01' },
  },
  dateFormat: {
    MOMENT: 'YYYY-MM-DD',
  },
}));

describe('suppression date manipulator', () => {
  describe('should translate map', () => {
    const scenarios: Array<{ description: string; map: Array<[string, DateAttributes]> }> = [
      {
        description: 'of 2 custom + 1 default date',
        map: [
          ['2018-01-04', { isBlocked: true, isDefault: false, isNew: true }],
          ['2018-01-05', { isBlocked: true, isDefault: false, isNew: false }],
          ['2018-02-14', { isBlocked: true, isDefault: true, isNew: true }],
        ],
      },
      {
        description: 'no dates, since all are !isBlocked',
        map: [
          ['2018-01-04', { isBlocked: false, isDefault: false, isNew: true }],
          ['2018-01-05', { isBlocked: false, isDefault: false, isNew: false }],
          ['2018-02-14', { isBlocked: false, isDefault: true, isNew: true }],
        ],
      },

      {
        description: 'of all default dates',
        map: [
          ['2018-02-14', { isBlocked: true, isDefault: true, isNew: true }],
          ['2018-05-13', { isBlocked: true, isDefault: true, isNew: true }],
          ['2018-11-22', { isBlocked: true, isDefault: true, isNew: false }],
          ['2018-12-24', { isBlocked: true, isDefault: true, isNew: true }],
          ['2018-12-25', { isBlocked: true, isDefault: true, isNew: false }],
          ['2018-12-31', { isBlocked: true, isDefault: true, isNew: true }],
          ['2019-01-01', { isBlocked: true, isDefault: true, isNew: false }],
        ],
      },
      {
        description: '5 custom dates, new or not (doesn\'t matter)',
        map: [
          ['2018-01-10', { isBlocked: true, isDefault: false, isNew: true }],
          ['2018-01-20', { isBlocked: true, isDefault: false, isNew: false }],
          ['2018-03-20', { isBlocked: true, isDefault: false, isNew: true }],
          ['2018-05-20', { isBlocked: true, isDefault: false, isNew: false }],
          ['2018-07-20', { isBlocked: true, isDefault: false, isNew: true }],
        ],
      },
      {
        description: '5 custom dates, first 3 w/ label',
        map: [
          ['2018-01-10', { isBlocked: true, isDefault: false, isNew: true, label: 'Label 1' }],
          ['2018-01-20', { isBlocked: true, isDefault: false, isNew: false, label: 'Label Two' }],
          ['2018-03-20', { isBlocked: true, isDefault: false, isNew: true, label: 'Label III' }],
          ['2018-05-20', { isBlocked: true, isDefault: false, isNew: false }],
          ['2018-07-20', { isBlocked: true, isDefault: false, isNew: true }],
        ],
      },
      {
        description: '2 custom dates, same day',
        map: [
          ['2018-01-10', { isBlocked: true, isDefault: false, isNew: true, label: 'aaa' }],
          ['2018-01-10', { isBlocked: true, isDefault: false, isNew: true, label: 'bbb' }],
        ],
      },
    ];
    scenarios.forEach(({ description, map }) => {
      it(description, () => {
        const datesMap: Map<string, DateAttributes> = new Map(map);
        const result = translateMap(datesMap);
        expect(result).toMatchSnapshot();
      });
    });
  });
  describe('should translate suppression dates to map:', () => {
    const scenarios = [
      {
        description: 'a couple custom dates w/o labels',
        suppressed: {
          custom: [
            { endDate: '2018-02-01', startDate: '2018-02-01' },
            { endDate: '2018-02-05', startDate: '2018-02-05' },
          ],
          default: [],
        },
      },
      {
        description: 'a couple custom dates w/ labels',
        suppressed: {
          custom: [
            { endDate: '2018-02-01', label: 'The First of February', startDate: '2018-02-01' },
            { endDate: '2018-02-05', label: 'The Fifth of February', startDate: '2018-02-05' },
          ],
          default: [],
        },
      },
      {
        description: 'a couple custom date Ranges w/ labels (into 9 single dates)',
        suppressed: {
          custom: [
            { endDate: '2018-02-04', label: 'The First - Fourth of February', startDate: '2018-02-01' },
            { endDate: '2018-02-09', label: 'The Fifth - Ninth of February', startDate: '2018-02-05' },
          ],
          default: [],
        },
      },
      {
        description: 'some default dates',
        suppressed: {
          custom: [],
          default: ['valentines_day', 'mothers_day_us', 'thanksgiving_day_us', 'christmas_eve', 'christmas_day'],
        },
      },
      {
        description: 'missing custom entirely',
        suppressed: {
          default: ['valentines_day', 'mothers_day_us', 'thanksgiving_day_us', 'christmas_eve', 'christmas_day'],
        },
      },
      {
        description: 'missing default entirely',
        suppressed: {
          custom: [{ endDate: '2018-02-04', label: 'The First - Fourth of February', startDate: '2018-02-01' }],
        },
      },
      {
        description: 'suppression dates is undefined',
        suppressed: undefined,
      },
    ];
    scenarios.forEach(({ description, suppressed }) => {
      it(description, () => {
        const result = convertSuppressionDatesToMap(suppressed as any);
        expect(result).toMatchSnapshot();
      });
    });
  });
});
