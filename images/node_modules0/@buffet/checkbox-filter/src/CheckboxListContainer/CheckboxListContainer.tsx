import React from 'react';
import styles from './CheckboxListContainer.css';

export interface Props {
  maxHeight?: number;
  isCollapsed?: boolean;
}

export class CheckboxListContainer extends React.Component<Props> {
  private listRef: React.RefObject<HTMLUListElement>;

  constructor(props: Props) {
    super(props);
    this.listRef = React.createRef();
  }

  componentDidUpdate(prevProps: Props) {
    if (!this.props.isCollapsed && this.props.maxHeight && this.props.maxHeight < 0) {
      const node = this.listRef.current;
      /* istanbul ignore next */
      if (node && typeof node.scrollHeight !== 'undefined') {
        node.style.maxHeight = `${node.scrollHeight}px`;
      }
    }
  }

  render() {
    const { isCollapsed, maxHeight } = this.props;
    const style: any = {};
    const node = this.listRef.current;

    let maxHeightValue;

    if (node && typeof node.scrollHeight !== 'undefined') {
      maxHeightValue = node.scrollHeight;
    }

    if (!maxHeight) {
      style.maxHeight = 272;
    }

    if (maxHeight && maxHeight > 0) {
      style.maxHeight = maxHeight;
      style.overflowY = 'hidden';
    }

    if (maxHeight && maxHeight < 0) {
      style.maxHeight = maxHeightValue || 900;
      style.overflowY = 'hidden';
    }

    if (isCollapsed) {
      style.maxHeight = 0;
      style.overflowY = 'hidden';
    }

    return (
      <ul ref={this.listRef} className={styles.container} style={style}>
        {this.props.children}
      </ul>
    );
  }
}
