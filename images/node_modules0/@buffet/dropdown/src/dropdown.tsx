import React from 'react';
import classNames from 'classnames/bind';
import styles from './dropdown.css';
import { Icon } from '@buffet/icon';

const cx = classNames.bind(styles);

interface Props {
  menuClassName?: string;
  label: React.ReactNode;
  open: boolean;
  onLabelClick: () => void;
}

export class DropDown extends React.Component<Props> {
  render() {
    const { menuClassName, open, label, children } = this.props;
    return (
      <div className={cx('dropdown')}>
        <button
          className={cx('dropdown-label', {
            'dropdown-label--focus': open
          })}
          aria-haspopup={open}
          aria-expanded={open}
          onClick={this.props.onLabelClick}
        >
          <div className={cx('dropdown-content')}>{label}</div>
          {open ? (
            <Icon iconId="chevronUp" className={cx('toggle-icon')} />
          ) : (
            <Icon iconId="chevronDown" className={cx('toggle-icon')} />
          )}
        </button>
        {open && <div className={cx('dropdown-menu', menuClassName)}>{children}</div>}
      </div>
    );
  }
}
