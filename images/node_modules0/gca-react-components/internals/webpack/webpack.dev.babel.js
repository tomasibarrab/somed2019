/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path');
const webpack = require('webpack');
const postcssConfig = require('./postcss.loader.js');

const plugins = [
  new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
  new webpack.NoErrorsPlugin(),
];

module.exports = require('./webpack.base.babel')({
  // Add hot reloading in development
  entry: [
    path.join(process.cwd(), 'src/app.js'), // Start with js/app.js
  ],

  // Don't use hashes in dev mode for better performance
  output: {
    filename: '[name].js',
    chunkFilename: '[name].chunk.js',
  },

  // Add development plugins
  // plugins: dependencyHandlers().concat(plugins), // eslint-disable-line no-use-before-define
  plugins, // eslint-disable-line no-use-before-define

  // Load the CSS in a style tag in development
  cssLoaders: [
    'style-loader',
    {
      loader: 'css-loader',
      query: {
        localIdentName: '[local]__[path][name]__[hash:base64:5]',
        importLoaders: 1,
        sourceMap: true,
      },
    },
    postcssConfig,
    'sass-loader',
  ],
  // Tell babel that we want to hot-reload
  babelQuery: {
    presets: ['react-hmre'],
  },

  // Emit a source map for easier debugging
  devtool: 'cheap-module-eval-source-map',
});
