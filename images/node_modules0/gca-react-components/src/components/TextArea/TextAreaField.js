import PropTypes from 'prop-types';
import TextArea from './TextArea';
import customField from '../customField/customField';

function validateMin(value = '') {
  const min = this.props.min || 0;

  return value.length < min ? `Must be at least ${min}` : undefined;
}

// eslint-disable-next-line no-undef
function validateMax(value = '') {
  const max = this.props.max || Infinity;

  return value.length > max ? `Must be less than ${max}` : undefined;
}

/**
 * Wraps a [`<TextArea>`](#textarea) component in a Redux Form <a href="http://redux-form.com/6.6.3/docs/api/Field.md/" target="_blank">`<Field>`</a> and binds validation functions for min and max length.
 */
export const TextAreaField = customField({
  component: TextArea,
  baseValidators: [validateMin, validateMax],
  propTypes: {
    /** Used for validation. Also passed to `<TextArea>` for styling. */
    max: PropTypes.number,
    /** Used for validation. Also passed to `<TextArea>` for styling. */
    min: PropTypes.number,
  },
});

/** @component */
export default TextAreaField;
