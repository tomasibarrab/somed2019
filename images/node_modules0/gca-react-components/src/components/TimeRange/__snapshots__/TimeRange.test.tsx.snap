// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TimeRange /> TimeRange should match snapshot 1`] = `
<div
  className="gca-time-range"
>
  <div
    className="time-range-select-container"
  >
    <TimeSelect
      disabled={false}
      end="23:30"
      endType="exclusive"
      increment={30}
      locale="en-us"
      onChange={[Function]}
      outputWithSeconds={false}
      placeholder="Start"
      start="00:00"
      startType="inclusive"
      value=""
    />
    <p
      className="time-range-divider"
    >
      to
    </p>
    <TimeSelect
      disabled={false}
      end="23:30"
      endType="exclusive"
      increment={30}
      locale="en-us"
      onChange={[Function]}
      outputWithSeconds={false}
      placeholder="End"
      start="00:00"
      startType="inclusive"
      value=""
    />
  </div>
  <p
    className="invalid-message"
  >
    Please select a start time that is before your end time.
  </p>
</div>
`;

exports[`<TimeRange /> TimeRange should match snapshot when disabled 1`] = `
<div
  className="gca-time-range"
>
  <div
    className="time-range-select-container"
  >
    <TimeSelect
      disabled={false}
      end="23:30"
      endType="exclusive"
      increment={30}
      locale="en-us"
      onChange={[Function]}
      outputWithSeconds={true}
      placeholder="Start"
      start="00:00"
      startType="inclusive"
      value=""
    />
    <p
      className="time-range-divider"
    >
      to
    </p>
    <TimeSelect
      disabled={false}
      end="23:30"
      endType="exclusive"
      increment={30}
      locale="en-us"
      onChange={[Function]}
      outputWithSeconds={true}
      placeholder="End"
      start="00:00"
      startType="inclusive"
      value=""
    />
  </div>
</div>
`;

exports[`<TimeRange /> TimeRange should match snapshot when invalid 1`] = `
<div
  className="gca-time-range"
>
  <div
    className="time-range-select-container"
  >
    <TimeSelect
      disabled={false}
      end="23:30"
      endType="exclusive"
      increment={30}
      locale="en-us"
      onChange={[Function]}
      outputWithSeconds={true}
      placeholder="Start"
      start="00:00"
      startType="inclusive"
      value=""
    />
    <p
      className="time-range-divider"
    >
      to
    </p>
    <TimeSelect
      disabled={false}
      end="23:30"
      endType="exclusive"
      increment={30}
      locale="en-us"
      onChange={[Function]}
      outputWithSeconds={true}
      placeholder="End"
      start="00:00"
      startType="inclusive"
      value=""
    />
  </div>
</div>
`;
