import { shallow } from 'enzyme';
import React from 'react';

import ProfileHour from './ProfileHour';

const standardShifts = [
  { id: 'brunch', label: 'Brunch' },
  { id: 'lunch', label: 'Lunch' },
  { id: 'breakfast', label: 'Breakfast' },
  { id: 'dinner', label: 'Dinner' },
  { id: 'openingtimes', label: 'Opening Times' },
];

const labels = {
  timeRangeTo: 'to',
  addShift: 'Add a shift',
  removeShift: 'remove',
  selectShiftName: 'Select a Shift',
  shiftEnds: 'End',
  shiftStarts: 'Start',
  lastSeating: 'Last Seating',
  invalidName: 'Add a name',
  invalidTimeRange: 'Invalid time range',
  invalidDays: 'Select at least one day',
};

const shift = {
  standardShiftName: { id: 'brunch' },
  shiftStarts: '05:00:00',
  shiftEnds: '10:00:00',
  days: ['mon', 'tue'],
};

describe('ProfileHour', () => {
  const props = {
    shift,
    labels,
    standardShifts,
    errors: {
      name: 'must include a name',
      days: 'must include days',
      timeRange: 'must have valid start and end times',
    },
    disableRemove: false,
    valid: true,
    onChange: jest.fn(),
    onRemove: jest.fn(),
    locale: 'en-us',
    countryCode: 'us',
  };

  it('should render a profile hour shift', () => {
    expect(shallow(<ProfileHour {...props} />)).toMatchSnapshot();
  });

  it('should render a profile hour as disabled', () => {
    expect(shallow(<ProfileHour {...props} disabled />)).toMatchSnapshot();
  });

  describe('invalid shift', () => {
    const invalidShift = {
      standardShiftName: { id: '' },
      shiftStarts: '',
      shiftEnds: '',
      days: [],
    };

    it('should render all invalid states when forceDirty prop is passed', () => {
      expect(shallow(<ProfileHour {...props} shift={invalidShift} forceDirty />)).toMatchSnapshot();
    });
  });
});
