import React from 'react';
import PropTypes from 'prop-types';

/**
 * Container component for `<RadioButton>` components, or components which effectively conform to a
 * RadioButton interface with a `onChange` callback, and `checked` and `value` properties.
 */
export function SimpleRadioButtonGroup({ selectedValue, onChange, disabled, children }) {
  const buttons = children.map(radioButton =>
    React.cloneElement(radioButton, {
      onChange,
      disabled,
      checked: radioButton.props.value === selectedValue,
      key: `rbg_${radioButton.props.value}`,
    }),
  );

  return <div className="radio-button-group">{buttons}</div>;
}

SimpleRadioButtonGroup.propTypes = {
  children: PropTypes.arrayOf(PropTypes.node),
  /**
   * Callback provided to each radio button which should be invoked with `value` when the radio
   * wants to change state
   */
  onChange: PropTypes.func.isRequired,
  /** Expected to match the value of one of the enclosed radio buttons */
  selectedValue: PropTypes.string.isRequired,
  disabled: PropTypes.bool,
};

export default SimpleRadioButtonGroup;
