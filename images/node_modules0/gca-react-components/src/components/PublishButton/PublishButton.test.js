import { shallow, mount } from 'enzyme';
import React from 'react';
import { PublishButton } from './PublishButton';

describe('<PublishButton />', () => {
  const restingTextString = 'Resting!';
  const restingTextElement = <span>Cozy resting!</span>;
  const buttonText = 'Click Me!';
  const successText = 'Glorius success!';
  let handleClick;

  beforeEach(() => {
    handleClick = jest.fn();
  });

  it('no resting text snapshot', () => {
    const props = {
      buttonText,
      successText,
      busy: false,
      disabled: false,
      success: false,
      onClick: handleClick,
    };

    const wrapper = shallow(<PublishButton {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('restingText string snapshot', () => {
    const props = {
      restingText: restingTextString,
      buttonText,
      successText,
      busy: false,
      disabled: false,
      success: false,
      onClick: handleClick,
    };

    const wrapper = shallow(<PublishButton {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('restingText element snapshot', () => {
    const props = {
      restingText: restingTextElement,
      buttonText,
      successText,
      busy: false,
      disabled: false,
      success: false,
      onClick: handleClick,
    };

    const wrapper = shallow(<PublishButton {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('busy snapshot', () => {
    const props = {
      restingText: restingTextString,
      buttonText,
      successText,
      busy: true,
      disabled: false,
      success: false,
      onClick: handleClick,
    };

    const wrapper = shallow(<PublishButton {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('disabled snapshot', () => {
    const props = {
      restingText: restingTextString,
      buttonText,
      successText,
      busy: false,
      disabled: true,
      success: false,
      onClick: handleClick,
    };

    const wrapper = shallow(<PublishButton {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  describe('success property', () => {
    let wrapper;
    let props;

    beforeEach(() => {
      props = {
        restingText: restingTextString,
        buttonText,
        successText,
        busy: false,
        disabled: false,
        success: true,
        onClick: handleClick,
        successDuration: 5000,
      };

      wrapper = mount(<PublishButton {...props} />);
    });

    it('should match props', () => {
      expect(wrapper.props()).toEqual(props);
    });

    it('should have success message', () => {
      expect(wrapper.text()).toMatch(successText);
    });

    // TODO: Fix. After upgrading to React 16 & Enzyme 3 this test fails because the selector finds two buttons.
    xit('should call click callback', () => {
      wrapper.find('.gca-button').simulate('click');
      expect(handleClick).toHaveBeenCalled();
    });
  });
});
