import React from 'react';

interface IStackedData {
  theme: any;
  value: number;
}

interface IProps {
  data: IStackedData[];
  labelAttrs: React.SVGAttributes<SVGTextElement>;
  labelStyle: React.CSSProperties;
  marginBottom: number;
  scale: any;
  yOffset: number;
}

const defaultLabelStyle: React.CSSProperties = {
  fontSize: '16px',
  fontWeight: 'bold',
  textAnchor: 'middle',
}

class BarValueHelper extends React.Component<IProps> {
  static defaultProps = {
    labelAttrs: {},
    labelStyle: defaultLabelStyle,
    marginBottom: 8,
  }

  getStackedLabel(): string {
    const { data } = this.props;
    const labelVal = data.reduce((val: number, datum: IStackedData) => val + datum.value, 0);

    if (labelVal === 0) {
      return '';
    }

    return `${labelVal}`;
  }

  getStackedOffset(): number {
    const { data, marginBottom, scale, yOffset } = this.props;
    const offset = data.reduce((offset: number, datum: IStackedData) => {
      return offset - scale(datum.value);
    }, yOffset);

    return offset - marginBottom;
  }

  render(): React.ReactElement {
    const style = {
      ...defaultLabelStyle,
      ...this.props.labelStyle,
    };

    return (
      <text
        style={style}
        y={this.getStackedOffset()}
        {...this.props.labelAttrs}
      >
        {this.getStackedLabel()}
      </text>
    );
  }
}

export { BarValueHelper };
