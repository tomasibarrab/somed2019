export const ANIMATE_ALL = 'all';
export const ANIMATE_NONE = 'none';
export const ANIMATE_ONCHANGE = 'onchange';
export const NONE = 'none';
export const REDRAW = 'redraw';
export const SCALE = 'scale';

export const DEFAULT_ANIMATE = ANIMATE_ALL;

interface IHelpers {
  axis: {
    y: {
      normalizeValues: boolean;
      commaLargeValues: boolean;
      commaLargeValuesUtil(num: number): string;
      hideZero: boolean;
    }
  },
  area: {
    vertical: {
      ignoreGroup: boolean;
      show: boolean;
      styles: any;
      callback?(): any;
    },
    highlight: {
      show: boolean;
      start?: any;
      end?: any;
      offset: {
        min: any;
        max: any;
      },
      styles: any;
    },
    points: {
      show: boolean;
      styles: any;
      callback?(): any;
    },
  },
  bar: {
    animateXAxis: boolean;
    highlight: {
      show: boolean;
      callback?(): any;
    },
  },
}

export const HELPERS: IHelpers = {
  area: {
    highlight: {
      end: undefined,
      offset: {
        max: undefined,
        min: undefined,
      },
      show: false,
      start: undefined,
      styles: {},
    },
    points: {
      callback: undefined,
      show: false,
      styles: {},
    },
    vertical: {
      callback: undefined,
      ignoreGroup: false,
      show: false,
      styles: {},
    },
  },
  axis: {
    y: {
      commaLargeValues: false,
      commaLargeValuesUtil: (num) => new Intl.NumberFormat('en-US', { style: 'decimal' }).format(num), // a utility to convert values to comma'ized values
      hideZero: true,
      normalizeValues: true, // round numbers to pretty values
    },
  },
  bar: {
    animateXAxis: false,
    highlight: {
      callback: undefined,
      show: false,
    },
  },
};
