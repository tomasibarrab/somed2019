353d7c389ee3bfff89f8be4d4c1df930
"use strict";

/* istanbul ignore next */
var cov_1f7m3h6ebk = function () {
  var path = "/app/src/utils/theme/registerTheme.ts";
  var hash = "2e12e22f878c3ff62113cb5b97a887edd62c0cf5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/app/src/utils/theme/registerTheme.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 65
        }
      },
      "4": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "5": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 59
        }
      },
      "6": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 73
        }
      },
      "7": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "8": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "9": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "10": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 75
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 46
          },
          end: {
            line: 13,
            column: 47
          }
        },
        loc: {
          start: {
            line: 13,
            column: 69
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 53
          }
        }, {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 53
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "2e12e22f878c3ff62113cb5b97a887edd62c0cf5"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var __importDefault =
/* istanbul ignore next */
(cov_1f7m3h6ebk.s[0]++,
/* istanbul ignore next */
(cov_1f7m3h6ebk.b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1f7m3h6ebk.b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1f7m3h6ebk.b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1f7m3h6ebk.f[0]++;
  cov_1f7m3h6ebk.s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1f7m3h6ebk.b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1f7m3h6ebk.b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1f7m3h6ebk.b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1f7m3h6ebk.b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1f7m3h6ebk.s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var lodash_isequal_1 =
/* istanbul ignore next */
(cov_1f7m3h6ebk.s[3]++, __importDefault(require("lodash.isequal")));
var lodash_merge_1 =
/* istanbul ignore next */
(cov_1f7m3h6ebk.s[4]++, __importDefault(require("lodash.merge")));
var memoize_one_1 =
/* istanbul ignore next */
(cov_1f7m3h6ebk.s[5]++, __importDefault(require("memoize-one")));
var defaultTheme_1 =
/* istanbul ignore next */
(cov_1f7m3h6ebk.s[6]++, __importDefault(require("../../theme/defaultTheme")));
/**
 * Loads default theme and deep merge if there is a custom theme overwrite
 */

/* istanbul ignore next */
cov_1f7m3h6ebk.s[7]++;
exports.registerTheme = memoize_one_1.default(function (customTheme) {
  /* istanbul ignore next */
  cov_1f7m3h6ebk.f[1]++;
  cov_1f7m3h6ebk.s[8]++;

  if (customTheme === void 0) {
    /* istanbul ignore next */
    cov_1f7m3h6ebk.b[3][0]++;
    cov_1f7m3h6ebk.s[9]++;
    customTheme = {};
  } else
  /* istanbul ignore next */
  {
    cov_1f7m3h6ebk.b[3][1]++;
  }

  cov_1f7m3h6ebk.s[10]++;
  return lodash_merge_1.default({}, defaultTheme_1.default, customTheme);
}, lodash_isequal_1.default);