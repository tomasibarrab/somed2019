var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';
import ComponentsListRenderer from 'rsg-components/ComponentsList/ComponentsListRenderer';
import PropTypes from 'prop-types';
import getUrl from '../../utils/getUrl';

function ComponentsList(_ref) {
	var classes = _ref.classes,
	    items = _ref.items,
	    _ref$useIsolatedLinks = _ref.useIsolatedLinks,
	    useIsolatedLinks = _ref$useIsolatedLinks === undefined ? false : _ref$useIsolatedLinks;

	var mappedItems = items.map(function (item) {
		return _extends({}, item, {
			href: getUrl({
				name: item.name,
				slug: item.slug,
				anchor: !useIsolatedLinks,
				isolated: useIsolatedLinks
			})
		});
	});
	return React.createElement(ComponentsListRenderer, { classes: classes, items: mappedItems });
}

ComponentsList.propTypes = {
	items: PropTypes.array.isRequired,
	classes: PropTypes.object,
	useIsolatedLinks: PropTypes.bool
};

export default ComponentsList;