'use strict';function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}module.exports = function (SmartlingBaseService, HTTPService, HTTPLogging, SmartlingConstants, Utils, Promise) {var
  SmartlingDownloadService = function (_SmartlingBaseService) {_inherits(SmartlingDownloadService, _SmartlingBaseService);function SmartlingDownloadService() {_classCallCheck(this, SmartlingDownloadService);return _possibleConstructorReturn(this, _SmartlingBaseService.apply(this, arguments));}SmartlingDownloadService.

    fetch = function fetch(options) {
      return new SmartlingDownloadService().fetch(options);
    };SmartlingDownloadService.prototype.

    fetch = function fetch(options) {
      this.options = options;
      return Utils.promiseQueue([
      this.validateOptions.bind(this),
      this.makeRequest.bind(this)]);

    };SmartlingDownloadService.prototype.

    validateOptions = function validateOptions() {var _this2 = this;
      return new Promise(function (resolve, reject) {
        var options = _this2.options;
        if (!options.accessToken) {
          reject('Invalid Smartling Download Option accessToken is missing');
        }

        if (!options.projectId) {
          reject('Invalid Smartling Download Option projectId is missing');
        }

        if (!options.fileUri) {
          reject('Invalid Smartling Download Option fileUri is missing');
        }

        if (!options.localeIds) {
          reject('Invalid Smartling Download Option localeIds is missing');
        }

        if (!options.retrievalType) {
          reject('Invalid Smartling Download Option retrievalType is missing');
        }

        resolve(options);
      });
    };SmartlingDownloadService.prototype.

    makeRequest = function makeRequest(options) {
      return HTTPService.get(this.getRequestUrl(options)).
      set('Content-Type', 'application/json').
      set('Authorization', 'Bearer ' + options.accessToken).
      plugin(HTTPLogging).
      parseBinary().
      promiseBody();
    };SmartlingDownloadService.prototype.

    getRequestUrl = function getRequestUrl(options) {
      var baseUrl = '/files-api/v2/projects/' + options.projectId + '/files/zip';
      var queryString = '?fileUris[]=' + options.fileUri + '&localeIds[]=' + options.localeIds.join(',') + '&fileNameMode=' + options.fileNameMode + '&localeMode=' + options.localeMode + '&retrievalType=' + options.retrievalType; // eslint-disable-line max-len
      if (options.zipFileName !== undefined) {
        queryString += '&zipFileName=' + options.zipFileName;
      }

      if (options.includeOriginalStrings !== undefined) {
        queryString += '&includeOriginalStrings=' + options.includeOriginalStrings;
      }

      return '' + SmartlingConstants.host + baseUrl + queryString;
    };return SmartlingDownloadService;}(SmartlingBaseService);


  return SmartlingDownloadService;
};
//# sourceMappingURL=SmartlingDownloadService.js.map