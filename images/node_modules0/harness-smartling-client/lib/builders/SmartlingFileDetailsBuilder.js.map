{"version":3,"sources":["../../src/builders/SmartlingFileDetailsBuilder.js"],"names":["module","exports","Utils","fsPromise","path","Promise","_","SmartlingFileDetailsBuilder","sourceDirectoryPath","destinationDirectoryPath","fileUri","directoryNames","fileDetails","build","promiseQueue","_setValidDirectoryNames","bind","_setFileDetails","_getFileDetails","readdirAsync","filter","_filterInvalidDirectory","then","catch","entry","entryPath","join","statAsync","entryStats","isDirectory","_filterInvalidFile","filePath","fileEntryStats","isFile","isEmpty","reject","map","_mapFileDetail","directoryName","directoryEntryPath","localeName","toLowerCase","locale","directory","name","sourceFile","destinationFile"],"mappings":"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","file":"SmartlingFileDetailsBuilder.js","sourcesContent":["module.exports = function (Utils, fsPromise, path, Promise, _) {\n  class SmartlingFileDetailsBuilder {\n    constructor(sourceDirectoryPath, destinationDirectoryPath, fileUri) {\n      this.sourceDirectoryPath = sourceDirectoryPath;\n      this.destinationDirectoryPath = destinationDirectoryPath;\n      this.fileUri = fileUri;\n      this.directoryNames = null;\n      this.fileDetails = null;\n    }\n\n    static build(sourceDirectoryPath, destinationDirectoryPath, fileUri) {\n      return new SmartlingFileDetailsBuilder(sourceDirectoryPath, destinationDirectoryPath, fileUri).build();\n    }\n\n    build() {\n      return Utils.promiseQueue([\n        this._setValidDirectoryNames.bind(this),\n        this._setFileDetails.bind(this),\n        this._getFileDetails.bind(this)\n      ]);\n    }\n\n    _setValidDirectoryNames() {\n      return fsPromise.readdirAsync(this.sourceDirectoryPath)\n        .filter(this._filterInvalidDirectory.bind(this))\n        .then((directoryNames) => {\n          this.directoryNames = directoryNames;\n        })\n        .catch(() => false);\n    }\n\n    _filterInvalidDirectory(entry) {\n      const entryPath = path.join(this.sourceDirectoryPath, entry);\n\n      return fsPromise.statAsync(entryPath)\n        .then((entryStats) => (entryStats && entryStats.isDirectory()))\n        .then((isDirectory) => {\n          if (!isDirectory) {\n            return false;\n          }\n\n          return this._filterInvalidFile(entryPath);\n        })\n        .catch(() => false);\n    }\n\n    _filterInvalidFile(entryPath) {\n      const filePath = path.join(entryPath, this.fileUri);\n      return fsPromise.statAsync(filePath)\n        .then((fileEntryStats) => (fileEntryStats && fileEntryStats.isFile()));\n    }\n\n    _setFileDetails() {\n      if (_.isEmpty(this.directoryNames)) {\n        return Promise.reject(`'${this.sourceDirectoryPath}' did not have any valid directories.`);\n      }\n\n      return Promise.map(this.directoryNames, this._mapFileDetail.bind(this))\n        .then((fileDetails) => {\n          this.fileDetails = fileDetails;\n        });\n    }\n\n    _mapFileDetail(directoryName) {\n      const directoryEntryPath = path.join(this.sourceDirectoryPath, directoryName);\n      const localeName = directoryName.toLowerCase();\n\n      return {\n        locale: localeName,\n        directory: {\n          name: directoryName,\n          path: directoryEntryPath\n        },\n        sourceFile: path.join(directoryEntryPath, this.fileUri),\n        destinationFile: path.join(this.destinationDirectoryPath, `${localeName}.json`)\n      };\n    }\n\n    _getFileDetails() {\n      return this;\n    }\n  }\n\n  return SmartlingFileDetailsBuilder;\n};\n"]}