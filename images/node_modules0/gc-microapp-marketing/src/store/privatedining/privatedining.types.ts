// Private Dining data types
export interface RoomBase {
  active: boolean;
  imageURL: string;
  listingOrder: number;
  roomId: number;
  seatedSize: number;
  standingSize: number;
}

export interface RoomDTO extends RoomBase {
  imageName: string;
  privateRoomImageId: number;
  roomChangeMask: number;
  roomDescription: string;
  roomName: string;
}

export interface Room extends RoomDTO {
  photo: Photo;
}

export interface PrivateDiningBase {
  enablePrivateDining: boolean;
  hasPrivateParty: boolean;
  largestCapacity: number;
  locale: string;
  privateDiningThumbnailURL: string;
  privatePartyEmail: string;
  publishPrivateDining: boolean;
  rooms: RoomBase[];
}

export interface PrivateDiningBaseDTO extends PrivateDiningBase {
  rid: number;
}

export interface PrivateDiningDataDTO extends PrivateDiningBaseDTO {
  draftSubmitted: boolean;
  isPDDraft: number;
  languageID: number;
  modified: string;
  newPremiumRequest: boolean;
  requestId: number | null;
  partyShortDescription: string;
  partyLongDescription: string;
  pdChangeMask: number;
  premiumEnabled: boolean;
  privatePartyContact: string;
  privateDiningMenu: string;
  privateDiningThumbnail: string;
  privatePartyPhone: string;
  rooms: RoomDTO[];
  submittedBy: string;
  thumbnailImageID: number;
}

export interface PrivateDiningData extends PrivateDiningDataDTO {
  photo: Photo;
  privatePartyPhoneExt: string;
  rooms: Room[];
}

export interface PrivateDiningResponse {
  privateDiningData: PrivateDiningData;
}

export interface PrivateDiningEnabled {
  enabled: boolean;
  error: boolean;
  loading: boolean;
  requested: boolean;
}

export interface PrivateDining {
  error: boolean;
  loading: boolean;
  postStatus: Status;
  isFormEmpty: boolean;
  privateDiningData: null | PrivateDiningData;
}

export interface Photo {
  error: boolean;
  loading: boolean;
  liveUrl: null | string;
  localUrl: null | string;
  pendingUrl: null | string; // /restaurants/123/rooms/123/private-dining/photo
}

export const enum Status {
  Init = 'init',
  Started = 'started',
  Done = 'done',
  Failed = 'failed',
}
