// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReservationDates /> closed, startDate only, both, startDate only: closed 1`] = `
"<Provider store={{...}}>
  <IntlProvider messages={{...}} locale=\\"en-US\\">
    <ReduxForm description={{...}} legend={{...}} change={[Function: mockConstructor]}>
      <Connect(Form(FormValues)) description={{...}} legend={{...}} change={[Function: mockConstructor]} initialValues={[undefined]} touchOnBlur={true} touchOnChange={false} persistentSubmitErrors={false} destroyOnUnmount={true} shouldAsyncValidate={[Function: defaultShouldAsyncValidate]} shouldValidate={[Function: defaultShouldValidate]} shouldError={[Function: defaultShouldError]} shouldWarn={[Function: defaultShouldWarn]} enableReinitialize={false} keepDirtyOnReinitialize={false} updateUnregisteredFields={false} getFormState={[Function: getFormState]} pure={true} forceUnregisterOnUnmount={false} form=\\"createSpecial\\">
        <Form(FormValues) description={{...}} legend={{...}} change={[Function: boundChange]} initialValues={[undefined]} touchOnBlur={true} touchOnChange={false} persistentSubmitErrors={false} destroyOnUnmount={true} shouldAsyncValidate={[Function: defaultShouldAsyncValidate]} shouldValidate={[Function: defaultShouldValidate]} shouldError={[Function: defaultShouldError]} shouldWarn={[Function: defaultShouldWarn]} enableReinitialize={false} keepDirtyOnReinitialize={false} updateUnregisteredFields={false} getFormState={[Function: getFormState]} pure={true} forceUnregisterOnUnmount={false} form=\\"createSpecial\\" anyTouched={false} asyncErrors={[undefined]} asyncValidating={false} dirty={false} error={[undefined]} initialized={false} invalid={false} pristine={true} registeredFields={[undefined]} submitting={false} submitFailed={false} submitSucceeded={false} syncErrors={{...}} syncWarnings={{...}} triggerSubmit={[undefined]} values={{...}} valid={true} validExceptSubmit={true} warning={[undefined]} autofill={[Function]} clearFields={[Function]} clearSubmit={[Function]} clearSubmitErrors={[Function]} clearAsyncError={[Function]} destroy={[Function]} initialize={[Function]} registerField={[Function]} reset={[Function]} resetSection={[Function]} startAsyncValidation={[Function]} startSubmit={[Function]} stopAsyncValidation={[Function]} stopSubmit={[Function]} submit={[Function]} setSubmitFailed={[Function]} setSubmitSucceeded={[Function]} touch={[Function]} unregisterField={[Function]} untouch={[Function]} updateSyncErrors={[Function]} updateSyncWarnings={[Function]} arrayInsert={[Function: bound arrayInsert]} arrayMove={[Function: bound arrayMove]} arrayPop={[Function: bound arrayPop]} arrayPush={[Function: bound arrayPush]} arrayRemove={[Function: bound arrayRemove]} arrayRemoveAll={[Function: bound arrayRemoveAll]} arrayShift={[Function: bound arrayShift]} arraySplice={[Function: bound arraySplice]} arraySwap={[Function: bound arraySwap]} arrayUnshift={[Function: bound arrayUnshift]} blur={[Function: boundBlur]} array={{...}} focus={[Function: bound focus]} dispatch={[Function: dispatch]}>
          <FormValues array={{...}} anyTouched={false} asyncValidate={[Function]} asyncValidating={false} blur={[Function]} change={[Function]} clearSubmit={[Function]} destroy={[Function]} dirty={false} dispatch={[Function: dispatch]} error={[undefined]} form=\\"createSpecial\\" handleSubmit={[Function]} initialize={[Function]} initialized={false} initialValues={[undefined]} invalid={false} pristine={true} reset={[Function]} resetSection={[Function]} submitting={false} submitFailed={false} submitSucceeded={false} touch={[Function]} untouch={[Function]} valid={true} warning={[undefined]} description={{...}} legend={{...}} pure={true} triggerSubmit={[undefined]} autofill={[Function]} clearFields={[Function]} clearSubmitErrors={[Function]} clearAsyncError={[Function]} submit={[Function]}>
            <Connect(Component) sectionPrefix={[undefined]} array={{...}} anyTouched={false} asyncValidate={[Function]} asyncValidating={false} blur={[Function]} change={[Function]} clearSubmit={[Function]} destroy={[Function]} dirty={false} dispatch={[Function: dispatch]} error={[undefined]} form=\\"createSpecial\\" handleSubmit={[Function]} initialize={[Function]} initialized={false} initialValues={[undefined]} invalid={false} pristine={true} reset={[Function]} resetSection={[Function]} submitting={false} submitFailed={false} submitSucceeded={false} touch={[Function]} untouch={[Function]} valid={true} warning={[undefined]} description={{...}} legend={{...}} pure={true} triggerSubmit={[undefined]} autofill={[Function]} clearFields={[Function]} clearSubmitErrors={[Function]} clearAsyncError={[Function]} submit={[Function]}>
              <Component sectionPrefix={[undefined]} array={{...}} anyTouched={false} asyncValidate={[Function]} asyncValidating={false} blur={[Function]} change={[Function]} clearSubmit={[Function]} destroy={[Function]} dirty={false} dispatch={[Function: dispatch]} error={[undefined]} form=\\"createSpecial\\" handleSubmit={[Function]} initialize={[Function]} initialized={false} initialValues={[undefined]} invalid={false} pristine={true} reset={[Function]} resetSection={[Function]} submitting={false} submitFailed={false} submitSucceeded={false} touch={[Function]} untouch={[Function]} valid={true} warning={[undefined]} description={{...}} legend={{...}} pure={true} triggerSubmit={[undefined]} autofill={[Function]} clearFields={[Function]} clearSubmitErrors={[Function]} clearAsyncError={[Function]} submit={[Function]} startDate={[undefined]}>
                <ReservationDates array={{...}} anyTouched={false} asyncValidate={[Function]} asyncValidating={false} blur={[Function]} change={[Function]} clearSubmit={[Function]} destroy={[Function]} dirty={false} dispatch={[Function: dispatch]} error={[undefined]} form=\\"createSpecial\\" handleSubmit={[Function]} initialize={[Function]} initialized={false} initialValues={[undefined]} invalid={false} pristine={true} reset={[Function]} resetSection={[Function]} submitting={false} submitFailed={false} submitSucceeded={false} touch={[Function]} untouch={[Function]} valid={true} warning={[undefined]} description={{...}} legend={{...}} pure={true} triggerSubmit={[undefined]} autofill={[Function]} clearFields={[Function]} clearSubmitErrors={[Function]} clearAsyncError={[Function]} submit={[Function]} startDate={[undefined]}>
                  <Fieldset className=\\"reservation-dates\\" description=\\"start date desc\\" legend=\\"start date legend\\" disabled={false}>
                    <fieldset className=\\"gca-fieldset reservation-dates\\" disabled={false}>
                      <legend className=\\"screenreader-only\\">
                        start date legend
                      </legend>
                      <div className=\\"wrapper\\" disabled={false}>
                        <div className=\\"meta\\">
                          <div aria-hidden=\\"true\\" role=\\"presentation\\" className=\\"legend\\">
                            start date legend
                          </div>
                          <div className=\\"description\\">
                            start date desc
                          </div>
                        </div>
                        <div className=\\"content\\" disabled={false}>
                          <div className=\\"read-only\\">
                            <label>
                              Monday, Dec 04, 2017
                            </label>
                            <Button onClick={[Function: onClick]} theme=\\"link\\" disabled={false} htmlType=\\"button\\" type=\\"button\\">
                              <button className=\\"gca-button link\\" href={[undefined]} to={[undefined]} disabled={[undefined]} type=\\"button\\" onClick={[Function: onClick]}>
                                <span className=\\"button-content\\">
                                  <wrappedIcon height=\\"25\\" color=\\"#76b4e2\\">
                                    <Component height=\\"25\\" color=\\"#76b4e2\\" width=\\"23.517267267267265\\">
                                      <svg height=\\"25\\" width=\\"23.517267267267265\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 25.06 26.64\\">
                                        <title>
                                          Edit Pencil
                                        </title>
                                        <path fill=\\"none\\" stroke=\\"#76b4e2\\" strokeLinecap=\\"round\\" strokeLinejoin=\\"round\\" d=\\"M16.91,5.77,20.19,9,8.38,20.87,3.65,22.32,5.1,17.58,18.36,4.32,21.65,7.6,8.38,20.87m-.09,0L5.1,17.67\\" />
                                      </svg>
                                    </Component>
                                  </wrappedIcon>
                                </span>
                              </button>
                            </Button>
                          </div>
                        </div>
                        <div className=\\"sidebar\\" />
                      </div>
                    </fieldset>
                  </Fieldset>
                </ReservationDates>
              </Component>
            </Connect(Component)>
          </FormValues>
        </Form(FormValues)>
      </Connect(Form(FormValues))>
    </ReduxForm>
  </IntlProvider>
</Provider>"
`;
