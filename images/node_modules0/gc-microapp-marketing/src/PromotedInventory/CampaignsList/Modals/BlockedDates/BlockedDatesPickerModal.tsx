import { Modal, ModalHeader } from 'gca-react-components';
import React from 'react';
import { InjectedIntlProps, injectIntl } from 'react-intl';

import {
    CampaignType, PutSuppressionDatesPayload, SuppressionDates,
} from '../../../../store/campaigns/campaigns.types';
import BlockedDatesPicker, { DateAttributes } from './BlockedDatesPicker';
import { convertSuppressionDatesToMap, translateMap } from './suppression-dates-manipulator';

interface OP {
  campaign: CampaignType;
  confirm: (payload: PutSuppressionDatesPayload) => void;
  close: () => void;
}

type Props = OP & InjectedIntlProps;

interface ComponentState {
  suppressionDates: SuppressionDates;
}

/* P, S */
class BlockedDatesPickerModal extends React.Component<Props, ComponentState> {
  public constructor(props: any) {
    super(props);
    const { campaign } = props;
    this.state = {
      suppressionDates: campaign.suppressionDates,
    };
  }

  public render() {
    return (
      <Modal onClose={this.props.close} modalClass="edit-blocked-dates-modal">
        <ModalHeader
          onClose={this.props.close}
          title={this.props.intl.formatMessage({ id: 'guestcampaigns.list.title.edit_blocked_days' })}
        />
        <BlockedDatesPicker
          blocked={convertSuppressionDatesToMap(this.state.suppressionDates)}
          setSuppressionDates={this.setSuppressionDates}
        />
      </Modal>
    );
  }

  public setSuppressionDates = (datesMap: Map<string, DateAttributes>) => {
    this.props.confirm({
      campaignId: this.props.campaign.campaignId!,
      ...translateMap(datesMap),
    });
    this.props.close();
  };
}

export default injectIntl(BlockedDatesPickerModal);
