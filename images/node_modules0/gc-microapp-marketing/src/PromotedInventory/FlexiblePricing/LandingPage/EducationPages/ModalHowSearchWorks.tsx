import { ModalWrapper } from 'gca-react-components';
import React, { SFC } from 'react';
import { FormattedMessage, injectIntl } from 'react-intl';
import './ModalHowSearchWorks.scss';

interface Props {
  intl: ReactIntl.InjectedIntl;
  onConfirm: () => void;
}

const ModalHowSearchWorks: SFC<Props> = ({ intl: { formatMessage }, onConfirm }) => {
  return (
    <ModalWrapper
      confirmButtonText={formatMessage({ id: 'gifts.finished.ok_got_it' })}
      onCancel={onConfirm}
      onConfirm={onConfirm}
      title={formatMessage({ id: 'flexiblepricing.educationpage.discoveryexplanation.content.col3helptitle' })}
    >
      <article className="flexible-pricing-modal">
        <FormattedMessage
          id="flexiblepricing.educationpage.discoveryexplanation.content.col3helpdescription"
          tagName="h3"
        />
        <ol>
          <li>
            <FormattedMessage
              id="flexiblepricing.educationpage.discoveryexplanation.content.col3helplistitem1"
              values={{ availability: <strong>availability</strong> }}
            />
          </li>
          <li>
            <FormattedMessage
              id="flexiblepricing.educationpage.discoveryexplanation.content.col3helplistitem2"
              values={{ criteria: <strong>criteria</strong> }}
            />
            <ul>
              {['reviews', 'diner_preferences', 'campaigns', 'menus'].map(key => (
                <FormattedMessage
                  id={`flexiblepricing.educationpage.discoveryexplanation.content.criteria.${key}`}
                  key={key}
                  tagName="li"
                />
              ))}
            </ul>
          </li>
          <li>
            <FormattedMessage
              id="flexiblepricing.educationpage.discoveryexplanation.content.col3helplistitem3"
              values={{ boost: <strong>boost</strong> }}
            />
          </li>
        </ol>
      </article>
    </ModalWrapper>
  );
};

export default injectIntl(ModalHowSearchWorks);
