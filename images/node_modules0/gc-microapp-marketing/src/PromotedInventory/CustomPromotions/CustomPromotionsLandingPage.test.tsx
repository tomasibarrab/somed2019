import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { create } from 'react-test-renderer';
import configureMockStore from 'redux-mock-store';
import { keys } from '../../translations/bundles/marketing.json';
import CustomPromotionsLandingPage from './CustomPromotionsLandingPage';

describe('<CustomPromotionsLandingPage />', () => {
  const scenarios = [
    {
      description: 'to match snapshot when featureGcaPiCreateCustomPromotion is false',
      features: { featureGcaPiCreateCustomPromotion: false },
    },
    {
      description: 'to match snapshot when featureGcaPiCreateCustomPromotion is true',
      features: { featureGcaPiCreateCustomPromotion: true },
    },
  ];

  scenarios.forEach(({ description, features }) => {
    it(description, () => {
      const state = {
        featureToggles: { features },
      };
      const store = configureMockStore([])(state);
      const component = create(
        <Provider store={store}>
          <IntlProvider locale="en-US" messages={keys}>
            <CustomPromotionsLandingPage />
          </IntlProvider>
        </Provider>,
      );

      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });
  });
});
