86d2740d1d8055c70af0281f72e09f2a
"use strict";

/* istanbul ignore next */
var cov_cjpcbhipx = function () {
  var path = "/app/src/theme/defaultTheme.ts";
  var hash = "9c5bed0352a0fd60903ed0885af450289dc47e2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/app/src/theme/defaultTheme.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 57
        }
      },
      "2": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "3": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 185,
          column: 1
        }
      },
      "4": {
        start: {
          line: 186,
          column: 0
        },
        end: {
          line: 186,
          column: 24
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {},
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "9c5bed0352a0fd60903ed0885af450289dc47e2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_cjpcbhipx.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
}); // tslint:disable

var token_common_1 =
/* istanbul ignore next */
(cov_cjpcbhipx.s[1]++, require("otkit-colors/token.common"));
var settings =
/* istanbul ignore next */
(cov_cjpcbhipx.s[2]++, {
  fillOpacity: 1,
  fillOpacityOver: 1,
  labelX: '#333333',
  labelY: '#9B9B9B',
  primary: token_common_1.violetLight,
  strokeDasharray: '10, 5',
  strokeOpacity: 1,
  strokeOpacityOver: 1,
  strokeWidth: 0,
  tickX: token_common_1.ashLighter,
  tickY: token_common_1.ashLightest,
  tickYFirst: token_common_1.ashLighter
});
var theme =
/* istanbul ignore next */
(cov_cjpcbhipx.s[3]++, {
  area: {
    cursor: 'default',
    // Curve Explorer: https://bl.ocks.org/d3noob/ced1b9b18bd8192d2c898884033b5529
    curve: 'curveMonotoneX',
    path: {
      eventFill: 'transparent',
      eventFillOpacity: 0,
      eventStroke: 'transparent',
      eventStrokeOpacity: 0,
      eventStrokeWidth: 12
    },
    pose: {
      enter: {
        delay: 300
      },
      exit: {
        delay: 200
      }
    },
    single: {
      pose: {
        enter: {
          delay: 50
        }
      },
      radius: 5
    },
    snap: ['auto', 'auto']
  },
  axis: {
    x: {
      easing: {
        opacity: 'gentle',
        x: 'stiff'
      },
      label: {
        color: settings.labelX
      },
      stroke: {
        fill: token_common_1.ashLighter,
        height: 1
      },
      tick: {
        fill: settings.tickX,
        height: 1
      }
    },
    y: {
      isAnimated: false,
      label: {
        color: settings.labelY
      },
      stroke: {
        fill: 'transparent',
        width: 1
      },
      tick: {
        fill: settings.tickY,
        height: 1
      },
      tickFirst: {
        fill: settings.tickYFirst,
        height: 1
      }
    }
  },
  bar: {
    easing: {
      height: {
        damping: 40,
        stiffness: 300
      },
      transformX: 'noWobble',
      y: {
        damping: 40,
        stiffness: 300
      },
      yOffset: {
        damping: 40,
        stiffness: 300
      }
    }
  },
  bars: {
    default: {
      cursor: 'pointer',
      fill: settings.primary,
      width: 60
    },
    easing: {
      opacity: 'gentle',
      x: 'stiff'
    }
  },
  common: {
    fill: settings.primary,
    fillOpacity: settings.fillOpacity,
    mouseOver: {
      fill: settings.primary,
      fillOpacity: settings.fillOpacityOver,
      stroke: settings.primary,
      strokeOpacity: settings.strokeOpacityOver
    },
    stroke: token_common_1.ashLighter,
    strokeDasharray: settings.strokeDasharray,
    strokeOpacity: settings.strokeOpacity,
    strokeWidth: settings.strokeWidth
  },
  container: {
    background: 'transparent'
  },
  helpers: {
    area: {
      highlight: {
        fill: token_common_1.ashLightest,
        opacity: 0.6,
        stroke: 'transparent',
        strokeWidth: 0
      },
      points: {
        fill: '#FFFFFF',
        opacity: 1,
        pose: {
          enter: {
            delay: 50
          }
        },
        radius: 5,
        stroke: settings.primary,
        strokeWidth: 2
      },
      vertical: {
        dot: {
          fill: '#FFFFFF',
          opacity: 1,
          radius: 5,
          stroke: settings.primary,
          strokeWidth: 2
        },
        line: {
          fill: token_common_1.ashLighter,
          opacity: 1,
          width: 1
        }
      }
    },
    bar: {
      highlight: {
        bar: {
          fill: token_common_1.ashLightest,
          opacity: 1
        },
        border: {
          fill: token_common_1.ashLighter,
          height: 3,
          opacity: 1
        }
      }
    }
  },
  label: {
    fontFamily: 'Arial, sans-serif',
    fontSize: '13px',
    textAnchor: 'middle'
  }
});

/* istanbul ignore next */
cov_cjpcbhipx.s[4]++;
exports.default = theme;