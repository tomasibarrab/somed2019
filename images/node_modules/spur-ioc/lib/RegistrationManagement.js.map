{"version":3,"sources":["../src/RegistrationManagement.js"],"names":["rfileFilter","hasOwnProp","source","propertyName","Object","prototype","hasOwnProperty","call","registerFolder","rootDir","dir","dirname","resolve","libs","filter","registerLibMap","each","value","name","lib","isFunction","addResolvableDependency","isObject","registerFolders","dirs","registerLibraries","libraries","logger","warn","addDependency","require","registerDependencies","dependencies"],"mappings":"uCAAA,yC;AACA,4B;AACA,gC;;AAEA,IAAMA,cAAc,yBAApB;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAAUC,MAAV,EAAkBC,YAAlB,EAAgC;AACjD,SAAOC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,MAArC,EAA6CC,YAA7C,CAAP;AACD,CAFD,C;;AAIe;AACbK,gBADa,0BACEC,OADF,EACWC,GADX,EACgB;AAC3B,QAAMC,UAAU,eAAKC,OAAL,CAAaH,OAAb,EAAsBC,GAAtB,CAAhB;AACA,QAAMG,OAAO,0BAAW;AACtBF,sBADsB;AAEtBG,cAAQd,WAFc,EAAX,CAAb;;AAIA,SAAKe,cAAL,CAAoBF,IAApB;AACA,WAAO,IAAP;AACD,GATY;;AAWbE,gBAXa,0BAWEF,IAXF,EAWQ;AACnB,qBAAEG,IAAF,CAAOH,IAAP,EAAa,UAACI,KAAD,EAAQC,IAAR,EAAiB;AAC5B,UAAIjB,WAAWY,IAAX,EAAiBK,IAAjB,CAAJ,EAA4B;AAC1B,YAAMC,MAAMN,KAAKK,IAAL,CAAZ;AACA,YAAI,iBAAEE,UAAF,CAAaD,GAAb,CAAJ,EAAuB;AACrB,gBAAKE,uBAAL,CAA6BH,IAA7B,EAAmCC,GAAnC;AACD,SAFD,MAEO,IAAI,iBAAEG,QAAF,CAAWH,GAAX,CAAJ,EAAqB;AAC1B,gBAAKJ,cAAL,CAAoBI,GAApB;AACD;AACF;AACF,KATD;AAUA,WAAO,IAAP;AACD,GAvBY;;AAyBbI,iBAzBa,2BAyBGd,OAzBH,EAyBYe,IAzBZ,EAyBkB;AAC7B,qBAAER,IAAF,CAAOQ,IAAP,EAAa,uBAAO,OAAKhB,cAAL,CAAoBC,OAApB,EAA6BC,GAA7B,CAAP,EAAb;AACA,WAAO,IAAP;AACD,GA5BY;;AA8Bbe,mBA9Ba,6BA8BKC,SA9BL,EA8BgB;AAC3B,SAAKC,MAAL,CAAYC,IAAZ;AACE,8FADF;;;AAIA,qBAAEZ,IAAF,CAAOU,SAAP,EAAkB,UAACT,KAAD,EAAQC,IAAR,EAAiB;AACjC,UAAIjB,WAAWyB,SAAX,EAAsBR,IAAtB,CAAJ,EAAiC;AAC/B,YAAMC,MAAMO,UAAUR,IAAV,CAAZ;AACA,eAAKW,aAAL,CAAmBX,IAAnB,EAAyBY,QAAQX,GAAR,CAAzB,EAF+B,CAES;AACzC;AACF,KALD;AAMA,WAAO,IAAP;AACD,GA1CY;;AA4CbY,sBA5Ca,gCA4CQC,YA5CR,EA4CsB;AACjC,qBAAEhB,IAAF,CAAOgB,YAAP,EAAqB,UAACf,KAAD,EAAQC,IAAR,EAAiB;AACpC,UAAIjB,WAAW+B,YAAX,EAAyBd,IAAzB,CAAJ,EAAoC;AAClC,YAAMC,MAAMa,aAAad,IAAb,CAAZ;AACA,eAAKW,aAAL,CAAmBX,IAAnB,EAAyBC,GAAzB;AACD;AACF,KALD;AAMA,WAAO,IAAP;AACD,GApDY,E","file":"RegistrationManagement.js","sourcesContent":["import requireAll from 'require-all';\nimport path from 'path';\nimport _ from 'lodash';\n\nconst rfileFilter = /(.+)\\.(js|json|coffee)$/;\n\nconst hasOwnProp = function (source, propertyName) {\n  return Object.prototype.hasOwnProperty.call(source, propertyName);\n};\n\nexport default {\n  registerFolder(rootDir, dir) {\n    const dirname = path.resolve(rootDir, dir);\n    const libs = requireAll({\n      dirname,\n      filter: rfileFilter\n    });\n    this.registerLibMap(libs);\n    return this;\n  },\n\n  registerLibMap(libs) {\n    _.each(libs, (value, name) => {\n      if (hasOwnProp(libs, name)) {\n        const lib = libs[name];\n        if (_.isFunction(lib)) {\n          this.addResolvableDependency(name, lib);\n        } else if (_.isObject(lib)) {\n          this.registerLibMap(lib);\n        }\n      }\n    });\n    return this;\n  },\n\n  registerFolders(rootDir, dirs) {\n    _.each(dirs, dir => this.registerFolder(rootDir, dir));\n    return this;\n  },\n\n  registerLibraries(libraries) {\n    this.logger.warn(\n      'registerLibraries is deprecated, use registerDependencies with explicit require instead.'\n    );\n\n    _.each(libraries, (value, name) => {\n      if (hasOwnProp(libraries, name)) {\n        const lib = libraries[name];\n        this.addDependency(name, require(lib)); // eslint-disable-line global-require\n      }\n    });\n    return this;\n  },\n\n  registerDependencies(dependencies) {\n    _.each(dependencies, (value, name) => {\n      if (hasOwnProp(dependencies, name)) {\n        const lib = dependencies[name];\n        this.addDependency(name, lib);\n      }\n    });\n    return this;\n  }\n};\n"]}