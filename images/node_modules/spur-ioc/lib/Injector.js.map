{"version":3,"sources":["../src/Injector.js"],"names":["Injector","name","logger","create","bindAll","dependencies","assign","prototype"],"mappings":";AACA;;AAEA,gC;AACA,kC;AACA,4D;AACA,8D;AACA,kE,kUAPA;;AASMA,Q;AACJ,sBAAmE,KAAvDC,IAAuD,uEAAhD,oBAAgD,KAA1BC,MAA0B,uEAAjB,iBAAOC,MAAP,EAAiB;AACjE,qBAAEC,OAAF,CAAU,IAAV,EAAgB,mBAAhB;AACA,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKG,YAAL,GAAoB,EAApB;AACD,G;;AAEMF,Q,mBAAOF,I,EAAMC,M,EAAQ;AAC1B,WAAO,IAAIF,QAAJ,CAAaC,IAAb,EAAmBC,MAAnB,CAAP;AACD,G;;;AAGH,iBAAEI,MAAF,CAASN,SAASO,SAAlB,mG;;AAEeP,Q","file":"Injector.js","sourcesContent":["// Register coffeescript for any CS dependencies\nimport 'coffee-script/register';\n\nimport _ from 'lodash';\nimport Logger from './Logger';\nimport ContainerManagement from './ContainerManagement';\nimport DependencyManagement from './DependencyManagement';\nimport RegistrationManagement from './RegistrationManagement';\n\nclass Injector {\n  constructor(name = 'anonymous_injector', logger = Logger.create()) {\n    _.bindAll(this, 'resolveDependency');\n    this.name = name;\n    this.logger = logger;\n    this.dependencies = {};\n  }\n\n  static create(name, logger) {\n    return new Injector(name, logger);\n  }\n}\n\n_.assign(Injector.prototype, ContainerManagement, DependencyManagement, RegistrationManagement);\n\nexport default Injector;\n"]}