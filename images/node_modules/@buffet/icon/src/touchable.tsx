import classnames from 'classnames/bind';
import React, { ButtonHTMLAttributes } from 'react';
import { Icon, IconId, IconProps } from './icon';
import styles from './icon.css';

const cx = classnames.bind(styles);

export type Position = 'left' | 'right';

interface TouchableProps extends IconProps, ButtonHTMLAttributes<HTMLButtonElement> {
  iconId: IconId;
  text?: React.ReactNode;
  iconClassName?: string;
  iconPosition?: Position;
  testId?: string;
}

export const Touchable = React.forwardRef<HTMLButtonElement, TouchableProps>((props, ref) => {
  const { className, iconClassName, onClick, text, iconId, testId, iconPosition = 'left', ...rest } = props;
  const touchableStyles = cx('touchable', className);

  const iconClassNames = cx(iconClassName, {
    iconLeft: iconPosition === 'left',
    iconRight: iconPosition !== 'left'
  });

  return (
    <button ref={ref} className={touchableStyles} onClick={onClick} data-testid={testId} {...rest}>
      <Icon iconId={iconId} className={iconClassNames} />
      {text}
    </button>
  );
});
