import React from 'react';
import { storiesOf } from '@storybook/react';
import { withReadme } from 'storybook-readme';
import { FeatureToggleProvider, FeatureToggle } from './src/FeatureToggleContext';
import mock, { delay } from 'xhr-mock';
import featureToggleFixture from './fixtures/featureToggles';
import README from './README.md';

class FeatureToggleContextStory extends React.Component {
  render() {
    (window as any).gcScope = {
      id: 1906,
      type: 'restaurant'
    };

    mock.setup();
    mock.get(
      '/gateway/proxies/featureManager/v3/api/restaurant/1906/toggles',
      delay(
        {
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(featureToggleFixture)
        },
        1500
      )
    );

    return (
      <FeatureToggleProvider>
        <FeatureToggle feature="transientAccountMyProfileComponent" hide={true}>
          {({ showFeature }) => showFeature && "You won't see me!"}
        </FeatureToggle>
        <FeatureToggle feature="transientSketchyFeature" hide={true}>
          {({ showFeature }) => showFeature && 'You will see me!'}
        </FeatureToggle>
        <FeatureToggle feature="feature">
          {({ showFeature, status }) => {
            if (status === 'done') {
              return <div>"feature" is {showFeature ? 'shown' : 'hidden'}!</div>;
            } else if (status === 'started' || status === 'init') {
              return <div>loadingâ€¦</div>;
            } else {
              return <div>oops!</div>;
            }
          }}
        </FeatureToggle>
      </FeatureToggleProvider>
    );
  }
}

storiesOf('FeatureToggleContext', module)
  .addDecorator(withReadme(README))
  .add('FeatureToggleContext', () => {
    return <FeatureToggleContextStory />;
  });
