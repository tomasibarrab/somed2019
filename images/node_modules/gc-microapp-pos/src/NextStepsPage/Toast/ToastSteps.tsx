import { Button } from '@buffet/button';
import eventTracker from '@buffet/event-tracker';
import { TransitionableFooter } from '@buffet/user-agreement';
import React from 'react';
import { FormattedMessage } from 'react-intl';
import ChangePosBtn from '../../common/ChangePosBtn/ChangePosBtn';
import { gaTrackTypes } from '../../constants';
import '../Steps.scss';

interface ToastStepsProps {
  onDone: () => void;
}

function gaToastLinkHandler() {
  eventTracker.sendEvent({
    action: gaTrackTypes.actions.clickLink,
    category: gaTrackTypes.category,
    label: 'next-steps:partner-connect',
  });
}

const partnerConnectLink = (
  <a
    href="https://www.toasttab.com/restaurants/admin/integrations/add/2af43bf9-6d75-47c3-b101-c266a4a4f855"
    target="_blank"
    onClick={gaToastLinkHandler}
  >
    <FormattedMessage id={'nextsteps.pos.toast.stepone.partnerconnect'} />
  </a>
);

const ToastSteps = (props: ToastStepsProps) => (
  <div className="steps-container">
    <div className="steps-content">
      <FormattedMessage id="nextsteps.pos.header" tagName="h1" />
      <ol>
        <FormattedMessage
          id="nextsteps.pos.toast.stepone"
          tagName="li"
          values={{
            partnerConnectLink,
          }}
        />
        <FormattedMessage id="nextsteps.pos.toast.steptwo" tagName="li" />
        <FormattedMessage id="nextsteps.pos.toast.stepthree" tagName="li" />
      </ol>
    </div>
    <TransitionableFooter className="onboarding__nextsteps-footer" show>
      <ChangePosBtn />
      <Button
        type="button"
        onClick={() => {
          props.onDone();

          eventTracker.sendEvent({
            action: gaTrackTypes.actions.nagivate,
            category: gaTrackTypes.category,
            label: 'next-steps:next:toast-waiting',
          });
        }}
        theme="primary"
      >
        <FormattedMessage id="nextsteps.pos.toast.submitButton" />
      </Button>
    </TransitionableFooter>
  </div>
);

export default ToastSteps;
