import { shallowWithIntl } from 'gca-jest-config';
import React from 'react';
import { mapStateToProps, PureModalManager as ModalManager } from './ModalManager';

describe('<ModalManager />', () => {
  let wrapper;
  const props = {
    closeModal: jest.fn(),
    confirmCloseModal: jest.fn(),
  };

  beforeEach(() => {
    wrapper = shallowWithIntl(<ModalManager {...props} />);
  });

  it('should render all Modals closed when no currentModal is set', () => {
    wrapper = shallowWithIntl(<ModalManager {...props} />);
    expect(wrapper).toMatchSnapshot();
  });

  it('should render open the DeleteUser Modal', () => {
    wrapper = shallowWithIntl(<ModalManager {...props} currentModal="DELETE_USER" />);
    expect(wrapper).toMatchSnapshot();
  });

  it('should render open the Error Modal', () => {
    wrapper = shallowWithIntl(<ModalManager {...props} currentModal="ERROR" />);
    expect(wrapper).toMatchSnapshot();
  });
});

describe('mapStateToProps', () => {
  it('should return an object', () => {
    const props = mapStateToProps({ modals: { currentModal: 'TEST', modalPayload: { userId: 123 } } });
    expect(typeof props).toBe('object');
  });
});
