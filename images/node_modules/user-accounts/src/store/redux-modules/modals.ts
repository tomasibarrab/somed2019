import 'rxjs/add/operator/mapTo';

import { AnyAction } from 'redux';
import { ModalsState } from '../types';

// --------------------------------- //
// Types
// --------------------------------- //

// export interface ModalsState {
//   currentModal: string | null;
// }

/**
 * Constants
 */

export const OPEN_MODAL = 'modals/OPEN_MODAL';
export const CLOSE_MODAL = 'modals/CLOSE_MODAL';
export const CONFIRM_CLOSE_MODAL = 'modals/CONFIRM_CLOSE_MODAL';

// --------------------------------- //
// Actions
// --------------------------------- //

export function openModal(payload: any) {
  return {
    payload,
    type: OPEN_MODAL,
  };
}

export function closeModal() {
  return {
    type: CLOSE_MODAL,
  };
}

export function confirmCloseModal() {
  return {
    type: CONFIRM_CLOSE_MODAL,
  };
}

export const initialState: ModalsState = {
  currentModal: null,
  modalPayload: {},
};

// --------------------------------- //
// Reducer
// --------------------------------- //

export function modalReducer(state: ModalsState = initialState, action: AnyAction) {
  switch (action.type) {
    case CONFIRM_CLOSE_MODAL:
      return {
        ...state,
        currentModal: null,
      };

    case OPEN_MODAL:
      return {
        ...state,
        currentModal: action.payload.modal,
        modalPayload: action.payload.modalPayload || {},
      };

    case CLOSE_MODAL:
      return {
        ...state,
        currentModal: null,
        modalPayload: {},
      };

    default:
      return state;
  }
}

// --------------------------------- //
// Epics
// --------------------------------- //

