import { createMixpanelMiddleware, mixpanel } from 'gca-react-components';

import { actions as currentUserActions } from './redux-modules/currentUser';
import { actions as roleActions } from './redux-modules/roles';
import { actions as userActions } from './redux-modules/users';

const USER_ACCOUNTS = 'User Accounts';
const RESTAURANT_ROLES = 'Restaurant Roles';

const trackedActions = {
  [userActions.fetchSearchUsers.started.type]: mixpanel.createLoadPageEvent({
    feature: USER_ACCOUNTS,
  }),
  [currentUserActions.addNewUser.started.type]: mixpanel.createPublishEvent({
    action: mixpanel.actionNames.CREATE,
    feature: USER_ACCOUNTS,
  }),
  [currentUserActions.updateExistingUser.started.type]: mixpanel.createPublishEvent({
    action: mixpanel.actionNames.UPDATE,
    feature: USER_ACCOUNTS,
  }),
  [userActions.deleteUser.done.type]: mixpanel.createPublishEvent({
    action: mixpanel.actionNames.DELETE,
    feature: USER_ACCOUNTS,
  }),
  [roleActions.fetchPermissions.started.type]: mixpanel.createLoadPageEvent({
    feature: RESTAURANT_ROLES,
  }),
  [roleActions.saveRole.started.type]: mixpanel.createPublishEvent({
    action: mixpanel.actionNames.UPDATE,
    feature: RESTAURANT_ROLES,
  }),
};

export default createMixpanelMiddleware({
  defaultProps: {
    app: 'User Accounts',
  },
  trackedActions,
});
