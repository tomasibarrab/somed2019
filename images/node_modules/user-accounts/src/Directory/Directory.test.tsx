import { shallowWithIntl } from 'gca-jest-config';
import * as React from 'react';

import { PureDirectory as Directory } from './Directory';


// tslint:disable-next-line:no-var-requires
const users = require('../../fixtures/users-newroles.json');

describe('Directory', () => {

  const currentUserState = {
    status: {},
    user: {},
  };

  it('should render the basic as the snapshot', () => {
    const wrapper = shallowWithIntl(
      <Directory
        fetchStatus="done"
        currentUser={currentUserState}
        users={users}
        confirmDelete={jest.fn}
        fetchUsersRequest={jest.fn}
        resetUser={jest.fn}
        sortUsers={jest.fn as any}
        appScope={{ type: 'restaurant' }}
      />,
    );
    expect(wrapper).toMatchSnapshot();
  });

  it('sorted by lastName should render the basic as the snapshot', () => {
    const wrapper = shallowWithIntl(
      <Directory
        fetchStatus="done"
        currentUser={currentUserState}
        users={users}
        sorted={{ lastName: 'asc'}}
        confirmDelete={jest.fn}
        fetchUsersRequest={jest.fn}
        resetUser={jest.fn}
        sortUsers={jest.fn as any}
        appScope={{ type: 'restaurant' }}
      />,
    );
    expect(wrapper).toMatchSnapshot();
  });

  it('sorted by title should render the basic as the snapshot', () => {
    const wrapper = shallowWithIntl(
      <Directory
        fetchStatus="done"
        currentUser={currentUserState}
        users={users}
        sorted={{ title: 'asc'}}
        confirmDelete={jest.fn}
        fetchUsersRequest={jest.fn}
        resetUser={jest.fn}
        sortUsers={jest.fn as any}
        appScope={{ type: 'restaurant' }}
      />,
    );
    expect(wrapper).toMatchSnapshot();
  });

});
