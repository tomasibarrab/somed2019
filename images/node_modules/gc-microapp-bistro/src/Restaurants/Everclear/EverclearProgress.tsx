import { compose, equals, pathOr, propOr } from 'ramda';
import React from 'react';

import { AsyncProgress, AsyncStatus } from 'shared-react-utils/useAsync/useAsync';

import LoadingIcon from '../../common/LoadingIcon/LoadingIcon';
import strings from '../../strings';
import { GCEventStatus } from '../../types';

const checkStatusInProgress = compose(equals('InProgress'), propOr('', 'status'));

const checkFetchInProgress = compose(equals(AsyncProgress.Started), propOr('', 'progress'));

interface EverclearProgressProps {
  deleteStatus?: GCEventStatus;
  fetchStatus: AsyncStatus;
}

export function EverclearProgress({ deleteStatus, fetchStatus }: EverclearProgressProps) {
  if (fetchStatus.progress === AsyncProgress.Failed ) {
    return (
      <div className="data-container">
        <div className="async-box">
          <h3>{strings['rid.everclear.status.title']}</h3>
        </div>
        <div>
          {pathOr('Undefined error', ['error', 'message'], fetchStatus)}
          {strings['rid.everclear.bulkdelete.failed']}
        </div>
      </div>);
  }

  if (deleteStatus) {
    const inProgress =
      checkFetchInProgress(fetchStatus) ||
      checkStatusInProgress(deleteStatus);
    return (
      <div className="data-container">
        <div className="async-box">
          <h3>{strings['rid.everclear.status.title']}</h3>
          {inProgress && <LoadingIcon />}
        </div>
        <div>
          <p className="data-item">
            <span className="key">Type:</span>
            <span className="value">{propOr('N/A', 'eventType', deleteStatus)}</span>
          </p>
          <p className="data-item">
            <span className="key">ID:</span>
            <span className="value">{propOr('N/A', 'id', deleteStatus)}</span>
          </p>
          <p className="data-item">
            <span className="key">Status:</span>
            <span className="value">{propOr('', 'status', deleteStatus)}</span>
          </p>
          {deleteStatus.subsystemEvents.map(se =>
            <p className="data-item">
              <span className="key">{se.subsystem}:</span>
              <span className="value">{propOr('', 'status', se)}</span>
            </p>)}
        </div>
      </div>
    );
  }
  return (null);
}
