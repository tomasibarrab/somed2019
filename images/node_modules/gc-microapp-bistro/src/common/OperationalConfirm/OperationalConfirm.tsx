import React from 'react';

import { Button } from '@buffet/button';
import { Input } from '@buffet/input';
import { LabelGroup } from '@buffet/labelgroup';

import { Modal, ModalHeader, ModalMain } from 'shared-react-atomic-ui/Modal';

import strings from '../../strings';

import './OperationalConfirm.scss';

interface OperationalConfirmProps {
  id: string;
  show: boolean;
  massages: string[];
  label: string;
  onConfirm: (rid: string) => void;
  onCancel: () => void;
}

export function OperationalConfirm({ id, show, onCancel, onConfirm, massages, label }: OperationalConfirmProps) {
  const [ isIdValid, setIdValid ] = React.useState(false);
  const [ inputValue, setInputValue ] = React.useState('');
  React.useEffect(() => setInputValue(''), [show])

  function handleCancel(e: React.MouseEvent<HTMLElement>) {
    e.stopPropagation();
    e.preventDefault();
    onCancel();
  }

  function handleConfirm() {
    onConfirm(id);
  }

  function handleConfirmRidChange(e: React.ChangeEvent<HTMLInputElement>) {
    setIdValid(id === e.target.value);
    setInputValue(e.target.value);
  }

  return (
    <Modal onClose={handleCancel} show={show}>
      <ModalHeader title={strings['activaterid.confirm.title']} onClose={handleCancel} />
      <ModalMain>
        {massages.map((m, idx) => <p key={`${idx}`}>{strings[m]}</p>)}
        <div className="input">
          <LabelGroup label={strings[label]}>
            <Input
              autoFocus={true}
              type="text"
              onChange={handleConfirmRidChange}
              valid={isIdValid}
              value={inputValue}
            />
          </LabelGroup>
        </div>
        <div className="footer">
          <Button type="button" theme="default" onClick={handleCancel} className="warning-cancel">
            {strings['activaterid.cancel']}
          </Button>
          <Button
            disabled={!isIdValid} type="button" theme="primary" onClick={handleConfirm}
            className={`warning-confirm ${isIdValid ? '' : 'invalid' }`}
          >
            {strings['activaterid.ok']}
          </Button>
        </div>
      </ModalMain>
    </Modal>);
}
