import * as React from 'react';
import { FieldRenderProps } from 'react-final-form';

import { LabeledInput, LabeledInputProps } from '@buffet/input';

import { customFinalField, InputFieldProps } from './customfield';

import './FinalField.scss';

type LabelInputFieldProps = InputFieldProps<Partial<LabeledInputProps>>;
type InputState = 'default' | 'error' | 'success' | 'disabled';

const labelInputRenderer = () => (
  { label, valid, statusText, errorText, className = '', ...restProps }: LabelInputFieldProps,
  { input }: FieldRenderProps,
) => {
  const inputState: InputState = valid ? 'default' : 'error';

  return (
    <div className={`${className} final-field ${valid ? '' : 'final-field-invalid'}`}>
      <LabeledInput
        state={inputState}
        label={label || ''}
        type="text"
        statusText={errorText || statusText}
        {...input}
        {...restProps}
      />
    </div>
  );
};

/**
 * InputField react-final-form field for buffet LabeledInput component
 */
export const InputFinalField = customFinalField<Partial<LabeledInputProps>>(labelInputRenderer());
