import React from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';
import { Redirect, RouteComponentProps, withRouter } from 'react-router-dom';

import { AsyncStatus } from 'shared-react-utils/asyncStateReducer';

import { AppRoutes } from '../common/App/AppRoutes';
import { State } from '../store/types';
import './LeadGenPage.scss';


interface StateProps {
  leadGenStatus: AsyncStatus;
}

type Props = StateProps & RouteComponentProps<{}> & InjectedIntlProps;

function LeadGenDone({ intl, leadGenStatus }: Props) {
  // redirect to leadgen form if not done
  if (leadGenStatus !== 'done') {
    return <Redirect to={AppRoutes.LeadGen} />;
  }

  const scheduleMeetingLink = (
    <a
      href="https://calendly.com/getvenga"
      target="_blank"
      title={intl.formatMessage({ id: 'venga.leadgen.success.description_2.scheduleMeetingLink' })}
    >
      {intl.formatMessage({ id: 'venga.leadgen.success.description_2.scheduleMeetingLink' })}
    </a>
  );

  return (
    <div className="leadgen-container">
      <FormattedMessage id="venga.leadgen.success.title" tagName="h2" />
      <FormattedMessage id="venga.leadgen.success.description_1" tagName="p" />
      <FormattedMessage id="venga.leadgen.success.description_2" tagName="p" values={{ scheduleMeetingLink }} />
      <FormattedMessage id="venga.leadgen.success.description_3" tagName="p" />
    </div>
  );
}

const mapState = (state: State) => ({
  leadGenStatus: state.leadGen.status,
});

const IntlLeadGenDone = injectIntl(LeadGenDone);
const ConnectedLeadGenDone = connect<{}, {}, RouteComponentProps<{}>>(mapState)(IntlLeadGenDone);

export default withRouter(ConnectedLeadGenDone);
