import { Button } from '@buffet/button';
import { Icon } from '@buffet/icon';
import { LangLocale } from 'gca-react-components/src/redux-modules/languageProvider';
import React, { useCallback, useState } from 'react';
import { FormattedMessage } from 'react-intl';
import { connect } from 'react-redux';
import { RouteComponentProps, withRouter } from 'react-router-dom';
import Accordion from 'shared-react-atomic-ui/Accordion';
import { smoothScrollTo } from 'shared-utils/scrollTo/scrollTo';
import { AppRoutes } from '../../common/App/AppRoutes';

import { formatProductPrice } from '../../helpers/pricing';
import { eventTracker, trackingCategory, trackingEvents } from '../../helpers/tracking';
import { shortAgreementType } from '../../helpers/typeHelpers';
import {
  selectors as productSelectors,
  selectProduct as selectProductAction,
} from '../../store/redux-modules/products';
import { AgreementType, PricedAddOn, Pricing, State } from '../../store/types';

import './CompareProducts.scss';
import './Marketing.scss';

interface SP {
  locale: LangLocale;
  basePrices: {
    [key in AgreementType]: Pricing | undefined;
  };
  priceBundles: {
    [key in AgreementType]: PricedAddOn | undefined;
  };
}

interface DP {
  selectProduct: (payload: AgreementType) => void;
}

type Props = SP & DP & RouteComponentProps<{}>;

function CompareProductsView({
  basePrices: {
    venga_integration_review_manager: productReviewManager,
    venga_integration_host: productHost,
  },
  history,
  locale,
  selectProduct,
}: Props) {
  const [isExpanded, setExpanded] = useState(false);

  const handleSelectReviewManager = useCallback(() => {
    eventTracker.sendEvent({
      action: trackingEvents.marketingPage.action,
      category: trackingCategory,
      label: trackingEvents.marketingPage.labels.selectReviewManager,
    });

    selectProduct(AgreementType.venga_integration_review_manager);
    history.push(`${AppRoutes.SignUp}/${shortAgreementType(AgreementType.venga_integration_review_manager)}`);
  }, [history, selectProduct]);

  const handleSelectHost = useCallback(() => {
    eventTracker.sendEvent({
      action: trackingEvents.marketingPage.action,
      category: trackingCategory,
      label: trackingEvents.marketingPage.labels.selectHost,
    });

    selectProduct(AgreementType.venga_integration_host);
    history.push(`${AppRoutes.SignUp}/${shortAgreementType(AgreementType.venga_integration_host)}`);
  }, [history, selectProduct]);

  const toggleExpanded = useCallback(() => {
    const isExpandedNext = !isExpanded;
    setExpanded(isExpandedNext);

    if (!isExpandedNext) {
      smoothScrollTo('#section_pricing', { target: '.venga-page', duration: 250 });
      eventTracker.sendEvent({
        action: trackingEvents.marketingPage.action,
        category: trackingCategory,
        label: trackingEvents.marketingPage.labels.compareClose,
      });
    }

    eventTracker.sendEvent({
      action: trackingEvents.marketingPage.action,
      category: trackingCategory,
      label: isExpandedNext
        ? trackingEvents.marketingPage.labels.compareOpen
        : trackingEvents.marketingPage.labels.compareClose,
    });
  }, [isExpanded]);

  return (
    <section id="section_pricing" className="section pricing">
      <h2 className="section-title">
        <FormattedMessage id="venga.marketing.pricing.title" />
      </h2>
      <div className="feature-table">
        <div className="feature-prices-wrapper">
          <div className="feature-price-column">
            <div className="feature-price-header">
              <h2 className="section-title">
                <FormattedMessage id="venga.marketing.pricing.product.1" />
              </h2>
              <div className="big-price">{formatProductPrice(productReviewManager, locale)}</div>
              <div className="price-cycle">
                <FormattedMessage id="venga.marketing.pricing.cycle.monthly" />
              </div>
              <Button
                type="button"
                onClick={handleSelectReviewManager}
                theme="primary"
                size="small"
                testId="select-venga-review-manager"
              >
                <FormattedMessage id="venga.marketing.pricing.select" />
              </Button>
            </div>
          </div>
          <div className="feature-price-column">
            <div className="feature-price-header preferred-product">
              <h2 className="section-title">
                <FormattedMessage id="venga.marketing.pricing.product.2" />
              </h2>
              <div className="big-price">{formatProductPrice(productHost, locale)}</div>
              <div className="price-cycle">
                <FormattedMessage id="venga.marketing.pricing.cycle.monthly" />
              </div>
              <Button
                type="button"
                onClick={handleSelectHost}
                theme="primary"
                size="small"
                testId="select-venga-host"
              >
                <FormattedMessage id="venga.marketing.pricing.select" />
              </Button>
            </div>
          </div>
        </div>
        <div className="feature-list">
          <div className={`feature-list-section ${isExpanded ? 'expanded' : ''}`}>
            <div className="feature-header">
              <div className="feature-name">
                <FormattedMessage id="venga.marketing.valueProps.a.valueName" />
              </div>
              <div className="feature-availability">
                <Icon iconId="checkmark" />
              </div>
              <div className="feature-availability">
                <Icon iconId="checkmark" />
              </div>
            </div>
            <Accordion isOpen={isExpanded} animateOpacity>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.a.feature.1" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.a.feature.2" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.a.feature.3" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.a.feature.4" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.a.feature.5" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.a.feature.6" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.a.feature.7" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
            </Accordion>
          </div>
          <div className={`feature-list-section ${isExpanded ? 'expanded' : ''}`}>
            <div className="feature-header">
              <div className="feature-name">
                <FormattedMessage id="venga.marketing.valueProps.c.valueName" />
              </div>
              <div className="feature-availability" />
              <div className="feature-availability">
                <Icon iconId="checkmark" />
              </div>
            </div>
            <Accordion isOpen={isExpanded} animateOpacity>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.c.feature.1" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.c.feature.2" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.c.feature.3" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.c.feature.4" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
            </Accordion>
          </div>
          <div className={`feature-list-section ${isExpanded ? 'expanded' : ''}`}>
            <div className="feature-header">
              <div className="feature-name">
                <FormattedMessage id="venga.marketing.valueProps.d.valueName" />
              </div>
              <div className="feature-availability" />
              <div className="feature-availability">
                <Icon iconId="checkmark" />
              </div>
            </div>
            <Accordion isOpen={isExpanded} animateOpacity>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.d.feature.1" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.d.feature.2" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.d.feature.3" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.d.feature.4" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
            </Accordion>
          </div>
          <div className={`feature-list-section ${isExpanded ? 'expanded' : ''}`}>
            <div className="feature-header">
              <div className="feature-name">
                <FormattedMessage id="venga.marketing.valueProps.b.valueName" />
              </div>
              <div className="feature-availability" />
              <div className="feature-availability">
                <Icon iconId="checkmark" />
              </div>
            </div>
            <Accordion isOpen={isExpanded} animateOpacity>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.b.feature.1" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.b.feature.2" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.b.feature.3" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
              <div className="feature-item">
                <div className="feature-name">
                  <FormattedMessage id="venga.marketing.pricing.value.b.feature.4" />
                </div>
                <div className="feature-availability" />
                <div className="feature-availability">
                  <Icon iconId="checkmark" />
                </div>
              </div>
            </Accordion>
          </div>
        </div>
      </div>
      <aside className="table-fine-print-container">
        <div className="fine-print"><FormattedMessage id="venga.marketing.pricing.finePrint" /></div>
      </aside>
      <div className="feature-comparison-toggle">
        <Button type="button" theme="bare" onClick={toggleExpanded}>
          {isExpanded ? (
            <span>
              <Icon iconId="minus" />
              <FormattedMessage id="venga.marketing.pricing.compare.collapse" />
            </span>
          ) : (
            <span>
              <Icon iconId="plus" />
              <FormattedMessage id="venga.marketing.pricing.compare.expand" />
            </span>
          )}
        </Button>
      </div>
    </section>
  );
}

const mapState = (state: State): SP => ({
  basePrices: productSelectors.productsBasePrices(state),
  locale: state.language.locale,
  priceBundles: productSelectors.productsPriceBundles(state),
});

const mapDispatch = {
  selectProduct: selectProductAction,
};

const CompareProducts = connect<SP, DP, RouteComponentProps<{}>>(
  mapState,
  mapDispatch,
)(CompareProductsView);

export default withRouter(CompareProducts);
export { CompareProductsView as PureCompareProducts };
