import React from 'react';
import PropTypes from 'prop-types';
import range from 'lodash/range';
import Star from './Star';
import './StarRating.scss';

function fillPercent(starIndex, rating) {
  let filled;

  if (rating > starIndex && rating <= starIndex + 1) {
    filled = rating - starIndex;
  } else if (rating > starIndex) {
    filled = 1;
  } else {
    filled = 0;
  }

  return filled;
}

/**
 * Shows a rating by displaying a sequence of stars.
 */
export function StarRating(props) {
  const stars = range(props.max).map(starIndex => {
    const filled = fillPercent(starIndex, props.rating);

    return (
      <Star
        key={starIndex}
        width={props.size.toString()}
        height={props.size.toString()}
        color={props.color}
        filled={filled}
      />
    );
  });

  return <div className="gca-star-rating">{stars}</div>;
}

StarRating.propTypes = {
  rating: PropTypes.number.isRequired, // eslint-disable-line react/no-unused-prop-types
  max: PropTypes.number,
  color: PropTypes.string,
  size: PropTypes.number, // eslint-disable-line react/no-unused-prop-types
};

StarRating.defaultProps = {
  max: 5,
  size: 20,
  color: '#FFAB66',
};

export default StarRating;
