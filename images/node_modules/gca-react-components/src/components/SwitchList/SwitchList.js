import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import SwitchListItem from './SwitchListItem';
import './SwitchList.scss';

export class SwitchList extends React.Component {
  handleChange = (value, on) => {
    const newValues = on
      ? this.props.selected.concat([value])
      : this.props.selected.filter(selectedVal => selectedVal !== value);

    this.props.onChange(newValues);
  };

  render() {
    const { disabled, valid, className, options, selected, errorMessage } = this.props;
    return (
      <div className={classnames('gca-switchlist-container', { disabled })}>
        <div className={classnames('gca-switchlist', className, { invalid: !valid /* , disabled */ })}>
          {options.map(({ label, id }) => (
            <SwitchListItem on={selected.includes(id)} key={id} label={label} value={id} onChange={this.handleChange} />
          ))}
        </div>
        {!valid && errorMessage}
      </div>
    );
  }
}

SwitchList.propTypes = {
  disabled: PropTypes.bool,
  valid: PropTypes.bool,
  className: PropTypes.string,
  errorMessage: PropTypes.node,
  options: PropTypes.arrayOf(
    PropTypes.shape({
      label: PropTypes.string,
      id: PropTypes.string,
    }),
  ),
  selected: PropTypes.arrayOf(PropTypes.string),
  onChange: PropTypes.func,
};

SwitchList.defaultProps = {
  disabled: false,
  valid: true,
};

export default SwitchList;
