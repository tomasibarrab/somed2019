import { FeatureToggle } from 'gca-react-components';
import React, { Component } from 'react';
import { InjectedIntlProps, injectIntl } from 'react-intl';
import { ChildComponentProps } from '../commonTypes';
import Fieldset from '../Fieldset/Fieldset';
import './DaysAndTimes.scss';
import DaysAndTimesImages from './DaysAndTimesImages';
import DaysAndTimesList from './DaysAndTimesList';
import DaysAndTimesSummary from './DaysAndTimesSummary';

type OP = ChildComponentProps;
type Props = OP & InjectedIntlProps;

class DaysAndTimes extends Component<Props> {
  public render() {
    const { intl: { formatMessage }, isOpen } = this.props;
    return (
      <Fieldset
        className="days-and-times"
        legend={formatMessage({ id: 'guestcampaigns.custom_promotions.form.days_and_times.legend' })}
        isOpen={isOpen}
        description={formatMessage({
          id: 'guestcampaigns.custom_promotions.form.days_and_times.description',
        })}
      >
        {isOpen ? (
          <div className="fields">
            <FeatureToggle featureId="featureGcaPiCreateCustomPromotionImageDatePicker" hide={true}>
              <DaysAndTimesList {...this.props} />
            </FeatureToggle>
            <FeatureToggle featureId="featureGcaPiCreateCustomPromotionImageDatePicker">
              <DaysAndTimesImages {...this.props} />
            </FeatureToggle>
          </div>
        ) : (
          <div className="summary">
            <DaysAndTimesSummary />
          </div>
        )}
      </Fieldset>
    );
  }
}

export default injectIntl(DaysAndTimes);
