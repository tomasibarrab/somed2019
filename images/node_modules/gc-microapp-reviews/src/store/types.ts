import { CurrentContext } from 'gca-react-components/src/redux-modules/currentContext';
import { FeatureToggles } from 'gca-react-components/src/redux-modules/featureToggles';
import { LanguageProvider } from 'gca-react-components/src/redux-modules/languageProvider';
import { Dispatch as ReduxDispatch, Store as ReduxStore } from 'redux';
import { ActionsObservable } from 'redux-observable';
import { Observable } from 'rxjs/Observable';
import { Action as FsaAction } from 'typescript-fsa';

import { ReviewsState } from './allReviews/allReviews';
import { ModalsState } from './modals/modals';
import { ReportsState } from './reports/reports';
import { ReviewRepliesState } from './reviewReplies/reviewReplies';
import { ReviewSummaryState } from './reviewSummary/reviewSummary';
import { Dependencies } from './store';

export const enum Status {
  Done = 'done',
  Empty = 'empty',
  Failed = 'failed',
  Init = 'init',
  Started = 'started',
}

export interface State {
  allReviews: ReviewsState;
  currentContext: CurrentContext;
  featureToggles: FeatureToggles;
  language: LanguageProvider;
  modals: ModalsState;
  reports: ReportsState;
  reviewReplies: ReviewRepliesState;
  reviewSummary: ReviewSummaryState;
}

export type Action = FsaAction<any>;

export type Store = ReduxStore<State>;

export type Dispatch = ReduxDispatch<Action>;
export type Epic = (action$: ActionsObservable<Action>, store: Store, options: Dependencies) => Observable<Action>;
