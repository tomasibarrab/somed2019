import { shallowWithIntl } from 'gca-jest-config';
import React from 'react';

import { PureStarsFilter } from './StarsFilter';

describe('<PureStarsFilter />', () => {
  let props;

  beforeEach(() => {
    props = {
      current: [1, 2, 3, 4, 5],
      focused: false,
      pending: [1, 2, 3, 4, 5],
      valid: true,

      // Actions
      apply: jest.fn(),
      cancel: jest.fn(),
      focus: jest.fn(),
      selectAll: jest.fn(),
      selectNone: jest.fn(),
      set: jest.fn(),
    };
  });

  it('all checked snapshot', () => {
    const wrapper = shallowWithIntl(<PureStarsFilter {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('partially checked snapshot', () => {
    props.pending = [2, 4];

    const wrapper = shallowWithIntl(<PureStarsFilter {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('should call selectNone() when clicking "Deselect All"', () => {
    const wrapper = shallowWithIntl(<PureStarsFilter {...props} />);

    wrapper.find('.stars-select-button').simulate('click');

    expect(props.selectNone).toHaveBeenCalled();
  });

  it('should call selectAll() when clicking "Select All"', () => {
    props.pending = [2, 4];

    const wrapper = shallowWithIntl(<PureStarsFilter {...props} />);

    wrapper.find('.stars-select-button').simulate('click');

    expect(props.selectAll).toHaveBeenCalled();
  });
});
