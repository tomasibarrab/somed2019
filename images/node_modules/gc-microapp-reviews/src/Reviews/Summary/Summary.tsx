import mapValues from 'lodash/mapValues';
import React from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';

import './Summary.scss';

import {
  Ratings,
  RatingsDistribution,
  reviewSummarySelector,
  ReviewSummaryState,
} from '../../store/reviewSummary/reviewSummary';
import { State, Status } from '../../store/types';
import Breakdown from './Breakdown/Breakdown';
import Distribution from './Distribution/Distribution';
import Overall from './Overall/Overall';

interface SP {
  ratings: Ratings;
  ratingsDistribution: RatingsDistribution;
  dinersRecommend: number;
  ratingPeriod: number;
}

interface Props extends SP, InjectedIntlProps {}

class Summary extends React.Component<Props> {
  public render() {
    const { ratingsDistribution, intl, ratings, ratingPeriod, dinersRecommend } = this.props;

    return (
      <section className="gca-reviews-summary">
        <FormattedMessage tagName="h1" id="reviews.summary.title" />
        <div className="divided-row">
          <Overall overallRating={ratings.overall} ratingPeriod={ratingPeriod} dinersRecommend={dinersRecommend} />
          <Distribution ratingsDistribution={ratingsDistribution} />
          <Breakdown ratings={ratings} />
        </div>
      </section>
    );
  }
}

// TODO: Figure out why this won't typecheck
function mapState({ reviewSummary }: State): any {
  if (reviewSummary.status === Status.Done) {
    return reviewSummary;
  }

  return {
    dinersRecommend: 0,
    ratingPeriod: 0,
    ratings: [],
    ratingsDistribution: [],
  };
}

export default connect<SP, {}, {}>(mapState)(injectIntl<SP>(Summary));
export { Summary as PureSummary };
