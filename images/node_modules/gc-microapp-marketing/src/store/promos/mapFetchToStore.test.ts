/* tslint:disable */
import { transformPromoRestaurant } from './mapFetchToStore'
import {
  RawRestaurantPromo,
} from './promos.types';

describe('mapFetchToStore', () => {
  describe('transformPromoRestaurant', () => {
    it('should view future subscribed promos as subscribed', () => {
      const mockPromo: RawRestaurantPromo = {
        creditCardDay: null,
        id: 123,
        promo: {
          displayLinkDates: {
            start: '2990-01-01',
            end: '2990-01-02',
          },
          eventDates: {
            start: '2990-01-01',
            end: '2990-01-02',
          },
          language: null,
          promoId: '123',
          selfServeDetails: null,
          type: 'Featured',
        },
        promoRestaurant: {
          isActive: true,
          language: 'en-US',
          message: 'so trendy',
          rank: 1,
        },
      }
      const expectedResult = {
        ...mockPromo.promoRestaurant,
      }
      expect(transformPromoRestaurant(mockPromo.promoRestaurant, mockPromo.promo)).toEqual(expectedResult);
    })

    it('should view expired subscribed promos as unsubscribed', () => {
      const mockPromo: RawRestaurantPromo = {
        creditCardDay: null,
        id: 123,
        promo: {
          displayLinkDates: {
            start: '1990-01-01',
            end: '1990-01-02',
          },
          eventDates: {
            start: '1990-01-01',
            end: '1990-01-02',
          },
          language: null,
          promoId: '123',
          selfServeDetails: null,
          type: 'Featured',
        },
        promoRestaurant: {
          isActive: true,
          language: 'en-US',
          message: 'so old',
          rank: 1,
        },
      }
      const expectedResult = {
        ...mockPromo.promoRestaurant,
        isActive: false,
      }
      expect(transformPromoRestaurant(mockPromo.promoRestaurant, mockPromo.promo)).toEqual(expectedResult);
    })
  });
});
