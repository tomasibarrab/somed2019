import { FlashMessage, PromoType, Status } from './promos';

// export interface CustomMessageSource {
// language: string, // the language from the custom message where this message spec is translated from
// version: number, // the version from the custom message where this message spec is translated from
// message: string, // the message from the custom message where this message spec is translated from.
// }

// Data about the promotion itself from the promos service
export interface RawPromo {
  promoId: string;
  language: string;
  displayLinkDates: {
    start: string;
    end: string;
  };
  eventDates: {
    start: string;
    end: string;
  };
  selfServeDetails: {
    name: string;
    placeHolder: string;
    details: string;
    photoId: string;
  };
  type: PromoType;
}

export interface Promo extends RawPromo {
  liveNow: boolean;
}

// Data about the promotion-restaurant mapping from the promos service
export interface PromoRestaurant {
  isActive: boolean;
  language: string;
  message: string;
  rank: number;
  updatedBy: string;
  updatedOn: string;
}

// ---------------------------------------------------------------------------------------------------------------------
// Credit card message interfaces
// ---------------------------------------------------------------------------------------------------------------------

export interface DayOfReservationCutoffPenalty {
  isStrict?: boolean;
  amount: number;
  dayOfReservationCutoff: {
    time?: string;
  };
}

export interface TimeSpanCutoffPenalty {
  isStrict?: boolean;
  amount: number;
  timeSpanCutoff: {
    days: number;
  };
}

export type Penalty = DayOfReservationCutoffPenalty | TimeSpanCutoffPenalty;

export interface CreditCardMessagespec {
  specification: {
    cancellationPenalty?: Penalty;
    guestCountChangePenalty?: Penalty;
  };
  schemaVersion: number;
}

// Credit card day object stored in RAS
export interface CreditCardDay {
  effectiveDate: string; // The Date Blocked in ISO 8601 Date format (YYYY-MM-DD). Part of the primary key
  partySize: number; // The party size. Part of the primary key
  startTime?: string; // Optional part of the primary key. In ISO 8601 24 Hr Time format (HH:mm:ss.sss)
  endTime?: string; // ISO 8601 24 Hr Time format (HH:mm:ss.sss)
  createdDateTime: string; // UTC creation time
  createdBy: string; // the person who created this date. Usually the email address
  version?: number;
  Specification?: CreditCardMessagespec;
  customMessageSource?: {};
}

// ---------------------------------------------------------------------------------------------------------------------
// Primary reducer type
// ---------------------------------------------------------------------------------------------------------------------

export interface BaseRestaurantPromo {
  id: number;
  promoRestaurant: null | PromoRestaurant;
  creditCardDay: null | CreditCardDay;
}

export interface RawRestaurantPromo extends BaseRestaurantPromo {
  promo: RawPromo;
}

export interface RestaurantPromo extends BaseRestaurantPromo {
  promo: Promo;
}

export interface BasePromos {
  fetchStatus: Status;
  saveStatus: Status;
  flashMessage: FlashMessage | null;
  metroId: number;
  primaryLanguage: string;
  currentPromoId: null | number;
  creditCardEnabled: boolean;
}

export interface RawPromos extends BasePromos {
  promos: RawRestaurantPromo[];
}

export interface Promos extends BasePromos {
  promos: { [id: number]: RestaurantPromo };
}

export interface UpdatePromoBody extends RestaurantPromo {
  isNewPromoRestaurant?: boolean;
}
