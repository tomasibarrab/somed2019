import { shallow } from 'enzyme';
import * as React from 'react';
import { PureFlash as Flash } from './Flash';

describe('<Flash />', () => {
  // mock props to pass to component
  const baseProps = {
    flashMessage: null,
    resetFlashMessage: jest.fn(),
  };

  it('should display as hidden when flashMessage is null', () => {
    expect(shallow(<Flash {...baseProps} />)).toMatchSnapshot();
  });

  ['published', 'saved', 'removed'].forEach(type => {
    it(`should render correctly when flashMessage is ${type}`, () => {
      const props = { ...baseProps, flashMessage: type };

      expect(shallow(<Flash {...props} />)).toMatchSnapshot();
    });
  });

  it('should pass resetFlashMessage to the AlertMessage component', () => {
    const props = { ...baseProps, flashMessage: 'published' };
    const alertMessageProps = shallow(<Flash {...props} />)
      .find('AlertMessage')
      .props();

    expect(alertMessageProps.onClose).toEqual(props.resetFlashMessage);
  });
});
