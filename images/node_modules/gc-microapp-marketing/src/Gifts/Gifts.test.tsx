import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { MemoryRouter } from 'react-router';
import { create } from 'react-test-renderer';
import configureMockStore from 'redux-mock-store';
import { GiftsPageType } from '../store/gifts/gifts.types';
import { keys } from '../translations/bundles/marketing.json';
import Gifts from './Gifts';

describe('<Gifts />', () => {
  const baseState = {
    gifts: {
      error: undefined,
      success: true,
    },
    user: {
      loading: false,
    },
  };

  const scenarios = [
    {
      description: 'gifts error',
      state: {
        ...baseState,
        gifts: {
          error: true,
          success: false,
        },
      },
    },
    {
      description: '<GiftsMain />',
      state: baseState,
    },
    {
      description: '<GiftsFinished />',
      state: {
        ...baseState,
        gifts: {
          ...baseState.gifts,
          pageType: GiftsPageType.FinishedPage,
        },
      },
    },
    {
      description: '<GiftsLanding />',
      state: {
        ...baseState,
        gifts: {
          ...baseState.gifts,
          pageType: GiftsPageType.LandingPage,
        },
      },
    },
  ];

  scenarios.forEach(({ description, state }) => {
    it(`should match ${description} snapshot`, () => {
      const store = configureMockStore()(state);
      const component = create(
        <Provider store={store}>
          <IntlProvider locale="en-US" messages={keys}>
            <MemoryRouter>
              <Gifts />
            </MemoryRouter>
          </IntlProvider>
        </Provider>,
      );
      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });
  });
});
