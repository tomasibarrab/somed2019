import { defaultCurrency } from '../../constants';
import { formatCurrency, formatNumber } from './format-number-locale';

const originalLanguage = window.navigator.language;

function setLanguage(language: string) {
  (window.navigator as any).__defineGetter__('language', () => language);
}

function setDefaultLanguage() {
  beforeEach(() => {
    setLanguage('en-us');
  });

  afterEach(() => {
    setLanguage(originalLanguage);
  });
}

describe('formatNumber()', () => {
  setDefaultLanguage();

  it('should format number when en-us', () => {
    expect(formatNumber(1000000)).toBe('1,000,000');
  });

  it('should format number when de-de', () => {
    setLanguage('de-de');
    expect(formatNumber(1000000)).toBe('1.000.000');
  });
});

describe('formatCurrency()', () => {
  setDefaultLanguage();

  it('should default to USD when unmapped currency', () => {
    expect(formatCurrency(1000, 'RMB')).toBe('$1,000.00');
  });

  it('should default to USD when undefined currency', () => {
    expect(formatCurrency(1000, undefined)).toBe('$1,000.00');
  });

  it('should format currency when default is USD', () => {
    expect(formatCurrency(1000, defaultCurrency)).toBe('$1,000.00');
  });

  it('should format currency when no cents', () => {
    expect(formatCurrency(1000, defaultCurrency, true)).toBe('$1,000');
  });

  it('should format currency when CAD', () => {
    expect(formatCurrency(1000, 'CAD')).toBe('CA$1,000.00');
  });

  it('should format currency when EUR', () => {
    expect(formatCurrency(1000, 'EUR')).toBe('€1,000.00');
  });

  it('should format currency when GBP', () => {
    expect(formatCurrency(1000, 'GBP')).toBe('£1,000.00');
  });

  describe('other locales', () => {
    it('should format currency when EUR and de-DE', () => {
      setLanguage('de-DE');
      expect(formatCurrency(1000, 'EUR')).toBe('1.000,00 €');
    });

    it('should format currency when EUR and en-IE', () => {
      setLanguage('en-IE');
      expect(formatCurrency(1000, 'EUR')).toBe('€1,000.00');
    });

    it('should format currency when GBP', () => {
      setLanguage('en-GB');
      expect(formatCurrency(1000, 'GBP')).toBe('£1,000.00');
    });

    it.skip('should format currency when EUR and fr-FR', () => {
      setLanguage('fr-FR');
      expect(formatCurrency(1000, 'EUR')).toBe('1 000,00 €');
    });

    it.skip('should format currency when EUR and fr-CA', () => {
      setLanguage('fr-CA');
      expect(formatCurrency(1000, 'EUR')).toBe('1 000,00 €');
    });
  });
});
