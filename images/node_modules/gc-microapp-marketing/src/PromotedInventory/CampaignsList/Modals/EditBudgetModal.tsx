import { Modal, ModalHeader, ModalMain } from 'gca-react-components';
import React from 'react';
import { InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';

import { OpenModalPayload, PatchBudgetPayload } from '../../../store/campaigns/campaigns.types';
import { State as ReduxState } from '../../../store/types';
import { BudgetEditor } from './BudgetEditor';
import styles from './EditBudgetModal.module.css';

interface SP {
  modal?: OpenModalPayload;
}

interface OP {
  campaignId: string;
  close: () => void;
  confirm: (payload: PatchBudgetPayload) => void;
  currentUserEmail: string;
}

type Props = SP & OP & InjectedIntlProps;

export function getId(key: string): string {
  return `guestcampaigns.list.edit_budget.${key}`;
}

/* P, S */
const EditBudgetModal: React.FunctionComponent<Props> = props => {
  const { formatMessage } = props.intl;
  const { modalBody } = styles;
  const {
    campaignId,
    confirm,
    currentUserEmail,
    modal: { currentBudget },
    close,
  } = props;

  // Don't pass close (which is closeModal) directly to onClose property because
  // one of these onClose is used directly as an event handler - the event passed to
  // event handlers is huge when serialized into redux devtools, and causes it to
  // slow down. closeModal doesn't look like it takes any arguments, but it does
  // since we made it with typescript-fsa.
  return (
    <Modal
      onClose={() => {
        close();
      }}
    >
      <ModalHeader
        onClose={() => {
          close();
        }}
        title={formatMessage({
          id: getId('title'),
        })}
      />
      <ModalMain className={modalBody}>
        <BudgetEditor
          campaignId={campaignId}
          confirm={confirm}
          currentBudget={currentBudget}
          currentUserEmail={currentUserEmail}
        />
      </ModalMain>
    </Modal>
  );
};

const mapState = (state: ReduxState) => ({
  modal: state.campaigns.modal as OpenModalPayload,
});

export default connect<SP, {}, OP>(mapState)(injectIntl(EditBudgetModal));
