// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Campaign /> handleClick should toggle isOpen state and classes 1`] = `
<tbody>
  <tr
    className="open"
    id="another campaign id to avoid window.location matching prev test"
    onClick={[Function]}
    role="row"
  >
    <CampaignTypeLabel
      endDate={null}
      incentives={Array []}
      isShortTerm={true}
      pauseUntil="2017-11-27T12:00:00.000Z"
      startDate="2017-11-27T12:00:00.000Z"
      state="live"
      type="promoted_results"
    />
    <td>
      <ul>
        <React.Fragment />
      </ul>
    </td>
    <td>
      <wrappedIcon
        color="#878787"
        direction="up"
        height="13"
      />
    </td>
  </tr>
  <tr>
    <Connect(InjectIntl(CampaignDetails))
      campaign={
        Object {
          "approvedByEmail": null,
          "campaignId": "another campaign id to avoid window.location matching prev test",
          "changedByUser": "string",
          "changedTimestamp": "2017-11-27T12:00:00.000Z",
          "createdByEmail": "string",
          "createdChannel": "string",
          "createdTimestamp": "2017-11-27T12:00:00.000Z",
          "currentVersion": "string",
          "draftTimestamp": "2017-11-27T12:00:00.000Z",
          "endDate": null,
          "endTimestamp": null,
          "incentives": Array [],
          "isShortTerm": true,
          "liveTimestamp": "2017-11-26T12:00:00.000Z",
          "pauseUntil": "2017-11-27T12:00:00.000Z",
          "restaurantContactEmail": "string",
          "restaurantContactName": "string",
          "rid": 1,
          "schedule": Array [],
          "startDate": "2017-11-27T12:00:00.000Z",
          "state": "live",
          "suppressionDates": Object {
            "custom": Array [
              Object {
                "endDate": "2017-11-28T12:00:00.000Z",
                "label": "test label",
                "startDate": "2017-11-27T12:00:00.000Z",
              },
            ],
            "default": Array [
              "thanksgiving_day_us",
            ],
          },
          "type": "promoted_results",
        }
      }
    />
  </tr>
</tbody>
`;

exports[`<Campaign /> handleClick should toggle isOpen state and classes 2`] = `
<tbody>
  <tr
    className=""
    id="another campaign id to avoid window.location matching prev test"
    onClick={[Function]}
    role="row"
  >
    <CampaignTypeLabel
      endDate={null}
      incentives={Array []}
      isShortTerm={true}
      pauseUntil="2017-11-27T12:00:00.000Z"
      startDate="2017-11-27T12:00:00.000Z"
      state="live"
      type="promoted_results"
    />
    <td>
      <ul>
        <React.Fragment />
      </ul>
    </td>
    <td>
      <wrappedIcon
        color="#878787"
        direction="down"
        height="13"
      />
    </td>
  </tr>
</tbody>
`;

exports[`<Campaign /> live Specials campaign to match snapshot 1`] = `
<tbody>
  <tr
    className=""
    id="string"
    onClick={[Function]}
    role="row"
  >
    <td>
      <svg
        height="20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <circle
            cx="10"
            cy="10"
            fill="#89C83B"
            r="10"
          />
          <g
            transform="translate(5 5)"
          >
            <path
              d="M3.95 1.93a8.63 8.63 0 0 1 2.1 0 1.25 1.25 0 1 0-2.1 0zM9.25 7.25c.02-3.42-1.35-5-4.25-5S.73 3.83.75 7.25h8.5z"
              stroke="#FFF"
              strokeWidth="1.5"
            />
            <path
              d="M4.25 7h1.5v3.13h-1.5z"
              fill="#FFF"
              fillRule="nonzero"
            />
            <rect
              fill="#FFF"
              fillRule="nonzero"
              height="1.5"
              rx=".5"
              width="4"
              x="3"
              y="9.5"
            />
          </g>
        </g>
      </svg>
      <h3 />
      <aside
        className="ending"
      >
        Ends in 2 days
      </aside>
    </td>
    <td>
      <ul />
    </td>
    <td>
      <svg
        height="13"
        version="1.1"
        viewBox="0 0 10 10"
        width="13"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>
          down
           chevron
        </title>
        <polyline
          fill="none"
          points="1 3 5 7 9 3"
          stroke="#878787"
          transform="rotate(0 5 5)"
        />
      </svg>
    </td>
  </tr>
</tbody>
`;

exports[`<Campaign /> live campaign to match snapshot 1`] = `
<tbody>
  <tr
    className=""
    id="string"
    onClick={[Function]}
    role="row"
  >
    <td>
      <svg
        height="20"
        viewBox="0 0 20 20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <circle
            cx="10"
            cy="10"
            fill="#E55AAF"
            r="10"
          />
          <path
            d="M11 8.836V14.5a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5V8.821l-1.482 1.482a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.535-3.535a.498.498 0 0 1 .707 0l3.536 3.535a.5.5 0 0 1 0 .707l-.707.707a.5.5 0 0 1-.707 0L11 8.836z"
            fill="#FFF"
          />
        </g>
      </svg>
      <h3>
        Promoted Results
      </h3>
      <aside
        className="ending"
      >
        Ends in 2 days
      </aside>
    </td>
    <td>
      <ul />
    </td>
    <td>
      <svg
        height="13"
        version="1.1"
        viewBox="0 0 10 10"
        width="13"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>
          down
           chevron
        </title>
        <polyline
          fill="none"
          points="1 3 5 7 9 3"
          stroke="#878787"
          transform="rotate(0 5 5)"
        />
      </svg>
    </td>
  </tr>
</tbody>
`;

exports[`<Campaign /> short term live campaign to match snapshot 1`] = `
<tbody>
  <tr
    className=""
    id="string"
    onClick={[Function]}
    role="row"
  >
    <td>
      <svg
        height="20"
        viewBox="0 0 20 20"
        width="20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <circle
            cx="10"
            cy="10"
            fill="#E55AAF"
            r="10"
          />
          <path
            d="M11 8.836V14.5a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5V8.821l-1.482 1.482a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.535-3.535a.498.498 0 0 1 .707 0l3.536 3.535a.5.5 0 0 1 0 .707l-.707.707a.5.5 0 0 1-.707 0L11 8.836z"
            fill="#FFF"
          />
        </g>
      </svg>
      <h3>
        Short Term Promoted Results
      </h3>
    </td>
    <td>
      <ul />
    </td>
    <td>
      <svg
        height="13"
        version="1.1"
        viewBox="0 0 10 10"
        width="13"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>
          down
           chevron
        </title>
        <polyline
          fill="none"
          points="1 3 5 7 9 3"
          stroke="#878787"
          transform="rotate(0 5 5)"
        />
      </svg>
    </td>
  </tr>
</tbody>
`;

exports[`<Campaign /> show SpecialDetails when open w/ specials campaign 1`] = `
<tbody>
  <tr
    className="open"
    id="string"
    onClick={[Function]}
    role="row"
  >
    <CampaignTypeLabel
      endDate={"2017-11-28T12:00:00.000Z"}
      incentives={
        Array [
          Object {
            "description": "desc",
            "noteToDiners": "",
            "title": "title",
          },
        ]
      }
      isShortTerm={false}
      pauseUntil="2017-11-27T12:00:00.000Z"
      startDate="2017-11-27T12:00:00.000Z"
      state="live"
      type="display_offer"
    />
    <td>
      <ul>
        <React.Fragment />
      </ul>
    </td>
    <td>
      <wrappedIcon
        color="#878787"
        direction="up"
        height="13"
      />
    </td>
  </tr>
  <tr>
    <Connect(InjectIntl(SpecialDetails))
      campaign={
        Object {
          "approvedByEmail": "jest@example.com",
          "campaignId": "string",
          "changedByUser": "string",
          "changedTimestamp": "2017-11-27T12:00:00.000Z",
          "createdByEmail": "string",
          "createdChannel": "string",
          "createdTimestamp": "2017-11-27T12:00:00.000Z",
          "currentVersion": "string",
          "draftTimestamp": "2017-11-27T12:00:00.000Z",
          "endDate": "2017-11-28T12:00:00.000Z",
          "endTimestamp": null,
          "incentives": Array [
            Object {
              "description": "desc",
              "noteToDiners": "",
              "title": "title",
            },
          ],
          "isShortTerm": false,
          "liveTimestamp": "2017-11-26T12:00:00.000Z",
          "pauseUntil": "2017-11-27T12:00:00.000Z",
          "restaurantContactEmail": "string",
          "restaurantContactName": "string",
          "rid": 1,
          "schedule": Array [],
          "startDate": "2017-11-27T12:00:00.000Z",
          "state": "live",
          "suppressionDates": Object {
            "custom": Array [
              Object {
                "endDate": "2017-11-28T12:00:00.000Z",
                "label": "test label",
                "startDate": "2017-11-27T12:00:00.000Z",
              },
            ],
            "default": Array [
              "thanksgiving_day_us",
            ],
          },
          "type": "display_offer",
        }
      }
    />
  </tr>
</tbody>
`;
