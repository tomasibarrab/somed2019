@import '../styles/common/_variables.scss';
@import '../styles/mixins/_mixins.scss';

$_triangle-size: 10px;
$_triangle-size-fill: $_triangle-size;
$_triangle-size-border: $_triangle-size - 1px;
$_triangle-buffer: $_triangle-size + 5px;

// For both arrow fill and border
$_triangle-map: (
  left: (
    left:0,
    right: auto,
    top: 50%,
    bottom: auto,
    transform: translate(-1 * $_triangle-size, -50%) rotate(45deg),
  ),
  right: (
    left: auto,
    right:0,
    top: 50%,
    bottom: auto,
    transform: translate($_triangle-size, -50%) rotate(225deg),
  ),
  top: (
    left: 50%,
    right: auto,
    top: 0,
    bottom: auto,
    transform: translate(-50%, -1 * $_triangle-size) rotate(135deg),
  ),
  bottom: (
    left: 50%,
    right: auto,
    top: auto,
    bottom: 0,
    transform: translate(-50%, $_triangle-size) rotate(-45deg),
  ),
);

// For arrow fill only
$_triangle-map-fill: (
  left: (
    transform: translate(-1 * $_triangle-size-border, -50%) rotate(45deg),
  ),
  right: (
    transform: translate($_triangle-size-border, -50%) rotate(225deg),
  ),
  top: (
    transform: translate(-50%, -1 * $_triangle-size-border) rotate(135deg),
  ),
  bottom: (
    transform: translate(-50%, $_triangle-size-border) rotate(-45deg),
  ),
);

$_dialog-map: (
  sm: (
    width: 15rem,
    height: 4rem,
  ),
  lg: (
    width: 30rem,
    height: 12rem,
  )
);

.speechdialog {
  @include rem(max-width, 25rem, true);

  @each $label, $map in $_triangle-map {
    &.speechdialog--direction-#{$label} {
      padding-#{$label}: $_triangle-buffer;
    }
  }

  @each $label, $map in $_dialog-map {
    &.speechdialog--#{$label} {
      @include rem(max-width, map-get($map, width), true);
      @include rem(min-height, map-get($map, height), true);
    }
  }
}

.speechdialog__container {
  @include rem(min-height, 8rem, true);

  @each $label, $map in $_dialog-map {
    .speechdialog--#{$label} & {
      @include rem(min-height, map-get($map, height), true);
    }
  }

  position: relative;
  background-color: $white;
  border-radius: $gutter-xs;
  border: 1px solid $border-clr;
  box-shadow: 0 0 6px rgba(216, 217, 219, 0.4);
  min-width: 100%;

  // Arrow's border
  &::before {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    box-sizing: border-box;
    border: $_triangle-size-fill solid $border-clr;
    border-color: transparent transparent $border-clr $border-clr;
    box-shadow: -2px 3px 6px 0 rgba(0, 0, 0, 0.1);
  }

  // Arrow's fill
  &::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    box-sizing: border-box;
    border: $_triangle-size-border solid $white;
    border-color: transparent transparent $white $white;
  }

  @each $label, $map in $_triangle-map {
    .speechdialog--direction-#{$label} & {
      &::before,
      &::after {
        transform: map-get($map, transform);
        left: map-get($map, left);
        right: map-get($map, right);
        top: map-get($map, top);
        bottom: map-get($map, bottom);
      }
    }
  }

  @each $label, $map in $_triangle-map-fill {
    .speechdialog--direction-#{$label} & {
      &::after {
        transform: map-get($map, transform);
      }
    }
  }
}

.speechdialog__content {
  padding: $gutter-md;
}
