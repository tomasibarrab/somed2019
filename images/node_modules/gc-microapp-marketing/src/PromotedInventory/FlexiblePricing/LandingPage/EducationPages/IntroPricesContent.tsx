import React, { SFC } from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';

import {
    FromType, PlanType, PricingInfo,
} from '../../../../store/flexiblepricing/flexiblepricing.types';
import {
    getCurrencyCode, getExpectedFlatFee, getExpectedPricingInfo,
} from '../../../../store/flexiblepricing/selectors';
import { State } from '../../../../store/types';
import { formatCurrency } from '../../../CampaignsList/helpers/format-number-locale';

interface SP {
  currencyCode: string;
  flatFee: boolean;
  pricingInfo: PricingInfo;
}

type Props = InjectedIntlProps & SP;

const IntroPricesContent: SFC<Props> = ({ currencyCode, flatFee, intl, pricingInfo }) => {
  return (
    <article className="content">
      <h3>
        <FormattedMessage id="flexiblepricing.educationpage.introprices.content.title" />
      </h3>
      <ul>
        <li>
          <img
            height={160}
            width={160}
            /* tslint:disable-next-line:max-line-length */
            src="https://s3-us-west-2.amazonaws.com/otservices-promoted-inventory/flexible-pricing/Your%20website.png"
          />
          <h4>
            <FormattedMessage id="flexiblepricing.educationpage.introprices.content.col1title" />
          </h4>
          <p className="with-prices">
            <FormattedMessage id="flexiblepricing.educationpage.introprices.content.col1description" />
            <span className="strikethrough">
              <FormattedMessage
                id={`flexiblepricing.educationpage.common.${flatFee === true ? 'price_per_month' : 'price_per_cover'}`}
                values={{
                  price: formatCurrency(pricingInfo[FromType.RestRef][PlanType.CurrentPrice].amount, currencyCode),
                }}
              />
            </span>
            <span className="as-pill">
              <FormattedMessage
                id="flexiblepricing.educationpage.common.price_per_cover"
                values={{
                  price: formatCurrency(pricingInfo[FromType.RestRef][PlanType.FlexiblePricing].amount, currencyCode),
                }}
              />
            </span>
          </p>
        </li>
        <li>
          <img
            height={160}
            width={160}
            /* tslint:disable-next-line:max-line-length */
            src="https://s3-us-west-2.amazonaws.com/otservices-promoted-inventory/flexible-pricing/Direct.png"
          />
          <h4>
            <FormattedMessage id="flexiblepricing.educationpage.introprices.content.col2title" />
          </h4>
          <p className="with-prices">
            <FormattedMessage id="flexiblepricing.educationpage.introprices.content.col2description" />
            <span className="strikethrough">
              <FormattedMessage
                id="flexiblepricing.educationpage.common.price_per_cover"
                values={{
                  price: formatCurrency(pricingInfo[FromType.Direct][PlanType.CurrentPrice].amount, currencyCode),
                }}
              />
            </span>
            <span className="as-pill">
              <FormattedMessage
                id="flexiblepricing.educationpage.common.price_per_cover"
                values={{
                  price: formatCurrency(pricingInfo[FromType.Direct][PlanType.FlexiblePricing].amount, currencyCode),
                }}
              />
            </span>
          </p>
        </li>
        <li>
          <img
            height={160}
            width={160}
            /* tslint:disable-next-line:max-line-length */
            src="https://s3-us-west-2.amazonaws.com/otservices-promoted-inventory/flexible-pricing/Discovery.png"
          />
          <h4>
            <FormattedMessage id="flexiblepricing.educationpage.introprices.content.col3title" />
          </h4>
          <p className="with-prices">
            <FormattedMessage id="flexiblepricing.educationpage.introprices.content.col3description" />
            <span className="strikethrough">
              <FormattedMessage
                id="flexiblepricing.educationpage.common.price_per_cover"
                values={{
                  price: formatCurrency(pricingInfo[FromType.Discovery][PlanType.CurrentPrice].amount, currencyCode),
                }}
              />
            </span>
            <span className="as-pill">
              <FormattedMessage
                id="flexiblepricing.educationpage.common.price_per_cover_at_standard_visibility"
                values={{
                  price: formatCurrency(pricingInfo[FromType.Discovery][PlanType.FlexiblePricing].amount, currencyCode),
                }}
              />
            </span>
          </p>
        </li>
      </ul>
    </article>
  );
};

const mapState = (state: State) => ({
  currencyCode: getCurrencyCode(state),
  flatFee: getExpectedFlatFee(state),
  pricingInfo: getExpectedPricingInfo(state) as PricingInfo,
});

export default connect<SP, {}, {}>(mapState)(injectIntl(IntroPricesContent));
