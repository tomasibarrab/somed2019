import { Times } from '../store/flexiblepricing/flexiblepricing.types';

export const dateFormat = {
  MOMENT: 'YYYY-MM-DD',
};

export const defaultCurrency = 'USD';

export const currencySymbolMap: any = Object.freeze({
  CAD: '$',
  EUR: '€',
  GBP: '£',
  USD: '$',
});

export const scheduleDateFormat: any = {
  day: 'numeric',
  month: 'long',
  year: 'numeric',
};

export const copiedLinkTimeout = 3e3;

export const endingSoonDaysCount = 60;

export const CREATE_SPECIAL_FORM_NAME = 'createSpecial';
export const TERMS_AND_CONDITIONS_FORM_NAME = 'termsAndConditions';
export const CHANGE_OR_REMOVE_FORM_NAME = 'changeOrRemove';

export const APPROVE_CUSTOM_PROMOTION_FEATURE_NAME = 'featureGcaPiApproveCustomPromotion';
export const EDIT_BUDGET_FEATURE_NAME = 'featureGcaPiEditBudget';

export const LINK_TO_SPECIALS_TERMS_V1 = 'https://www.opentable.com/legal/specials-v1';
export const LINK_TO_CUSTOM_PROMOTIONS_TERMS_V1 = 'https://www.opentable.com/legal/custom-promotions-v1';
export const LINK_TO_FLEXIBLE_PRICING_TERMS_V1 = 'https://www.opentable.com/legal/flexible-pricing-v1';
export const LINK_TO_CLIENT_AGREEMENT = 'http://example.com';
export const LINK_TO_TEST_KITCHEN = 'https://restaurant.opentable.com/test-kitchen';
export const LINK_TO_CREATE_CUSTOM_PROMOTION = '/admin/marketing/:rid/custom-promotions/create';

export const MAX_FLEX_PRICING_BUDGET = 1e8;

/* We still need to send approval info on Revert but do not show the terms modal. */
export const revertApprovalInfo = {
  linkToTerms: 'Terms modal not shown to user when reverting',
  restaurantLegalName: 'Not entered in flow',
};

/*
  Would be great to put the following into a shared PI-FE components/stuff repo,
  after a refactor: we may be able to make more use of typescript features here

  Shamelessly stolen from
    gc-monorepo-admin/apps/custom-promotions/src/CustomPromotions/DaysAndTimes/constants.ts
*/

interface Time {
  i18nKey: string;
  startTime: string;
  endTime: string;
}

type TimesInfo = { [time in Times]: Time };

/* tslint:disable */
export const times: TimesInfo = {
  [Times.Morning]: {
    i18nKey: Times.Morning.toLowerCase(),
    startTime: '02:00:00',
    endTime: '09:45:00',
  },
  [Times.Midday]: {
    i18nKey: Times.Midday.toLowerCase(),
    startTime: '10:00:00',
    endTime: '15:45:00',
  },
  [Times.Evening]: {
    i18nKey: Times.Evening.toLowerCase(),
    startTime: '16:00:00',
    endTime: '23:45:00' /* TODO: this should be 2am next day? */,
  },
};
/* tslint:enable */
