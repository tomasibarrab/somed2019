import classNames from 'classnames';
import * as React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { create } from 'react-test-renderer';
import configureMockStore from 'redux-mock-store';
import messages from '../../i18n/custom-promotions';
import { EducationPageType } from '../../store/customPromotions/customPromotions.types';
import EducationPage from './EducationPage';

describe('<EducationPage />', () => {
  const makeClassName = isActive => classNames('education-page', { 'is-active': isActive });

  const scenarios = [
    {
      className: makeClassName(true),
      description: 'page 1 w/o credits',
      domain: { credits: { shouldShowCredits: false }, pageNum: 1 },
      type: EducationPageType.Wizard,
    },
    {
      className: makeClassName(true),
      description: 'page 2 w/o credits',
      domain: { credits: { shouldShowCredits: false }, pageNum: 2 },
      type: EducationPageType.Wizard,
    },
    {
      className: makeClassName(true),
      description: 'page 2 w/ credits',
      domain: {
        credits: {
          creditAmount: '200',
          currencySymbol: '$',
          defaultCovers: 80,
          formattedCoverPrice: '$2.75',
          shouldShowCredits: true,
        },
        pageNum: 2,
      },
      type: EducationPageType.Wizard,
    },
    {
      className: makeClassName(true),
      description: 'page 1 w/o credits and type is single',
      domain: { credits: { shouldShowCredits: false }, pageNum: 1 },
      type: EducationPageType.Single,
    },
  ];

  scenarios.forEach(({ className, description, domain, type }) => {
    const store = configureMockStore([])({
      currentContext: {
        restaurant: { name: 'Ye Olde Test restaurant' },
      },
    });

    test(description, () => {
      const events = {
        onClickBack: jest.fn(),
        onClickNext: jest.fn(),
      };

      const props = {
        ...events,
        className,
        ...domain,
        type,
      };

      const component = create(
        <IntlProvider locale="en-US" messages={messages}>
          <Provider store={store}>
            <EducationPage {...props} />
          </Provider>
        </IntlProvider>,
      );
      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });
  });
});
