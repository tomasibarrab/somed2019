import moment from 'moment';
import React, { SFC } from 'react';
import { FormattedDate, FormattedMessage } from 'react-intl';
import { formValues } from 'redux-form';

interface FormValuesProps {
  startDate: string;
  endDate: string;
}

export const SeatingDatesSummary: SFC<FormValuesProps> = ({ startDate, endDate }) => {
  const startDateMoment = moment(startDate);
  const useRelative = moment()
    .add(1, 'day')
    .isSame(startDateMoment, 'day');

  return (
    <>
      <FormattedMessage
        id="guestcampaigns.custom_promotions.form.starts_when"
        values={{
          when: useRelative ? (
            <FormattedMessage id="guestcampaigns.custom_promotions.form.tomorrow" />
          ) : (
            <FormattedDate value={startDateMoment.toDate()} year="numeric" month="short" day="numeric" />
          ),
        }}
      />
      <span className="em-dash">&mdash;</span>
      {endDate ? (
        <FormattedMessage
          id="guestcampaigns.custom_promotions.form.ends_when"
          values={{
            when: <FormattedDate value={moment(endDate).toDate()} year="numeric" month="short" day="numeric" />,
          }}
        />
      ) : (
        <FormattedMessage id="guestcampaigns.custom_promotions.form.no_end_date" />
      )}
    </>
  );
};

export default formValues<any, any>('startDate', 'endDate')(SeatingDatesSummary);
