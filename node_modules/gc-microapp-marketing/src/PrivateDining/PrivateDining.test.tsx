import { shallow } from 'enzyme';
import { shallowWithIntl } from 'gca-jest-config';
import * as React from 'react';
import { mockPrivateDiningData } from '../store/privatedining/privatedining.test';
import { PurePrivateDining } from './PrivateDining';
describe('Private Dining Async loading', () => {
  it('should display the spinning circle', () => {
    const props = {
      error: false,
      loading: true,
    };

    const wrapper = shallowWithIntl(<PurePrivateDining {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('should display the error page', () => {
    const props = {
      error: true,
      loading: false,
    };

    const wrapper = shallowWithIntl(<PurePrivateDining {...props} />);

    expect(wrapper).toMatchSnapshot();
  });
});

describe('Private Dining Lead Gen page', () => {
  it('should display the leadgen page', () => {
    const props = {
      enabled: false,
      requested: false,
    };

    const wrapper = shallowWithIntl(<PurePrivateDining {...props} />);

    expect(wrapper).toMatchSnapshot();
  });
});

describe('Private Dining Enabled page', () => {
  it('should display enabled page', () => {
    const props = {
      doFetchPrivateDining: jest.fn(),
      enabled: true,
      requested: false,
    };

    const wrapper = shallowWithIntl(<PurePrivateDining {...props} />);

    expect(wrapper).toMatchSnapshot();
  });
});

describe('Private Dining Requested page', () => {
  it('should display the thank you page', () => {
    const props = {
      enabled: false,
      requested: true,
    };

    const wrapper = shallowWithIntl(<PurePrivateDining {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('not a valid state - should display the thank you page', () => {
    const props = {
      enabled: true,
      requested: true,
    };

    const wrapper = shallowWithIntl(<PurePrivateDining {...props} />);

    expect(wrapper).toMatchSnapshot();
  });
});

describe('Private Dining Edit form', () => {
  it('should display the Private Dining form', () => {
    const props = {
      enabled: true,
      privateDiningData: mockPrivateDiningData,
      requested: false,
    };

    const wrapper = shallowWithIntl(<PurePrivateDining {...props} />);

    expect(wrapper).toMatchSnapshot();
  });
});
