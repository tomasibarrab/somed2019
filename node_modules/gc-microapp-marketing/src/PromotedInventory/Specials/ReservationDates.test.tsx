import { mount } from 'enzyme';
import moment from 'moment';
import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { reduxForm } from 'redux-form';
import configureMockStore from 'redux-mock-store';
import { keys } from '../../translations/bundles/marketing.json';
import { CREATE_SPECIAL_FORM_NAME } from '../constants';
import ReservationDates from './ReservationDates';

const description = {
  endDate: 'end date desc',
  startDate: 'start date desc',
};

const legend = {
  endDate: 'end date legend',
  startDate: 'start date legend',
};

const change = jest.fn();

jest.mock('./DatePickerField', () => props => {
  /* tslint:disable:no-shadowed-variable */
  const React = require.requireActual('react');
  return <span className="date-picker-field">DatePickerField</span>;
});

describe('<ReservationDates />', () => {
  test('closed, startDate only, both, startDate only', () => {
    const store = configureMockStore()();

    const Decorated = reduxForm<any, any>({
      form: CREATE_SPECIAL_FORM_NAME,
    })(ReservationDates);

    const wrapper = mount(
      <Provider store={store}>
        <IntlProvider messages={keys} locale="en-US">
          <Decorated description={description} legend={legend} change={change} />
        </IntlProvider>
      </Provider>,
    );

    expect(wrapper.debug()).toMatchSnapshot('closed');

    const editButton = wrapper.find('button');
    editButton.simulate('click');

    let datePickerFields = wrapper.find('.date-picker-field');
    expect(datePickerFields.length).toEqual(1);

    const addEndDate = wrapper.find('Button');
    addEndDate.simulate('click');

    datePickerFields = wrapper.find('.date-picker-field');
    expect(datePickerFields.length).toEqual(2);

    const removeEndDate = wrapper.find('Button');
    removeEndDate.simulate('click');

    const actions = store.getActions();
    expect(actions.pop().type).toEqual('@@redux-form/CHANGE');

    datePickerFields = wrapper.find('.date-picker-field');
    expect(datePickerFields.length).toEqual(1);
  });
});
