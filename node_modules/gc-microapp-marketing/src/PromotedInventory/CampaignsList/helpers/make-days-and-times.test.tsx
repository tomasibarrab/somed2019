import moment from 'moment';
import React from 'react';
import { IntlProvider } from 'react-intl';
import { create } from 'react-test-renderer';
import { CampaignTypes } from '../../../store/campaigns/campaigns.types';
import { keys } from '../../../translations/bundles/marketing.json';
import makeDaysAndTimes from './make-days-and-times';

describe('makeDaysAndTimes', () => {
  const scenarios = [
    {
      description: '01',
      props: {
        endDate: '2018-01-01',
        isShortTerm: true,
        schedule: JSON.parse('[{"startTime":"10:15:00","endTime":"16:00:00","dayOfWeek":"MONDAY"}]'),
        startDate: '2018-01-01',
        type: CampaignTypes.PromotedResults,
      },
    },
    {
      description: '02',
      props: {
        endDate: '2018-02-01',
        isShortTerm: false,
        schedule: JSON.parse(
          `[{"startTime":"16:15:00","endTime":"23:45:00","dayOfWeek":"MONDAY"},
          {"startTime":"04:00:00","endTime":"10:00:00","dayOfWeek":"MONDAY"},
          {"startTime":"10:15:00","endTime":"16:00:00","dayOfWeek":"WEDNESDAY"},
          {"startTime":"16:15:00","endTime":"23:45:00","dayOfWeek":"FRIDAY"},
          {"startTime":"04:00:00","endTime":"10:00:00","dayOfWeek":"FRIDAY"}]`,
        ),
        startDate: '2018-01-01',
        type: CampaignTypes.PromotedResults,
      },
    },
    {
      description: '03',
      props: {
        endDate: '2018-02-01',
        isShortTerm: false,
        schedule: JSON.parse(
          `[{"startTime":"16:15:00","endTime":"23:45:00","dayOfWeek":"SUNDAY"},
          {"startTime":"04:00:00","endTime":"10:00:00","dayOfWeek":"SUNDAY"},
          {"startTime":"10:15:00","endTime":"16:00:00","dayOfWeek":"MONDAY"},
          {"startTime":"16:15:00","endTime":"23:45:00","dayOfWeek":"TUESDAY"},
          {"startTime":"04:00:00","endTime":"10:00:00","dayOfWeek":"TUESDAY"},
          {"startTime":"16:15:00","endTime":"23:45:00","dayOfWeek":"WEDNESDAY"},
          {"startTime":"04:00:00","endTime":"10:00:00","dayOfWeek":"WEDNESDAY"},
          {"startTime":"16:15:00","endTime":"23:45:00","dayOfWeek":"THURSDAY"},
          {"startTime":"04:00:00","endTime":"10:00:00","dayOfWeek":"THURSDAY"},
          {"startTime":"10:15:00","endTime":"16:00:00","dayOfWeek":"FRIDAY"},
          {"startTime":"04:00:00","endTime":"10:00:00","dayOfWeek":"SATURDAY"},
          {"startTime":"16:15:00","endTime":"23:45:00","dayOfWeek":"SATURDAY"}]`,
        ),
        startDate: '2018-01-01',
        type: CampaignTypes.PromotedResults,
      },
    },
    {
      description: '04',
      props: {
        endDate: '2018-02-01',
        isShortTerm: false,
        schedule: JSON.parse(
          `[{"startTime":"12:00:00","endTime":"21:00:00","dayOfWeek":"SUNDAY"},
          {"startTime":"12:00:00","endTime":"21:00:00","dayOfWeek":"MONDAY"},
          {"startTime":"12:00:00","endTime":"21:00:00","dayOfWeek":"TUESDAY"},
          {"startTime":"20:00:00","endTime":"23:30:00","dayOfWeek":"THURSDAY"},
          {"startTime":"20:00:00","endTime":"23:30:00","dayOfWeek":"FRIDAY"},
          {"startTime":"20:00:00","endTime":"23:30:00","dayOfWeek":"SATURDAY"}]`,
        ),
        startDate: '2018-01-01',
        type: CampaignTypes.Special,
      },
    },
    {
      description: 'Custom Promotions campaign',
      props: {
        isShortTerm: false,
        schedule: [
          { startTime: '10:15:00', endTime: '16:00:00', dayOfWeek: 'MONDAY' },
          { startTime: '04:00:00', endTime: '10:00:00', dayOfWeek: 'SUNDAY' },
        ],
        startDate: '2018-04-17',
        type: CampaignTypes.CustomPromotions,
      },
    },
  ];

  scenarios.forEach(({ description, props }) => {
    it(description, () => {
      const component = create(
        <IntlProvider locale="en-US" messages={keys}>
          <div>
            <ul>{makeDaysAndTimes(props.schedule, props.type, props.isShortTerm, props.startDate, props.endDate)}</ul>
          </div>
        </IntlProvider>,
      );
      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });
  });
});
