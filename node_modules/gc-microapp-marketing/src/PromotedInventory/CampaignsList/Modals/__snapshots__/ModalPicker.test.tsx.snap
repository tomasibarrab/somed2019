// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ModalPicker /> end modal with Special campaign should show Specials-specific strings 1`] = `
<div
  className="gca-modal-overlay"
  onClick={[Function]}
>
  <div
    className="gca-modal end-campaign-modal"
  >
    <header
      className="gca-modal-header"
    >
      <button
        className="gca-button link"
        onClick={[MockFunction]}
        type="button"
      >
        <span
          className="button-content"
        >
          <svg
            height="19"
            viewBox="0 0 19.6 19.3"
            width="19"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="m1.3 1.3l16 16m0-16l-16 16"
              fill="none"
              stroke="#ACB1BE"
              strokeWidth="1.1704"
            />
          </svg>
        </span>
      </button>
      <h1>
        End specials campaign
      </h1>
    </header>
    <main
      className="gca-modal-main"
    >
      <p>
        If you end this specials campaign, guests will no longer be able to book "Happy Hour" specials.
      </p>
      <button
        className="gca-button default"
        onClick={[Function]}
        type="button"
      >
        <span
          className="button-content"
        >
          <span>
            End this campaign
          </span>
        </span>
      </button>
      <button
        className="gca-button default"
        onClick={[MockFunction]}
        type="button"
      >
        <span
          className="button-content"
        >
          <span>
            No, continue campaign
          </span>
        </span>
      </button>
    </main>
  </div>
</div>
`;

exports[`<ModalPicker /> end modal's confirm should call patchCampaignRequest with refetchCampaigns: true 1`] = `
Array [
  Array [
    Object {
      "campaignId": "ee15add5-aced-c0a1-5a55-d0dd1e5fade5",
      "refetchCampaigns": true,
      "state": "ended",
    },
  ],
]
`;

exports[`<ModalPicker /> render approve modal to match snapshot 1`] = `"<InjectIntl(ApproveModal) campaign={{...}} confirm={[Function: mockConstructor]} close={[Function]} />"`;

exports[`<ModalPicker /> render blocked dates modal to match snapshot 1`] = `"<InjectIntl(BlockedDatesPickerModal) confirm={[Function: mockConstructor]} close={[Function: mockConstructor]} campaign={{...}} />"`;

exports[`<ModalPicker /> render end modal to match snapshot 1`] = `"<InjectIntl(EndModal) confirm={[Function: confirm]} close={[Function: mockConstructor]} campaign={{...}} />"`;

exports[`<ModalPicker /> render nothing to match snapshot 1`] = `""`;

exports[`<ModalPicker /> render pause modal to match snapshot 1`] = `"<InjectIntl(PauseModal) confirm={[Function: confirm]} close={[Function]} />"`;

exports[`<ModalPicker /> render request change modal to match snapshot 1`] = `"<InjectIntl(ChangeOrRemoveModal) campaign={{...}} confirm={[Function: mockConstructor]} close={[Function]} />"`;
