import { Button, Modal, ModalHeader, ModalMain } from 'gca-react-components';
import React, { SFC } from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { CampaignType, CampaignTypes } from '../../../store/campaigns/campaigns.types';

interface OP {
  confirm: (() => void);
  close: (() => void);
  campaign: CampaignType;
}

type Props = OP & InjectedIntlProps;

const EndModal: SFC<Props> = ({ close, confirm, intl, campaign }) => {
  const { type, incentives } = campaign;
  return (
    <Modal onClose={close} modalClass="end-campaign-modal">
      <ModalHeader
        onClose={close}
        title={intl.formatMessage({
          id:
            type === CampaignTypes.Special
              ? 'guestcampaigns.list.specials.end_campaign'
              : 'guestcampaigns.list.end_campaign',
        })}
      />
      <ModalMain>
        {type === CampaignTypes.Special
          ? [
              <FormattedMessage
                id="guestcampaigns.list.specials.end.description"
                tagName="p"
                key="description-1"
                values={{
                  'special-title': `"${incentives[0].name}"`,
                }}
              />,
            ]
          : [
              <FormattedMessage id="guestcampaigns.list.end.description.1" tagName="p" key="description-1" />,
              <FormattedMessage id="guestcampaigns.list.end.description.2" tagName="p" key="description-2" />,
            ]}
        <Button
          onClick={() => {
            confirm();
            close();
          }}
        >
          <FormattedMessage id="guestcampaigns.list.end.button.confirm" tagName="span" />
        </Button>
        <Button onClick={close}>
          <FormattedMessage id="guestcampaigns.list.end.button.cancel" tagName="span" />
        </Button>
      </ModalMain>
    </Modal>
  );
};

export default injectIntl(EndModal);
