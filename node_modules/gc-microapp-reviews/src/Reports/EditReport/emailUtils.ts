/**
 * Email utils
 */

// Taken from http://emailregex.com/
// tslint:disable-next-line:max-line-length
const regex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

/**
 * @param {string} emails unsanitized string of emails which may contain various whitespace, newlines, or commas
 * @return {string} string of emails with all whitespace, newlines, and comma groups separated by a single newline.
 */
export const sanitizeEmails = (emails: string) =>
  [emails].map(s => s.replace(/,/g, '\n')).map(s => s.replace(/(\s+)/g, '\n'))[0];

export const emailsToList = (emails: string) => emails.split('\n').filter(email => email.length);

export const emailsAreAllValid = (emails: string) =>
  emailsToList(sanitizeEmails(emails)).reduce((allValid, curr) => allValid && curr.match(regex) !== null, true);
