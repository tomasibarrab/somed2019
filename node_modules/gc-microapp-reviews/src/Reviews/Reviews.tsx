import { AsyncContent, Panel, StarIcon } from 'gca-react-components';
import React from 'react';
import { InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';

import { fetchReviewSummary, reviewSummarySelector } from '../store/reviewSummary/reviewSummary';
import { Dispatch, Status } from '../store/types';
import AllReviews from './AllReviews/AllReviews';
import Filters from './Filters/Filters';
import './Reviews.scss';
import Summary from './Summary/Summary';

interface SP {
  status: Status;
}

interface DP {
  fetchReviewSummary(): void;
}

interface BaseProps extends SP, DP {}
interface Props extends BaseProps, InjectedIntlProps {}

class Reviews extends React.Component<Props> {
  public componentDidMount() {
    this.props.fetchReviewSummary();
  }

  public render() {
    const { status } = this.props;
    const starIcon = <StarIcon height="39px" color="#A0A8BD" />;

    return (
      <Panel title={this.props.intl.formatMessage({ id: 'reviews.title' })}>
        <AsyncContent
          isEmpty={status === Status.Empty}
          isError={status === Status.Failed}
          isLoading={status === Status.Started}
          emptyIcon={starIcon}
          emptyMessage={this.props.intl.formatMessage({ id: 'reviews.emptyMessage' })}
          errorTitle={this.props.intl.formatMessage({ id: 'app.errorTitle' })}
          errorMessage={this.props.intl.formatMessage({ id: 'app.errorMessage' })}
        >
          <section className="reviews-body">
            <Summary />
            <Filters />
            <AllReviews />
          </section>
        </AsyncContent>
      </Panel>
    );
  }
}

const mapDispatch = {
  fetchReviewSummary: fetchReviewSummary.started,
};

// TODO: Figure out why this won't typecheck
export default connect<SP, DP, {}>(reviewSummarySelector as any, mapDispatch)(injectIntl(Reviews));
