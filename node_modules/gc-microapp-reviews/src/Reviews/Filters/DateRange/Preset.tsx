import map from 'lodash/map';
import moment from 'moment';
import React from 'react';
import { FormattedMessage } from 'react-intl';
import { connect } from 'react-redux';

import { dateRange } from '../../../store/reviewFilters/reviewFilters';

export const presets = [
  { value: 14, messageId: 'reviews.filters.dateRange.twoWeeks' },
  { value: 30, messageId: 'reviews.filters.dateRange.oneMonth' },
  { value: 180, messageId: 'reviews.filters.dateRange.sixMonths' },
  { value: 365, messageId: 'reviews.filters.dateRange.oneYear' },
  { value: 9999, messageId: 'reviews.filters.dateRange.allTime' },
];

interface DateFilterItemProps {
  messageId: string;
  value: number;
  set(payload: any, applyOnSet?: boolean): void;
}

export class DateFilterItem extends React.Component<DateFilterItemProps> {
  public render() {
    return (
      <li className="filters-dropdown-item">
        <button className="date-filter-button" onClick={this.handleClick}>
          <FormattedMessage id={this.props.messageId} />
        </button>
      </li>
    );
  }

  private handleClick = () => {
    this.props.set(
      {
        end: moment().toISOString(),
        start: moment()
          .subtract(this.props.value, 'days')
          .toISOString(),
      },
      true,
    );
  };
}

interface DP {
  set(payload: any, applyOnSet?: boolean): void;
}

function Preset(props: DP) {
  return (
    <ul className="filters-dropdown-list">
      {presets.map(({ messageId, value }) => (
        <DateFilterItem messageId={messageId} key={value} value={value} set={props.set} />
      ))}
    </ul>
  );
}

export default connect<{}, DP, {}>(null, dateRange.actions)(Preset);
export { Preset as PurePreset };
