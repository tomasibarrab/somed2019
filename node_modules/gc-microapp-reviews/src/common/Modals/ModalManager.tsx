import { IntroVideoModal } from 'gca-react-components';
import get from 'lodash/get';
import React from 'react';
import { connect } from 'react-redux';

import DeleteReportModal from '../../Reports/DeleteReportModal/DeleteReportModal';
import { closeModal, confirmCloseModal } from '../../store/modals/modals';
import { State } from '../../store/types';
import ErrorModal from './ErrorModal';

interface Props {
  currentModal: string;
  closeModal(): void;
  confirmCloseModal(): void;
}

const ModalManager = (props: Props) => {
  switch (props.currentModal) {
    case 'DELETE_REPORT':
      return <DeleteReportModal closeModal={props.closeModal} confirmCloseModal={props.confirmCloseModal} />;
    case 'ERROR':
      return <ErrorModal closeModal={props.closeModal} />;
    case 'INTRO_VIDEO':
      return (
        <IntroVideoModal
          titleId="modals.introVideo.title"
          videoSource={get(window, ['gcaConfig', 'introVideoUrl'])}
          bodyId="modals.introVideo.body"
          buttonId="modals.introVideo.button"
          onClose={props.closeModal}
        />
      );
    default:
      return null;
  }
};

function mapStateToProps(state: State) {
  return {
    currentModal: state.modals.currentModal,
  };
}

const mapDispatchToProps = {
  closeModal,
  confirmCloseModal,
};

export default connect(mapStateToProps, mapDispatchToProps)(ModalManager);
export { ModalManager as PureModalManager };
