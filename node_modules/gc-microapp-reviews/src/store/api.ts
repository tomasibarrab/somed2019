import { Observable } from 'rxjs/Observable';
import { ajaxGet, ajaxGetJSON, ajaxPost, ajaxPut } from 'rxjs/observable/dom/AjaxObservable';

import { From, Reply, ReviewsDTO } from '../store/allReviews/allReviews';
import { Report, ReportsDTO } from '../store/reports/reports';
import { ReviewSummaryDTO } from '../store/reviewSummary/reviewSummaryDTO';

export function fetchCurrentContext() {
  return ajaxGetJSON('/setup/api/currentContext');
}

export function fetchFeatureToggles() {
  return ajaxGetJSON('/setup/api/featureToggles');
}

export function fetchAllReviews({ rid, queryString }: { rid: number; queryString: string }) {
  return ajaxGetJSON<ReviewsDTO>(`/admin/api/${rid}/all-reviews${queryString}`);
}

export function fetchAllReviewsViaGateway({ queryString }: { queryString: string }) {
  return ajaxGetJSON<ReviewsDTO>(`/gateway/v2/reviews/AllReviews${queryString}`);
}

export interface PostReplyDTO {
  Message: string;
  From: From;
  Name: string;
  Role: string;
}

interface PostReviewReplyOptions {
  reviewId: string;
  rid: number;
  body: PostReplyDTO;
}

export function postReviewReply({ reviewId, rid, body }: PostReviewReplyOptions): Observable<{ response: Reply }> {
  return ajaxPost(`/gateway/v2/reviews/ReviewReplies/${reviewId}?rid=${rid}`, body, {
    'Content-Type': 'application/json',
  });
}

export function mockPostReviewReply({ reviewId, rid, body }: PostReviewReplyOptions): Observable<{ response: Reply }> {
  function guid() {
    // tslint:disable-next-line:no-bitwise
    return '00000000-0000-4000-8000-000000000000'.replace(/0/g, () => (0 | (Math.random() * 16)).toString(16));
  }

  const delayedPost = <T>(response: T) =>
    new Observable<{ response: T }>(observer => {
      setTimeout(() => {
        observer.next({ response });
      }, 1000);
    });

  const reply: Reply = {
    From: body.From,
    Message: body.Message,
    Name: body.Name,
    ReplyId: guid(),
    ResponseDateTimeUtc: new Date().toISOString(),
    RestaurantId: rid,
    ReviewId: reviewId,
    Role: body.Role,
  };

  return delayedPost(reply);
}

export function fetchReports({ rid }: { rid: number }) {
  return ajaxGetJSON<ReportsDTO>(`/admin/api/restaurant/${rid}/reports`);
}

export function addReport({ rid, report }: { rid: number; report: Report }): Observable<{ response: { id: string } }> {
  return ajaxPost(`/admin/api/restaurant/${rid}/reports`, report, { 'Content-Type': 'application/json' });
}

export function updateReport({ rid, report }: { rid: number; report: Report }) {
  return ajaxPut(`/admin/api/restaurant/${rid}/reports/${report.ReportId}`, report, {
    'Content-Type': 'application/json',
  });
}

export function fetchReviewSummary({ rid }: { rid: number }) {
  return ajaxGetJSON<ReviewSummaryDTO>(`/admin/api/restaurant/${rid}/review-summary`);
}
