/**
 * Combine all reducers in this file and export the combined reducers.
 * If we were to do this in store.js, reducers wouldn't be hot reloadable.
 */
import { currentContextReducer } from 'gca-react-components/src/redux-modules/currentContext';
import { featureTogglesReducer } from 'gca-react-components/src/redux-modules/featureToggles';
import { createReducer as createLanguageReducer } from 'gca-react-components/src/redux-modules/languageProvider';
import get from 'lodash/get';
import { combineReducers } from 'redux';

import { State } from './types';

import { reducer as leadGenReducer } from './redux-modules/leadGen';
import { reducer as productsReducer } from './redux-modules/products';

// Retrieve the locale code from the restaurant gcaConfig or the group groupSettingsConfig
const appType = get(window, ['gcScope', 'type']);
const config = appType === 'restaurant' ? 'gcaConfig' : 'groupSettingsConfig';
const locale = get(window, [config, 'i18n', 'primaryLocale']);

/**
 * Creates the main reducer from all other reducers.
 */
export default function createReducer(initialState: Partial<State> | undefined) {
  return combineReducers<State>({
    currentContext: currentContextReducer,
    // feature toggles are not required for group
    featureToggles: featureTogglesReducer,
    language: createLanguageReducer({ locale: locale || 'en-us' }),
    leadGen: leadGenReducer,
    products: productsReducer,
  });
}
