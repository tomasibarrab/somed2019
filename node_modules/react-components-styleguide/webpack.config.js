const path = require('path');
const webpack = require('webpack');

const postcssConfig = require('../../packages/gca-webpack-config/postcss.loader');

module.exports = {
  resolve: {
    extensions: ['.ts', '.tsx', '.js', '.jsx', '.react.js'],
  },
  module: {
    rules: [
      {
        test: /\.js$/, // Transform all .js files required somewhere with Babel
        use: [
          {
            loader: 'babel-loader',
          },
        ],
        include: /node_modules\/gca-react-components/,
      },
      {
        test: /\.tsx?$/,
        include: /node_modules\/gca-react-components/,
        use: [
          {
            loader: 'babel-loader',
          },
          {
            loader: 'awesome-typescript-loader',
            query: {
              // Fixes issue with logs polluting stats: https://github.com/s-panferov/awesome-typescript-loader/issues/375
              silent: process.argv.indexOf('--json') !== -1,
            },
          },
        ],
      },
      {
        // Transform our own .css files with PostCSS and CSS-modules
        test: /\.(css|scss)$/,
        exclude: /node_modules\/(?!gca-react-components)/,
        use: [
          'style-loader',
          {
            loader: 'css-loader',
            query: {
              localIdentName: '[local]__[path][name]__[hash:base64:5]',
              importLoaders: 1,
              sourceMap: true,
            },
          },
          postcssConfig,
          'sass-loader',
        ]
      },
      {
        // Do not transform vendor's CSS with CSS-modules
        // The point is that they remain in global scope.
        // Since we require these CSS files in our JS or CSS files,
        // they will be a part of our compilation either way.
        // So, no need for ExtractTextPlugin here.
        test: /\.css$/,
        include: /node_modules/,
        use: [{ loader: 'style-loader' }, { loader: 'css-loader' }],
      },
      {
        test: /\.(eot|svg|ttf|woff|woff2)$/,
        use: [
          { loader: 'file-loader' },
        ],
      },
      {
        test: /\.(jpg|png|gif)$/,
        use: [
          { loader: 'file-loader' },
        ],
      },
      {
        test: /\.html$/,
        use: [
          { loader: 'html-loader' },
        ],
      },
      {
        test: /\.(mp4|webm)$/,
        use: [
          {
            loader: 'url-loader',
            options: {
              limit: 10000,
            },
          },
        ],
      },
    ]
  }
};
