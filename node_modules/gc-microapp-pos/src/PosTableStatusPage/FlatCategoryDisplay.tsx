import { LabeledCheckbox } from '@buffet/checkbox';
import React from 'react';
import { Category, CategoryStatus } from '../store/types';
import './FlatCategoryDisplay.scss';

interface Props {
  categories: Category[];
  statusDictionary: { [id: number]: CategoryStatus };
  onCheckCategory: (categoryId: string) => void;
}

class FlatCategoryDisplay extends React.Component<Props, {}> {
  public render() {
    return (
      <div className="flat-category">
        {this.props.categories.map((val: Category) => (
          <div className="category-name" key={val.category_id}>
            <LabeledCheckbox
              id={val.category_id}
              className="checkbox"
              checked={!!val.checked}
              label={val.name}
              onClick={() => this.props.onCheckCategory(val.category_id)}
              key={val.category_id}
            />

            {this.renderStatus(val.status_id)}
          </div>
        ))}
      </div>
    );
  }
  private renderStatus(statusId: number | null): React.ReactNode {
    if (statusId && Object.keys(this.props.statusDictionary).length !== 0) {
      const statusName: string = this.props.statusDictionary[statusId].status;
      return <span className={'label-status status status-' + statusName}>{statusName}</span>;
    }
    return <div className="empty-status status" />;
  }
}

export { FlatCategoryDisplay, Props };
