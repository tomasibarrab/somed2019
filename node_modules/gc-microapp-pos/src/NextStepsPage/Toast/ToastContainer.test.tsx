import { Button } from '@buffet/button';
import { shallow } from 'enzyme';
import { AsyncContent } from 'gca-react-components';
import React from 'react';
import { AsyncStatus } from '../../store/AsyncState';
import ToastContainer from './ToastContainer';
import ToastSteps from './ToastSteps';
import ToastWaiting from './ToastWaiting';

describe('<ToastContainer />', () => {
  const setup = (override = {}) => {
    const toastContainer = shallow(<ToastContainer />);
    return { toastContainer };
  };

  it('should show ToastSteps before clicking Done', () => {
    const { toastContainer } = setup();
    toastContainer.setState({ isToastStepsCompleted: false });

    expect(toastContainer.find(ToastSteps).length).toBe(1);
    expect(toastContainer.find(ToastWaiting).length).toBe(0);
  });

  it('should show ToastWaiting after clicking Done', () => {
    const { toastContainer } = setup();
    toastContainer.setState({ isToastStepsCompleted: true });

    expect(toastContainer.find(ToastSteps).length).toBe(0);
    expect(toastContainer.find(ToastWaiting).length).toBe(1);
  });

  it('should call onDone when button clicked', () => {
    const { toastContainer } = setup();

    toastContainer.instance().handleToastStepsDone();
    expect(toastContainer.state('isToastStepsCompleted')).toEqual(true);
    expect(toastContainer.find(ToastSteps).length).toBe(0);
    expect(toastContainer.find(ToastWaiting).length).toBe(1);
  });
});
