import { shallow } from 'enzyme';
import React from 'react';

import { Nav } from '@buffet/nav';
import { Props, PurePosNav as PosNav } from './PosNav';

describe('<PosNav />', () => {
  const setup = (propOverride = {}) => {
    const props: Props = {
      displayState: 'active',
      posId: 'a pos id',
    };
    const finalProps = { ...props, ...propOverride };

    const posNav = shallow(<PosNav {...finalProps} />);

    return { props, posNav };
  };

  it('should exist', () => {
    const { posNav } = setup();

    expect(posNav).toBeDefined();
  });
  it('displays Nav if is active and not upserve', () => {
    const { posNav } = setup({ displayState: 'active', posName: 'not upserve' });
    expect(posNav.find(Nav).length).toBe(1);
  });
  it('does not display Nav if is not active', () => {
    const { posNav } = setup({ displayState: 'landing' });
    expect(posNav.find(Nav).length).toBe(0);
  });
  it('does not display Nav if is is upserve', () => {
    const { posNav } = setup({ posId: 'a4y0c000000UpiDAAS' });
    expect(posNav.find(Nav).length).toBe(0);
  });
});
