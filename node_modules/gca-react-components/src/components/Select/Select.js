import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import ReactSelect, { Creatable } from 'react-select';
import { Chevron } from '../../icons/Chevron';
import './Select.scss';

function ArrowRenderer({ isOpen }) {
  return <Chevron direction={isOpen ? 'up' : 'down'} color="#878787" />;
}

ArrowRenderer.propTypes = {
  isOpen: PropTypes.bool.isRequired,
};

/**
 * Styling and some default behavior around [React Select](https://github.com/JedWatson/react-select).
 * All props are passed through, so options should be fully supported.
 */

export function Select(props) {
  const Component = props.creatable ? Creatable : ReactSelect;
  return (
    <Component
      searchable={false}
      clearable={false}
      arrowRenderer={ArrowRenderer}
      simpleValue
      {...props}
      className={classNames(props.className, 'gca-select', props.type, { invalid: !props.valid })}
    />
  );
}

Select.propTypes = {
  creatable: PropTypes.bool,
  type: PropTypes.oneOf(['default', 'bare']),
  className: PropTypes.string,
  valid: PropTypes.bool,
  tabIndex: PropTypes.number,
};

Select.defaultProps = {
  type: 'default',
  valid: true,
  creatable: false,
};

export default Select;
