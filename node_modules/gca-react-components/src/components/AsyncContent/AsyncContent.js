/**
 *
 * AsyncContent: a component which will either show:
 *  - loading spinner    - if prop.isLoading
 *  - default error view - if prop.isError
 *  - custom error view  - if prop.isError && prop.errorComponent
 *  - default empty view - if prop.isEmpty
 *  - custom empty view  - if prop.isEmpty && prop.emptyComponent
 *  - children           - if !prop.isLoading && !prop.isError
 *  For errors, the ErrorPanel is used by default but you can override that
 *   by passing in props.errorComponent to override the default error view
 *
 */

import React from 'react';
import { bool, node, string } from 'prop-types';
import { LoadingPanel } from '../../components/LoadingPanel/LoadingPanel';
import { EmptyPanel } from '../../components/EmptyPanel/EmptyPanel';
import { ErrorPanel } from '../../components/ErrorPanel/ErrorPanel';

export function AsyncContent(props) {
  const ErrorComponent = props.errorComponent || ErrorPanel;
  const EmptyComponent = props.emptyComponent || EmptyPanel;

  // if loading show loaderx
  if (props.isLoading) return <LoadingPanel />;

  // if in error state then show error
  if (props.isError) return <ErrorComponent title={props.errorTitle} message={props.errorMessage} />;

  // else if the results are empty then show an empty component
  if (props.isEmpty) return <EmptyComponent icon={props.emptyIcon} message={props.emptyMessage} />;

  // else show content
  return React.Children.only(props.children);
}

AsyncContent.propTypes = {
  isLoading: bool,
  isError: bool,
  isEmpty: bool,
  errorTitle: string,
  errorMessage: string,
  errorComponent: node,
  emptyIcon: node,
  emptyMessage: node,
  emptyComponent: node,
  children: node,
};
