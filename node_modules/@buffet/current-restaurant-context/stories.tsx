import React from 'react';
import { storiesOf } from '@storybook/react';
import { withReadme } from 'storybook-readme';
import {
  CurrentRestaurantConsumer,
  CurrentRestaurantProvider,
  RESTAURANT_CONTEXT_URL
} from './src/CurrentRestaurantContext';
import mock, { delay } from 'xhr-mock';
import restaurantContextFixture from './fixtures/restaurantContext';
import README from './README.md';

class CurrentRestaurantContextStory extends React.Component {
  render() {
    (window as any).gcScope = {
      id: 1906,
      type: 'restaurant'
    };

    mock.setup();
    mock.get(
      `${RESTAURANT_CONTEXT_URL}1906`,
      delay(
        {
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(restaurantContextFixture)
        },
        3000
      )
    );

    return (
      <CurrentRestaurantProvider>
        <CurrentRestaurantConsumer>
          {restaurantState => {
            if (restaurantState.status === 'done') {
              return <div>Restaurant: {restaurantState.data.name}!</div>;
            } else if (restaurantState.status === 'started' || restaurantState.status === 'init') {
              return <div>loadingâ€¦</div>;
            } else {
              return <div>oops!</div>;
            }
          }}
        </CurrentRestaurantConsumer>
      </CurrentRestaurantProvider>
    );
  }
}

storiesOf('CurrentRestaurantContext', module)
  .addDecorator(withReadme(README))
  .add('CurrentRestaurantContext', () => {
    return <CurrentRestaurantContextStory />;
  });
