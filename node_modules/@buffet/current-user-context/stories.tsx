import React from 'react';
import { storiesOf } from '@storybook/react';
import { withReadme } from 'storybook-readme';
import { CurrentUserConsumer, CurrentUserProvider, USER_CONTEXT_URL } from './src/CurrentUserContext';
import mock, { delay } from 'xhr-mock';
import userContextFixture from './fixtures/userContext';
import README from './README.md';

class CurrentUserContextStory extends React.Component {
  render() {
    mock.setup();
    mock.get(
      USER_CONTEXT_URL,
      delay(
        {
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(userContextFixture)
        },
        3000
      )
    );

    return (
      <CurrentUserProvider>
        <CurrentUserConsumer>
          {userState => {
            if (userState.status === 'done') {
              return <div>Hi {userState.data.firstName}!</div>;
            } else if (userState.status === 'started' || userState.status === 'init') {
              return <div>loadingâ€¦</div>;
            } else {
              return <div>oops!</div>;
            }
          }}
        </CurrentUserConsumer>
      </CurrentUserProvider>
    );
  }
}

storiesOf('CurrentUserContext', module)
  .addDecorator(withReadme(README))
  .add('CurrentUserContext', () => {
    return <CurrentUserContextStory />;
  });
