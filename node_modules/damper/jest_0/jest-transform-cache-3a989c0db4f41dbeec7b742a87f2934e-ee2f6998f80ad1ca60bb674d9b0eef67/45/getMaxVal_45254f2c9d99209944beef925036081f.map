{"file":"/app/src/utils/general/getMaxVal.ts","mappings":";;AAAA,6BAA4B;AAO5B;;;GAGG;AACU,QAAA,SAAS,GAAG,UAAC,EAA8B;QAA9B,4BAA8B,EAA5B,cAAI,EAAE,YAAG;IACnC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;KACxC;IAED,IAAM,KAAK,GAAG,IAAI;SACf,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,WAAW,EAA7B,CAA6B,CAAC;SAC5C,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,KAAK,KAAK,EAArB,CAAqB,CAAC;SACpC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,EAAN,CAAM,CAAC,CAAC;IAEtB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,OAAO,CAAC,CAAC;KACV;IAED,IAAM,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC,UAAC,EAAE,IAAK,OAAA,OAAO,EAAE,KAAK,QAAQ,EAAtB,CAAsB,CAAC,CAAC;IAEtE,IAAI,iBAAiB,EAAE;QACrB,OAAO,SAAG,CAAC,KAAK,CAAC,CAAC;KACnB;IAED,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1B,CAAC,CAAC","names":[],"sources":["/app/src/utils/general/getMaxVal.ts"],"sourcesContent":["import { max } from './max';\n\ninterface IGetMaxVal {\n  data?: any[];\n  key?: string;\n}\n\n/**\n * Gets the max value from an arrays visible values\n * If the array is not number based it will return the length instead\n */\nexport const getMaxVal = ({ data, key }: IGetMaxVal = {}): number => {\n  if (!data || !key) {\n    throw new Error('Missing data or key');\n  }\n\n  const array = data\n    .filter((d) => typeof d[key] !== 'undefined')\n    .filter((d) => d.isVisible !== false)\n    .map((d) => d[key]);\n\n  if (array.length === 0) {\n    return 0;\n  }\n\n  const arrayIsAllNumbers = array.every((el) => typeof el === 'number');\n\n  if (arrayIsAllNumbers) {\n    return max(array);\n  }\n\n  return array.length - 1;\n};\n"],"version":3}