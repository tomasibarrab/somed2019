ef232b71230c683be69dc236cf908493
"use strict"; // tslint:disable

/* istanbul ignore next */
var cov_qht8ntu2u = function () {
  var path = "/app/src/utils/general/max.ts";
  var hash = "35e86bb5b7280bf278e91febb43232c90e2e69d5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/app/src/utils/general/max.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 10
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "3": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "4": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 23
        }
      },
      "5": {
        start: {
          line: 10,
          column: 36
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "6": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "7": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 16,
          column: 13
        }
      },
      "8": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "9": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 22
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "11": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "12": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "13": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "14": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "15": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "16": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "17": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 10
          },
          end: {
            line: 7,
            column: 11
          }
        },
        loc: {
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 16,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 16,
            column: 13
          }
        }, {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 16,
            column: 13
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 14,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 29
          }
        }, {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 33
          }
        }, {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 37
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 14,
            column: 52
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 25,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 23,
            column: 65
          }
        }, {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 33
          }
        }, {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 37
          }
        }, {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 25,
            column: 52
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "35e86bb5b7280bf278e91febb43232c90e2e69d5"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_qht8ntu2u.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * From D3-Array: https://github.com/d3/d3-array/blob/master/src/max.js
 */

/* istanbul ignore next */
cov_qht8ntu2u.s[1]++;

var max = function (values, valueof) {
  /* istanbul ignore next */
  cov_qht8ntu2u.f[0]++;
  var max;

  /* istanbul ignore next */
  cov_qht8ntu2u.s[2]++;

  if (valueof === undefined) {
    /* istanbul ignore next */
    cov_qht8ntu2u.b[0][0]++;
    cov_qht8ntu2u.s[3]++;

    for (var _i =
    /* istanbul ignore next */
    (cov_qht8ntu2u.s[4]++, 0), values_1 =
    /* istanbul ignore next */
    (cov_qht8ntu2u.s[5]++, values); _i < values_1.length; _i++) {
      var value =
      /* istanbul ignore next */
      (cov_qht8ntu2u.s[6]++, values_1[_i]);

      /* istanbul ignore next */
      cov_qht8ntu2u.s[7]++;

      if (
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[2][0]++, value != null) &&
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[2][1]++, value >= value) && (
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[2][2]++, max === undefined) ||
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[2][3]++, max < value))) {
        /* istanbul ignore next */
        cov_qht8ntu2u.b[1][0]++;
        cov_qht8ntu2u.s[8]++;
        max = value;
      } else
      /* istanbul ignore next */
      {
        cov_qht8ntu2u.b[1][1]++;
      }
    }
  } else {
    /* istanbul ignore next */
    cov_qht8ntu2u.b[0][1]++;
    var index =
    /* istanbul ignore next */
    (cov_qht8ntu2u.s[9]++, -1);

    /* istanbul ignore next */
    cov_qht8ntu2u.s[10]++;

    for (var _a =
    /* istanbul ignore next */
    (cov_qht8ntu2u.s[11]++, 0), values_2 =
    /* istanbul ignore next */
    (cov_qht8ntu2u.s[12]++, values); _a < values_2.length; _a++) {
      var value =
      /* istanbul ignore next */
      (cov_qht8ntu2u.s[13]++, values_2[_a]);

      /* istanbul ignore next */
      cov_qht8ntu2u.s[14]++;

      if (
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[4][0]++, (value = valueof(value, ++index, values)) != null) &&
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[4][1]++, value >= value) && (
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[4][2]++, max === undefined) ||
      /* istanbul ignore next */
      (cov_qht8ntu2u.b[4][3]++, max < value))) {
        /* istanbul ignore next */
        cov_qht8ntu2u.b[3][0]++;
        cov_qht8ntu2u.s[15]++;
        max = value;
      } else
      /* istanbul ignore next */
      {
        cov_qht8ntu2u.b[3][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_qht8ntu2u.s[16]++;
  return max;
};

/* istanbul ignore next */
cov_qht8ntu2u.s[17]++;
exports.max = max;