{"version":3,"sources":["paddingShape.test.js"],"names":["checkProps","p","propTypes","padding","paddingShape","props","createCheckPropErrorCalled","stub","expectCalled","expect","calledOnce","toBe","describe","it","keys","Object","defaultPadding","toEqual","checkPropErrorCalled","beforeEach","sinon","console","afterEach","error","restore","top","right","bottom","left"],"mappings":";;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAA8C;AAAA,MAA1CC,SAA0C,uEAA9B;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAA8B;AAC/D,MAAMC,KAAK,GAAG;AAAEF,IAAAA,OAAO,EAAEF;AAAX,GAAd;AACA,iCAAeC,SAAf,EAA0BG,KAA1B,EAAiC,MAAjC,EAAyC,eAAzC;AACD,CAHD;;AAKA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,IAAD;AAAA,SAAU,UAACF,KAAD,EAAgC;AAAA,QAAxBG,YAAwB,uEAAT,IAAS;AAC3ER,IAAAA,UAAU,CAACK,KAAD,CAAV;AACAI,IAAAA,MAAM,CAACF,IAAI,CAACG,UAAN,CAAN,CAAwBC,IAAxB,CAA6BH,YAA7B;AACD,GAHkC;AAAA,CAAnC;;AAKAI,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACnD,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYE,4BAAZ,CAAb;AACAP,IAAAA,MAAM,CAACK,IAAD,CAAN,CAAaG,OAAb,CAAqB,CACnB,KADmB,EAEnB,OAFmB,EAGnB,QAHmB,EAInB,MAJmB,CAArB;AAMD,GARC,CAAF;AASD,CAVO,CAAR;AAYAL,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7B,MAAIM,oBAAJ;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACf,QAAMZ,IAAI,GAAGa,eAAMb,IAAN,CAAWc,OAAX,EAAoB,OAApB,CAAb;;AACAH,IAAAA,oBAAoB,GAAGZ,0BAA0B,CAACC,IAAD,CAAjD;AACD,GAHS,CAAV;AAKAe,EAAAA,SAAS,CAAC,YAAM;AACdD,IAAAA,OAAO,CAACE,KAAR,CAAcC,OAAd;AACD,GAFQ,CAAT,CAR6B,CAY7B;;AACAZ,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,IAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAM;AACrDK,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAM;AAClEK,MAAAA,oBAAoB,CAAC;AACnBO,QAAAA,GAAG,EAAE,GADc;AAEnBC,QAAAA,KAAK,EAAE,CAFY;AAGnBC,QAAAA,MAAM,EAAE,CAHW;AAInBC,QAAAA,IAAI,EAAE;AAJa,OAAD,CAApB;AAMD,KAPC,CAAF;AAQD,GAbO,CAAR;AAeAhB,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,IAAAA,EAAE,CAAC,2DAAD,EAA8D,YAAM;AACpEK,MAAAA,oBAAoB,CAAC;AACnBO,QAAAA,GAAG,EAAE,EADc;AAEnBC,QAAAA,KAAK,EAAE,EAFY;AAGnBC,QAAAA,MAAM,EAAE,EAHW;AAInBC,QAAAA,IAAI,EAAE;AAJa,OAAD,EAKjB,KALiB,CAApB;AAMD,KAPC,CAAF;AASAf,IAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5DK,MAAAA,oBAAoB,CAAC;AACnBO,QAAAA,GAAG,EAAE;AADc,OAAD,EAEjB,KAFiB,CAApB;AAGD,KAJC,CAAF;AAKD,GAfO,CAAR;AAgBD,CA5CO,CAAR","sourcesContent":["/* eslint-disable no-console */\nimport sinon from 'sinon';\nimport { checkPropTypes } from 'prop-types';\nimport { defaultPadding, paddingShape } from '../paddingShape';\n\nconst checkProps = (p, propTypes = { padding: paddingShape }) => {\n  const props = { padding: p };\n  checkPropTypes(propTypes, props, 'prop', 'TestComponent');\n};\n\nconst createCheckPropErrorCalled = (stub) => (props, expectCalled = true) => {\n  checkProps(props);\n  expect(stub.calledOnce).toBe(expectCalled);\n};\n\ndescribe('defaultPadding', () => {\n  it('should match css-style padding shorthand', () => {\n    const keys = Object.keys(defaultPadding);\n    expect(keys).toEqual([\n      'top',\n      'right',\n      'bottom',\n      'left',\n    ]);\n  });\n});\n\ndescribe('paddingShape', () => {\n  let checkPropErrorCalled;\n\n  beforeEach(() => {\n    const stub = sinon.stub(console, 'error');\n    checkPropErrorCalled = createCheckPropErrorCalled(stub);\n  });\n\n  afterEach(() => {\n    console.error.restore();\n  });\n\n  //\n  describe('Wrong values', () => {\n    it('Should return false when no prop is passed', () => {\n      checkPropErrorCalled(false);\n    });\n\n    it('Should throw an error when a wrong prop value is passed', () => {\n      checkPropErrorCalled({\n        top: '0',\n        right: 0,\n        bottom: 0,\n        left: 0,\n      });\n    });\n  });\n\n  describe('Correct values', () => {\n    it('Should do nothing when correct prop of types are provided', () => {\n      checkPropErrorCalled({\n        top: 20,\n        right: 15,\n        bottom: 11,\n        left: 0,\n      }, false);\n    });\n\n    it('Should do nothing when partial props are provided', () => {\n      checkPropErrorCalled({\n        top: 20,\n      }, false);\n    });\n  });\n});\n"]}