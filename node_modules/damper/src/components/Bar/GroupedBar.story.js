import React from 'react';
import { boolean, number } from '@storybook/addon-knobs';
import { Bar } from './Bar';
import theme from '../../theme/defaultTheme';

const createDataPoint = (values, width) => [
  {
    offset: 0,
    values: [
      {
        theme: {
          style: {
            fill: 'red',
          },
        },
        value: values[0],
      },
      {
        theme: {
          style: {
            fill: 'green',
          },
        },
        value: values[1],
      },
    ],
  },
  {
    offset: width - 16,
    value: {
      theme: {
        style: {
          fill: 'blue',
        },
      },
      value: values[2],
    },
  },
  {
    offset: (width * 2) - 32,
    value: {
      theme: {
        style: {
          fill: 'purple',
        },
      },
      value: values[3],
    },
  },
];

class GroupedBarStory extends React.Component {
  render() {
    const valueOption = {
      range: true,
      min: 0,
      max: 800,
      step: 1,
    };

    const roundingOption = {
      range: true,
      min: 0,
      max: 100,
      step: 1,
    };

    const widthOption = {
      range: true,
      min: 0,
      max: 100,
      step: 1,
    };

    const isMounted = boolean('isMounted', true);
    const isAnimated = boolean('isAnimated', true);

    const value1 = number('Value: 01', 125, valueOption);
    const value2 = number('Value: 02', 64, valueOption);
    const value3 = number('Value: 03', 201, valueOption);
    const value4 = number('Value: 04', 82, valueOption);

    const rounding = number('Rounding', 0, roundingOption);
    const width = number('Width', 60, widthOption);

    let customisedTheme = theme;

    if (rounding > 0) {
      customisedTheme = {
        ...customisedTheme,
        bars: {
          ...customisedTheme.bars,
          default: {
            ...customisedTheme.bars.default,
            rounding,
          },
        },
      };
    }

    customisedTheme = {
      ...customisedTheme,
      bars: {
        ...customisedTheme.bars,
        default: {
          ...customisedTheme.bars.default,
          width,
        },
      },
    };

    const graphHeight = 450;

    const data = createDataPoint([
      value1,
      value2,
      value3,
      value4,
    ], width);

    return (
      <article className="markdown-body">
        <h1>GroupedBar Component</h1>
        <svg width="100%" height={graphHeight}>
          {isMounted && (
            <Bar
              actions={{
                onClick: () => {},
                onMouseOver: () => {},
                onMouseOut: () => {},
              }}
              id="storybook-test"
              isAnimated={isAnimated}
              scale={(d) => d}
              theme={customisedTheme}
              group={data}
              xOffset={width / 2}
              yOffset={graphHeight}
            />
          )}
        </svg>
        <hr />
        {/* <p style={{ margin: '24px 0' }}>
          The Bar component is heavily used in bar graphs. It requires y-alignment within the component
          that&#39;s using it.
        </p>
        <p>
        Current settings for the previewed bar are;<br />
          Width: {width}px<br />
          Height: {value}px (from value)<br />
          Rounding: {rounding}px<br />
          isAnimated: {`${isAnimated}`}<br />
        </p> */}
      </article>
    );
  }
}

export { GroupedBarStory };
