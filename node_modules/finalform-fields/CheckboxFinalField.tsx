import * as React from 'react';
import { FieldRenderProps } from 'react-final-form';

import { LabeledCheckbox, LabeledCheckboxProps } from '@buffet/checkbox';

import { customFinalField, InputFieldProps } from './customfield';

type CheckboxFieldProp = InputFieldProps<Partial<LabeledCheckboxProps>>;

const checkboxRenderer = () => (
    { disabled, errorText, label, indeterminate, valid, id, className = '' }: CheckboxFieldProp,
    { input }: FieldRenderProps ) => {
    return (
      <div className={`${className} final-field ${valid ? '' : 'final-field-invalid'}`}>
        <LabeledCheckbox
          id={id || name}
          label={label}
          disabled={disabled}
          indeterminate={indeterminate}
          onClick={_ => input.onChange(!Boolean(input.value))}
          checked={Boolean(input.value)}
          {...input}
        />
        <div className={`final-field-message`}>{errorText}</div>
      </div>
    );
  };

/**
 * CheckboxField react-final-form field for gca-react-components Checkbox
 */
export const CheckboxFinalField = customFinalField<Partial<LabeledCheckboxProps>>(checkboxRenderer());
