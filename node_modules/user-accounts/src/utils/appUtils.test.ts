import { GuestCenterScope } from '../store/types';
import {
  cleanId,
  getContextUrn,
  getUserTitle,
} from './appUtils';

describe('app utils helpers', () => {

  it('get context urn', () => {
    const restaurantScope: Partial<GuestCenterScope> = {
      id: '1',
      type: 'restaurant',
    };
    const restaurantScopeWithRid: Partial<GuestCenterScope> = {
      rid: '2',
      type: 'restaurant',
    };
    const groupScope: Partial<GuestCenterScope> = {
      id: '3',
      type: 'group',
    };

    expect(getContextUrn(restaurantScope as GuestCenterScope)).toEqual('urn:ot.restaurants:1');
    expect(getContextUrn(restaurantScopeWithRid as GuestCenterScope)).toEqual('urn:ot.restaurants:2');
    expect(getContextUrn(groupScope as GuestCenterScope)).toEqual('urn:ot.groups:3');
  });

  it('get user title', () => {
    expect(getUserTitle('Guest_Center_Title_General_Manager')).toEqual('Guest_Center_Title_General_Manager');
    expect(getUserTitle('Guest_Center_Title_Other')).toEqual('Guest_Center_Title_Other');
    expect(getUserTitle('Corporate')).toEqual('Guest_Center_Title_Other');
    expect(getUserTitle('Owner')).toEqual('Guest_Center_Title_Other');
  });

  it('cleans the id string', () => {
    expect(cleanId('some-valid-id-string')).toEqual('some-valid-id-string');
    expect(cleanId('some:invalid.id:string')).toEqual('some-invalid-id-string');
  })
});
