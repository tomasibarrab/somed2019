# Notification Center

## Description

Extends Buffet's Notify to add redux state management and actions to add and remove notifications.

---

## Usage

#### Add NotificationCenter to your App

##### App.tsx

```
import NotificationCenter from 'shared-react-smart-ui/NotificationCenter';

class App extends React.Component<Props, {}> {
  public render() {

    return (
      <Layout>
          <NotificationCenter />
          ...
      </Layout>
    );
  }
}
```

#### Add the notifications to your Redux Store State

Extend the State of your app with NotificationState

##### types.ts

```
import { NotificationState } from 'shared-react-smart-ui/NotificationCenter';

export interface State extends NotificationState {
  ...
};
```

#### Add notificationReducer to your global Reducer

##### reducer.ts

```
import { notificationReducer } from 'shared-react-smart-ui/NotificationCenter';

export default function createReducer() {
  return combineReducers<State>({
    ...
    notifications: notificationReducer,
    ...
  });
}
```

#### Add a Notification

```
import { addNotification } from 'shared-react-smart-ui/NotificationCenter';

const id = Symbol();

addNotification({
  iconId?: 'error',               // Defaults to information. Can use any icons defined in @buffet/icon.
  id?: id,                        // Must be a symbol to ensure uniqueness. If no id is passed, multiple messages will stack up.
  messageId: 'Display a message', // Only required value. Must be a string â€” expected to be a smartling i18n id.
  messageValues?: { foo: 'bar' }, // Optional values for interpolation into the message string.
  type?: 'success'                // Defaults to error. Can currently only be success or error.
});
```

#### Remove a Notification by id

```
import { removeNotificationById } from 'shared-react-smart-ui/NotificationCenter';

const id = Symbol();

removeNotificationById(id);     // Make sure you pass in the same symbol you used to generate the addNotification action with
```

---

## Tests

Run tests with

```
yarn test --watch
```
