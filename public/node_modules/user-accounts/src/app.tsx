/**
 * This is the entry file for the application, only setup and boilerplate
 * code.
 */
// import 'babel-polyfill';  // Temporary: removed because included in the index.html file directly (IE11 fix)

import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import { BrowserRouter as Router } from 'react-router-dom';

import App from './common/App/App';
import LanguageProvider, { MessageMap } from './common/LanguageProvider/LanguageProvider';
import { scopeCreator } from './store/redux-modules/scope';
import configureStore from './store/store';
import { translationMessages } from './translations/i18n';

import 'sanitize.css/sanitize.css';
import { State } from './store/types';


const initialState: Partial<State> = {
  // set once, never changes
  appScope: scopeCreator((window as any).gcScope, true),
  // set as a default, will change later
  scope: scopeCreator((window as any).gcScope, true),
};
const store = configureStore(initialState);

const render = (translatedMessages: MessageMap) => {
  ReactDOM.render(
    <Provider store={store}>
      <LanguageProvider messages={translatedMessages}>
        <Router basename={initialState.scope!.appBasename}>
          <App />
        </Router>
      </LanguageProvider>
    </Provider>,
    document.getElementById('app'),
  );
};

// Hot re-loadable translation json files
if (module.hot) {
  // modules.hot.accept does not accept dynamic dependencies,
  // have to be constants at compile-time
  module.hot.accept('translations/i18n', () => {
    render(translationMessages);
  });
}

render(translationMessages);
