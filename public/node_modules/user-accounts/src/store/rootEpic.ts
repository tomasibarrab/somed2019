import { combineEpics } from 'redux-observable';

import {
  groupContextEpic,
  ridContextEpic,
  userContextEpic,
 } from 'gca-react-components/src/redux-modules/currentContext';
import { featureTogglesEpic } from 'gca-react-components/src/redux-modules/featureToggles';
import { initializeGcScopeEpic } from 'gca-react-components/src/redux-modules/initializeApp';
import { mixpanelEpic } from 'gca-react-components/src/redux-modules/mixpanel';

import 'rxjs/add/operator/do';
import 'rxjs/add/operator/mapTo';
import 'rxjs/add/operator/merge';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/take';

import { epics as availableUserEpics } from './redux-modules/availableUser';
import { epics as currentUserEpics } from './redux-modules/currentUser';
import { epics as roleEpics } from './redux-modules/roles';
import { epics as usersEpics } from './redux-modules/users';

export default combineEpics(
  groupContextEpic,
  ridContextEpic,
  userContextEpic,
  availableUserEpics.fetchAvailableUserEpic,
  availableUserEpics.resetAvailableUserEpic,
  currentUserEpics.addNewUserEpic,
  currentUserEpics.fetchCurrentUserEpic,
  currentUserEpics.updateExistingUserEpic,
  currentUserEpics.resetCurrentUserEpic,
  initializeGcScopeEpic,
  featureTogglesEpic,
  mixpanelEpic,
  roleEpics.ensurePermissionsEpic,
  roleEpics.fetchPermissionsEpic,
  roleEpics.fetchRolesEpic,
  roleEpics.saveRoleEpic,
  roleEpics.saveRoleCompleteEpic,
  usersEpics.confirmDeleteReportEpic,
  usersEpics.ensureUsersEpic,
  usersEpics.navigateUsersEpic,
  usersEpics.searchUsersEpic,
  usersEpics.fetchSearchUsersEpic,
);
