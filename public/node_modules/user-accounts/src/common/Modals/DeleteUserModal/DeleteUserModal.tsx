import Modal, { ModalType } from '@buffet/modal';
import React, { useCallback } from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';

import { User, UserContextType } from '../../../store/types';
import { eventTracker, trackingCategory, trackingEvents } from '../../../utils/trackingUtils';


import './DeleteUserModal.scss';

interface DeleteUserModalOwnProps {
  isOpen: boolean;
  modalPayload: User & UserContextType;
  closeModal: () => void;
  confirmCloseModal: () => void;
}

type DeleteUserModalProps = DeleteUserModalOwnProps & InjectedIntlProps;

function DeleteUserModalImpl(props: DeleteUserModalProps) {
  const { intl, confirmCloseModal, closeModal, modalPayload } = props;

  const handleCloseModal = useCallback(() => {
    eventTracker.sendEvent({
      action: trackingEvents.removeUser.action,
      category: trackingCategory,
      label: trackingEvents.removeUser.labels.cancelButton,
    });

    closeModal();
  }, [closeModal]);

  const handleConfirmModal = useCallback(() => {
    eventTracker.sendEvent({
      action: trackingEvents.removeUser.action,
      category: trackingCategory,
      label: trackingEvents.removeUser.labels.removeButton,
    });

    confirmCloseModal();
  }, [confirmCloseModal]);

  return (
    <Modal
      type={ModalType.prompt}
      open={props.isOpen}
      onCloseRequest={handleCloseModal}
      title={intl.formatMessage({ id: 'modals.deleteUser.title' })}
      acknowledgeLabel={intl.formatMessage({ id: 'modals.button.confirm' })}
      onAcknowledge={handleConfirmModal}
      dismissLabel={intl.formatMessage({ id: 'modals.button.cancel' })}
      onDismiss={handleCloseModal}
    >
      <FormattedMessage
        tagName="p"
        id={ modalPayload.type === 'group' ? 'modals.deleteGroupUser.body' : 'modals.deleteUser.body'}
        values={{ firstName: modalPayload.firstName, lastName: modalPayload.lastName }}
      />
    </Modal>
  );
}

// DeleteUserModal.propTypes = {
//   closeModal: PropTypes.func,
//   modalPayload: PropTypes.object,
//   confirmCloseModal: PropTypes.func,
//   intl: intlShape,
// };

export const DeleteUserModal = injectIntl<DeleteUserModalOwnProps>(DeleteUserModalImpl);
export { DeleteUserModalImpl as PureDeleteUserModal };
