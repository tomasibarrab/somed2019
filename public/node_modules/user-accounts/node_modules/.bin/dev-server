#!/usr/bin/env node
/* eslint consistent-return:0 */
/* eslint-disable import/newline-after-import */

require('./scripts/env').log();

const express = require('express');
const logger = require('./logger');

const argv = require('minimist')(process.argv.slice(2));
const setup = require('./middlewares/frontendMiddleware');
const isDev = process.env.NODE_ENV !== 'production';
const ngrok = (isDev && process.env.ENABLE_TUNNEL === 'true') || argv.tunnel ? require('ngrok') : false;
const resolve = require('path').resolve;
const app = express();

// get the intended port number, use port 3000 if not provided
const port = argv.port || process.env.PORT || 3000;
const config = argv.config || './app.config';

// In production we need to pass these values in instead of relying on webpack
setup(app, {
  port: port,
  outputPath: resolve(process.cwd(), 'dist'),
  publicPath: argv.path || '/',
  nomocks: argv.nomocks,
  static: argv.static,
  config
});


// Start your app.
app.listen(port, (err) => {
  if (err) {
    return logger.error(err.message);
  }

  // Connect to ngrok in dev mode
  if (ngrok) {
    ngrok.connect(port, (innerErr, url) => {
      if (innerErr) {
        return logger.error(innerErr);
      }

      logger.appStarted(port, url, argv.path, config );
    });
  } else {
    logger.appStarted(port, null, argv.path, config );
  }
});
