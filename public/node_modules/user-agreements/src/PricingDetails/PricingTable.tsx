
import React from 'react';
import { FormattedHTMLMessage, FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { PricingItem, PricingItemCategories } from '../store/userAgreements/userAgreements.types';
import PricingRow from './PricingRow';

import '../UserAgreements/UserAgreements.scss';
import './PricingDetails.scss';

interface PricingTableState {
  pricingByCategory: PricingItemCategories;
  browserLocale: string;
}

type Props = PricingTableState & InjectedIntlProps;

class PricingTable extends React.Component<Props, {}> {
  public render() {
    const { browserLocale } = this.props;

    return (
      <table className="pricing-table" data-qa="pricing-table">
        <thead>
          <tr>
            <th className="label-text column-main">
              <FormattedMessage id="pricingDetails.table.header.main" />
            </th>
            <th className="label-text column-list-price">
              <FormattedMessage id="pricingDetails.table.header.listPrice" />
            </th>
            <th className="label-text column-discount-temp">
              <FormattedHTMLMessage id="pricingDetails.table.header.temporaryDiscount" />
            </th>
            <th className="label-text column-discount-perm">
              <FormattedHTMLMessage id="pricingDetails.table.header.permanentDiscount" />
            </th>
            <th className="label-text column-total-price">
              <FormattedMessage id="pricingDetails.table.header.totalPrice" />
            </th>
          </tr>
        </thead>
        <tbody>
          <tr className="pricing-divider">
            <td colSpan={5}><hr /></td>
          </tr>
          <tr className="pricing-subheader">
            <td className="label-text"><FormattedMessage id="pricingDetails.table.category.monthlyFees" /></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
          </tr>
          {this.props.pricingByCategory.recurring.map((lineItem: PricingItem, i) => { return (
            <PricingRow lineItem={lineItem} category="recurring" key={i} browserLocale={browserLocale} />
          ); })}
          <tr className="pricing-subheader">
            <td className="label-text"><FormattedMessage id="pricingDetails.table.category.coverFees" /></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
          </tr>
          {this.props.pricingByCategory.covers.map((lineItem: PricingItem, i) => { return (
            <PricingRow lineItem={lineItem} category="covers" key={i} browserLocale={browserLocale} />
          ); })}
          <tr className="pricing-subheader">
            <td className="label-text"><FormattedMessage id="pricingDetails.table.category.oneTimeFees" /></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
          </tr>
          {this.props.pricingByCategory.oneTime.map((lineItem: PricingItem, i) => { return (
            <PricingRow lineItem={lineItem} category="one time" key={i} browserLocale={browserLocale} />
          ); })}
        </tbody>
      </table>
    )
  }
}

export default injectIntl(PricingTable);
export { PricingTable as PurePricingTable };
