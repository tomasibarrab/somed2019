import { shallowWithIntl } from 'gca-jest-config';
import React from 'react';

// tslint:disable-next-line:no-var-requires
const UserAgreementsMock = require('../../fixtures/UserAgreementsMock.json');

import { PurePricingRow as PricingRow } from './PricingRow';


describe('<PricingRow />', () => {
  const props = {
    browserLocale: 'en-US',
    category: 'recurring',
    key: 1,
    lineItem: null,
  };

  it('snapshot for monthly subscription fee', () => {
    props.lineItem = UserAgreementsMock.pricingDetails.pricingItems[0];
    const wrapper = shallowWithIntl(<PricingRow {...props} />);
    expect(wrapper).toMatchSnapshot();
  });

  it('snapshot for network covers fee', () => {
    props.lineItem = UserAgreementsMock.pricingDetails.pricingItems[1];
    const wrapper = shallowWithIntl(<PricingRow {...props} />);
    expect(wrapper).toMatchSnapshot();
  });

  it('snapshot for internal website covers fee', () => {
    props.lineItem = UserAgreementsMock.pricingDetails.pricingItems[2];
    const wrapper = shallowWithIntl(<PricingRow {...props} />);
    expect(wrapper).toMatchSnapshot();
  });

  it('snapshot for payment processing fee', () => {
    props.lineItem = UserAgreementsMock.pricingDetails.pricingItems[3];
    const wrapper = shallowWithIntl(<PricingRow {...props} />);
    expect(wrapper).toMatchSnapshot();
  });

  it('snapshot for one-time setup fee', () => {
    props.lineItem = UserAgreementsMock.pricingDetails.pricingItems[4];
    const wrapper = shallowWithIntl(<PricingRow {...props} />);
    expect(wrapper).toMatchSnapshot();
  });
});
