import { CurrentContext } from 'gca-react-components/src/redux-modules/currentContext';
import { LanguageProvider } from 'gca-react-components/src/redux-modules/languageProvider';
import { Dispatch as ReduxDispatch, Store as ReduxStore } from 'redux';
import { ActionsObservable } from 'redux-observable';
import { Observable } from 'rxjs/Observable';
import { Action as FsaAction } from 'typescript-fsa';
import { Dependencies } from './store';
import { UserAgreementsState } from './userAgreements/userAgreements.types';

export interface State {
  currentContext: CurrentContext;
  language: LanguageProvider;
  userAgreements: UserAgreementsState;
}

export type Action = FsaAction<any>;
export type Store = ReduxStore<State>;
export type Dispatch = ReduxDispatch<Action>;
export type Epic = (action$: ActionsObservable<Action>, store: Store, options: Dependencies) => Observable<Action>;

export interface UserAgreementsWindow extends Window {
  gcaConfig: {
    schedulingUrl: string;
  };
}
