import { Button } from 'gca-react-components';
import React from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';

import Sidebar from '../Sidebar/Sidebar';
import { State } from '../store/types';
import {
  actions,
} from '../store/userAgreements/userAgreements';
import ConfirmHeader from './ConfirmHeader';

import '../UserAgreements/UserAgreements.scss';
import './Confirm.scss';

interface DP {
  showPrintPage: (showPage: boolean) => void;
}

type Props = DP & InjectedIntlProps;

class Confirm extends React.Component<Props> {
  public showPrintPage = () => {
    this.props.showPrintPage(true);
  };

  public render() {
    return <>
        <div className="page-content confirm" data-qa="uaf-confirm-page">
          <ConfirmHeader />
          <h2>
            <FormattedMessage id="confirm.install.list.title" />
          </h2>
          <div className="install-list">
            <div className="install-list-item">
              <div>
                <span className="checkmark" />
                <span className="title">
                  <FormattedMessage id="confirm.install.list.iPad.title" />
                </span>
              </div>
              <div className="description">
                <FormattedMessage id="confirm.install.list.iPad.desc" />
              </div>
            </div>
            <div className="install-list-item">
              <div>
                <span className="checkmark" />
                <span className="title">
                  <FormattedMessage id="confirm.install.list.wifi.title" />
                </span>
              </div>
              <div className="description">
                <div>
                  <FormattedMessage id="confirm.install.list.wifi.desc" />
                </div>
                <FormattedMessage id="confirm.install.list.wifi.desc2" />
              </div>
            </div>
            <div className="install-list-item">
              <div>
                <span className="checkmark" />
                <span className="title">
                  <FormattedMessage id="confirm.install.list.staffReady.title" />
                </span>
              </div>
              <div className="description">
                <FormattedMessage id="confirm.install.list.staffReady.desc" />
              </div>
            </div>
          </div>
          <h2>
            <FormattedMessage id="confirm.training.list.title" />
          </h2>
          <div className="install-list">
            <div className="install-list-item">
              <div className="title">
                <FormattedMessage id="confirm.training.list.downloadApp.title" />
              </div>
              <span className="description">
                <FormattedMessage id="confirm.training.list.downloadApp.desc" />
                <a href={this.getGcAppLink()} target="_blank" className="sentence-spacing">
                  <FormattedMessage id="confirm.training.list.downloadApp.link" />
                </a>.
              </span>
            </div>
            <div className="install-list-item">
              <div className="title">
                <FormattedMessage id="confirm.training.list.headStart.title" />
              </div>
              <span className="description">
                <FormattedMessage id="confirm.training.list.headStart.desc" />
                <a href={this.getVideosLink()} target="_blank" className="sentence-spacing">
                  <FormattedMessage id="confirm.training.list.headStart.link" />
                </a>.
              </span>
            </div>
          </div>
        </div>
        <Sidebar>
          <Button className="page-sidebar-item" onClick={this.showPrintPage} theme="hollow">
            <FormattedMessage id="confirm.viewSignedAgreement" />
          </Button>
        </Sidebar>
      </>;
  }

  private getGcAppLink() {
    return 'https://itunes.apple.com/app/apple-store/id766049754?pt=141936&ct=ERB_Upgrade_Agreement&mt=8';
  }

  private getVideosLink() {
    return 'https://www.youtube.com/channel/UCO-5Em0AJjAFllck30O8yZw/';
  }
}

const mapDispatch = {
  showPrintPage: actions.showPrintPage,
};

export default connect<{}, DP, {}>(null, mapDispatch)(injectIntl(Confirm));
export { Confirm as PureConfirm };
