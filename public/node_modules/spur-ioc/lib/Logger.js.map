{"version":3,"sources":["../src/Logger.js"],"names":["Level","level","name","ascii","exit","bindAll","create","args","log","console","apply","concat","LEVELS","fatal","black","bgRed","error","red","warn","yellow","info","green","debug","reset","trace","white","Logger","addLoggingMethods","each","value","Object","prototype","hasOwnProperty","call"],"mappings":"uCAAA,gC;AACA,8B;;AAEMA,K;AACJ,iBAAYC,KAAZ,EAAmBC,IAAnB,EAAyBC,KAAzB,EAA8C,KAAdC,IAAc,uEAAP,KAAO;AAC5C,qBAAEC,OAAF,CAAU,IAAV,EAAgB,KAAhB;AACA,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD,G;;AAEME,Q,qBAAgB,mCAANC,IAAM,gDAANA,IAAM;AACrB,8CAAWP,KAAX,gBAAoBO,IAApB;AACD,G;;AAEDC,K,kBAAa,oCAAND,IAAM,qDAANA,IAAM;AACX;AACA,WAAOE,QAAQD,GAAR,CAAYE,KAAZ,CAAkBD,OAAlB,EAA2B,CAAC,KAAKN,KAAN,EAAaQ,MAAb,CAAoBJ,IAApB,CAA3B,CAAP;AACD,G;;;AAGH,IAAMK,SAAS;AACbC,SAAOb,MAAMM,MAAN,CAAa,CAAb,EAAgB,OAAhB,EAAyB,gBAAMQ,KAAN,CAAYC,KAAZ,CAAkB,OAAlB,CAAzB,EAAqD,IAArD,CADM;AAEbC,SAAOhB,MAAMM,MAAN,CAAa,CAAb,EAAgB,OAAhB,EAAyB,gBAAMW,GAAN,CAAU,OAAV,CAAzB,CAFM;AAGbC,QAAMlB,MAAMM,MAAN,CAAa,CAAb,EAAgB,SAAhB,EAA2B,gBAAMa,MAAN,CAAa,SAAb,CAA3B,CAHO;AAIbC,QAAMpB,MAAMM,MAAN,CAAa,CAAb,EAAgB,MAAhB,EAAwB,gBAAMe,KAAN,CAAY,MAAZ,CAAxB,CAJO;AAKbC,SAAOtB,MAAMM,MAAN,CAAa,CAAb,EAAgB,OAAhB,EAAyB,gBAAMiB,KAAN,CAAY,OAAZ,CAAzB,CALM;AAMbC,SAAOxB,MAAMM,MAAN,CAAa,CAAb,EAAgB,OAAhB,EAAyB,gBAAMmB,KAAN,CAAY,OAAZ,CAAzB,CANM,EAAf,C;;;AASMC,M;AACJ,oBAAc;AACZ,SAAKC,iBAAL;AACD,G;;AAEMrB,Q,qBAAS;AACd,WAAO,IAAIoB,MAAJ,EAAP;AACD,G;;AAEDC,mB,gCAAoB;AAClB,qBAAEC,IAAF,CAAOhB,MAAP,EAAe,UAACiB,KAAD,EAAQ3B,IAAR,EAAiB;AAC9B,UAAI4B,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCrB,MAArC,EAA6CV,IAA7C,CAAJ,EAAwD;AACtD,cAAKA,IAAL,IAAaU,OAAOV,IAAP,EAAaM,GAA1B;AACD;AACF,KAJD;AAKD,G;;;AAGYkB,M","file":"Logger.js","sourcesContent":["import _ from 'lodash';\nimport chalk from 'chalk';\n\nclass Level {\n  constructor(level, name, ascii, exit = false) {\n    _.bindAll(this, 'log');\n    this.level = level;\n    this.name = name;\n    this.ascii = ascii;\n    this.exit = exit;\n  }\n\n  static create(...args) {\n    return new Level(...args);\n  }\n\n  log(...args) {\n    // eslint-disable-next-line no-console, prefer-spread\n    return console.log.apply(console, [this.ascii].concat(args));\n  }\n}\n\nconst LEVELS = {\n  fatal: Level.create(0, 'FATAL', chalk.black.bgRed('FATAL'), true),\n  error: Level.create(1, 'Error', chalk.red('ERROR')),\n  warn: Level.create(2, 'WARNING', chalk.yellow('WARNING')),\n  info: Level.create(3, 'INFO', chalk.green('INFO')),\n  debug: Level.create(4, 'DEBUG', chalk.reset('DEBUG')),\n  trace: Level.create(5, 'TRACE', chalk.white('TRACE'))\n};\n\nclass Logger {\n  constructor() {\n    this.addLoggingMethods();\n  }\n\n  static create() {\n    return new Logger();\n  }\n\n  addLoggingMethods() {\n    _.each(LEVELS, (value, name) => {\n      if (Object.prototype.hasOwnProperty.call(LEVELS, name)) {\n        this[name] = LEVELS[name].log;\n      }\n    });\n  }\n}\n\nexport default Logger;\n"]}