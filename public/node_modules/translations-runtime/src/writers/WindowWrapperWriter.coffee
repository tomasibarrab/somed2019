module.exports = (Writer, JSON, TranslationPaths, fsPromise, path, fs, Promise, _) ->

  class WindowWrapperWriter extends Writer

    fileName: ->
      "#{@locale}.js"

    basePath: ->
      "js"

    output: ->
      Promise.all([
        @readSupportingFiles()
          .then (contents) -> contents.join(";;")
          .catch (err) => console.warn "No supporting files for #{@locale}"
        """window.Resources = #{JSON.stringify(@result, null, 2)}"""
      ])
      .then (strs) ->
        strs.join(";;")

    readSupportingFiles: =>
      filePath = TranslationPaths.supportingFilesPath(@locale)
      fsPromise.readdirAsync(filePath)
        .map (file) ->
          fsPromise.readFileAsync(path.join(filePath, file))
        .catch (e) ->
          return []
