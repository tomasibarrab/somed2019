module.exports = (TranslationsClient, _, Readable) ->

  class TranslationsDownloadStream

    @download: (rootPath, manifestFile, bundlesFolder, supportingFilesFolder) ->
      (new TranslationsDownloadStream(rootPath, manifestFile, bundlesFolder, supportingFilesFolder)).stream

    constructor: (@rootPath, manifestFile, bundlesFolder, supportingFilesFolder) ->
      @stream = new Readable({ objectMode: true })
      @filesPromise = TranslationsClient.download(@rootPath, manifestFile, bundlesFolder, supportingFilesFolder)
      @stream._read = _.once(@read)

    read: =>
      @filesPromise
        .then(@addFilesToStream)
        .catch(@sendError)

    addFilesToStream: (files) =>
      @stream.push(file) for file in files
      @stream.push(null)

    sendError: (reason) =>
      @stream.emit('error', reason)
      @stream.push(null)
