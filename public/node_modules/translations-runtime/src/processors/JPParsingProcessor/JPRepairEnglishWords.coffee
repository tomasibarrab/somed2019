# Handling to recombine english words split apart by parser.
# Some product-specific words also need special join characters.

module.exports = (_, JPWordRules, JPUtils) ->

  new class JPRepairEnglishWords

    optimizeParsedObject: (sentenceObj) ->
      _.filter sentenceObj, (wordObj, i) ->
        isCombination = JPWordRules.wordCombinations[wordObj.word]
        if not isCombination then return true
        nextWord = sentenceObj[i+1]?.word
        if nextWord and nextWord is isCombination[0]
          sentenceObj[i+1]['word'] = isCombination[1]
          return false
        return true

    formatWord: (word, nextWord, prevWord) ->
      if JPUtils.isGCWord(word)
        # only append space if next word is not EN
        if JPUtils.wordExists(nextWord) and not JPUtils.isEnglish(nextWord) then word = word + " "
        if JPUtils.wordExists(prevWord) then " " + word else word
      else # Regular EN word.
        if JPUtils.existsAndIsNotJp(prevWord) then " " + word else word
