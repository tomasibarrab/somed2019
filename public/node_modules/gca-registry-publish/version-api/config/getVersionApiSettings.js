const isEmpty = require('lodash/isEmpty');
const get = require('lodash/get');
const { cleanArray, fatal } = require('../../utils/utils');

const { versionApiProfiles, versionApiServers } = require('./version-api-env-config');

const validateServerName = function (serverName) {
  if (isEmpty(serverName) || !versionApiServers[serverName]) {
    fatal(
      `The server "${serverName}" is invalid. Valid options are: [${Object.keys(versionApiServers).join(', ')}]`,
    );
  }
  if (isEmpty(get(versionApiServers, [serverName, 'host']))) {
    fatal(
      `The server "${serverName}" is misconfigured. Missing property: 'host'`,
    );
  }
}

const validateProfileName = function (profileName) {
  if (isEmpty(profileName) || !Object.keys(versionApiProfiles).includes(profileName)) {
    fatal(
      `The profile "${profileName}" is invalid. Valid options are: [${Object.keys(versionApiProfiles).join(', ')}]`,
    );
  }
}

// [server] should be one of: 'pp', 'prod'
const getServerSettings = function (serverName) {
  validateServerName(serverName);
  return versionApiServers[serverName] || {};
};

// [profile] should be one of: 'testing', 'production'
const getProfileSettings = function (profileName) {
  validateProfileName(profileName);
  return versionApiProfiles[profileName] || {};
};


module.exports = {
  getProfileSettings,
  getServerSettings,
  validateServerName,
  validateProfileName,
}
