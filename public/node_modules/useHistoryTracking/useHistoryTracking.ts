import eventTracker from '@buffet/event-tracker';
import { History, Location } from 'history';
import { useEffect } from 'react';


type EventTrackerType = typeof eventTracker;

// calculates the absolute path for a location, given a history object with a basename
export const createAbsolutePath = (history: History<any>) => {
  const basename = history.createHref({ pathname: '/' });

  return (location: Location<any>): string => (
    basename + location.pathname.replace(/^\/+/, '')
  );
};

// react hook that subscribes to history changes to track page views
export const useHistoryTracking = (history: History<any>, tracker: EventTrackerType) => {
  useEffect(() => {
    let t: any;

    // absolute path creator for current history object
    const absolutePath = createAbsolutePath(history);

    // listen to history changes
    const unregisterCallback = history.listen((location, action) => {
      // subsequent REPLACE should cancel queued tracking actions
      if (t && action === 'REPLACE') {
        clearTimeout(t);
      }

      // queue a tracking action
      t = setTimeout(() => {
        t = undefined;
        tracker.sendPageView(absolutePath(location));
      }, 100);
    });

    // clean up
    return () => {
      unregisterCallback();
      clearTimeout(t);
    };
  }, [history]);
};
