import { Button } from 'gca-react-components';
import React, { SFC } from 'react';
import { FormattedMessage } from 'react-intl';
import { CreditsModel, EducationPageType } from 'store/customPromotions/customPromotions.types';
import BackArrow from '../images/BackArrow';
import CloseIcon from '../images/CloseIcon';
import RestaurantName from '../RestaurantName/RestaurantName';
import CreditsInfoList from './CreditsInfoList';

import './EducationPage.scss';

interface Props {
  className: any;
  credits: CreditsModel;
  pageNum: number;
  type: EducationPageType;
  onClickBack: () => void;
  onClickNext: () => void;
}

const EducationPage: SFC<Props> = ({ className, credits, pageNum, type, onClickBack, onClickNext }) => (
  <div className={className}>
    <header className="header">
      <Button theme="link" onClick={onClickBack}>
        {type === EducationPageType.Wizard ? <BackArrow /> : <CloseIcon />}
      </Button>
      <RestaurantName />
    </header>
    <article>
      <FormattedMessage id={`guestcampaigns.custom_promotions.education.${pageNum}.heading`} tagName="h2" />
      {pageNum === 1 ? (
        <>
          <FormattedMessage id={`guestcampaigns.custom_promotions.education.${pageNum}.description.1`} tagName="p" />
          <video autoPlay loop muted playsInline webkit-playsinline="true">
            <source
              type="video/mp4"
              media="(min-device-pixel-ratio:2)"
              // tslint:disable-next-line:max-line-length
              src="https://s3-us-west-2.amazonaws.com/otservices-promoted-inventory/custom-promotions/custompromosboost2x.mp4"
            />
            <source
              type="video/mp4"
              // tslint:disable-next-line:max-line-length
              src="https://s3-us-west-2.amazonaws.com/otservices-promoted-inventory/custom-promotions/custompromosboost1x.mp4"
            />
          </video>
          <FormattedMessage id={`guestcampaigns.custom_promotions.education.${pageNum}.description.2`} tagName="p" />
        </>
      ) : (
        <>
          <img
            // tslint:disable-next-line:max-line-length
            src="https://s3-us-west-2.amazonaws.com/otservices-promoted-inventory/custom-promotions/Pay+For+Results+Image.png"
            srcSet={
              // tslint:disable-next-line:max-line-length
              'https://s3-us-west-2.amazonaws.com/otservices-promoted-inventory/custom-promotions/Pay+For+Results+Image%402x.png' +
              ' 2x'
            }
          />
          {credits.shouldShowCredits && (
            <>
              <FormattedMessage
                id={`guestcampaigns.custom_promotions.education.${pageNum}.credits.heading`}
                tagName="p"
              />
              <CreditsInfoList credits={credits} />
            </>
          )}
          <FormattedMessage
            id={`guestcampaigns.custom_promotions.education.${pageNum}${
              credits.shouldShowCredits ? '.credits' : ''
            }.description`}
            tagName="p"
          />
        </>
      )}
    </article>
    <footer>
      <Button theme="primary" onClick={onClickNext}>
        {type === EducationPageType.Wizard ? (
          <FormattedMessage id={`guestcampaigns.custom_promotions.education.${pageNum}.continue`} />
        ) : (
          <FormattedMessage id="guestcampaigns.custom_promotions.form.credits_overlay.ok_got_it" />
        )}
      </Button>
    </footer>
  </div>
);

export default EducationPage;
