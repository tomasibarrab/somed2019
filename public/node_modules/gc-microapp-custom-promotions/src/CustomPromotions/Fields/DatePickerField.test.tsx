import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { create } from 'react-test-renderer';
import { reduxForm } from 'redux-form';
import configureMockStore from 'redux-mock-store';
import messages from '../../i18n/custom-promotions';
import { CUSTOM_PROMOTIONS_FORM_NAME } from '../constants';
import DatePickerField from './DatePickerField';

describe('<DatePickerField />', () => {
  const state = {};
  const store = configureMockStore([])(state);

  const makeDecorated = () => {
    const options = {
      form: CUSTOM_PROMOTIONS_FORM_NAME,
    };
    return reduxForm<any, any>(options)(DatePickerField);
  };

  test.skip('to match snapshot', () => {
    const props = { name: 'start-date' };
    const Decorated = makeDecorated();
    const component = create(
      <Provider store={store}>
        <IntlProvider locale="en-US" messages={messages}>
          <Decorated {...props} />
        </IntlProvider>
      </Provider>,
    );
    const tree = component.toJSON();
    // ERROR: TypeError: Cannot read property '__consolidated_events_handlers__' of null
    expect(tree).toMatchSnapshot();
  });
});
