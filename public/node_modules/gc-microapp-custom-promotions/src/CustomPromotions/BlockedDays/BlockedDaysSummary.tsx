import moment from 'moment';
import React, { SFC } from 'react';
import { FormattedDate } from 'react-intl';
import { formValues } from 'redux-form';
import { defaultSuppressionDates } from '../constants';
import formatCountMessage from './format-count-message';

interface Props {
  custom: any;
  default: any;
}

export const BlockedDaysSummary: SFC<Props> = props => {
  const { custom, default: defaultDays } = props;
  const blockedDefaultDays = Object.keys(defaultDays).filter(defaultDay => defaultDays[defaultDay]);
  const blockedCustomDays = Object.keys(custom).filter(customDay => custom[customDay]);
  return (
    <>
      {formatCountMessage('summary.holidays_blocked', blockedDefaultDays.length)}
      {blockedDefaultDays.length > 0 && (
        <ul className="default">
          {blockedDefaultDays.map(defaultDay => <li key={defaultDay}>{defaultSuppressionDates[defaultDay].label}</li>)}
        </ul>
      )}
      {formatCountMessage('summary.custom_days_blocked', blockedCustomDays.length)}
      {blockedCustomDays.length > 0 && (
        <ul className="custom">
          {blockedCustomDays.map(customDay => (
            <li key={customDay}>
              <FormattedDate value={moment(customDay).toDate()} month="short" day="numeric" year="numeric" />
            </li>
          ))}
        </ul>
      )}
    </>
  );
};

export default formValues<any>('custom', 'default')(BlockedDaysSummary);
