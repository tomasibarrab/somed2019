import { CurrentContext } from 'gca-react-components/src/redux-modules/currentContext';
import { FeatureToggles } from 'gca-react-components/src/redux-modules/featureToggles';
import { Dispatch as ReduxDispatch, Store as ReduxStore } from 'redux';
import { ActionsObservable } from 'redux-observable';
import { Observable } from 'rxjs/Observable';
import { Action as FsaAction } from 'typescript-fsa';
// tslint:disable-next-line:max-line-length
import RestaurantPIPropertiesState from '../../../../shared_modules/shared-pi-properties-store/restaurantPIProperties.types';
import { CustomPromotionsState } from './customPromotions/customPromotions.types';
import { Dependencies } from './store';

export interface State {
  currentContext: CurrentContext;
  featureToggles: FeatureToggles;
  customPromotions: CustomPromotionsState;
  restaurantPIProperties: RestaurantPIPropertiesState;
}

export type Action = FsaAction<any>;
export type Store = ReduxStore<State>;
export type Dispatch = ReduxDispatch<Action>;
export type Epic = (action$: ActionsObservable<Action>, store: Store, options: Dependencies) => Observable<Action>;
