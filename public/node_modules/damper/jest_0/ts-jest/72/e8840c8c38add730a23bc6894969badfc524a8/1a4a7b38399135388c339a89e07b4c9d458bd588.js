"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable
var token_common_1 = require("otkit-colors/token.common");
var settings = {
    fillOpacity: 1,
    fillOpacityOver: 1,
    labelX: '#333333',
    labelY: '#9B9B9B',
    primary: token_common_1.violetLight,
    strokeDasharray: '10, 5',
    strokeOpacity: 1,
    strokeOpacityOver: 1,
    strokeWidth: 0,
    tickX: token_common_1.ashLighter,
    tickY: token_common_1.ashLightest,
    tickYFirst: token_common_1.ashLighter,
};
var theme = {
    area: {
        cursor: 'default',
        // Curve Explorer: https://bl.ocks.org/d3noob/ced1b9b18bd8192d2c898884033b5529
        curve: 'curveMonotoneX',
        path: {
            eventFill: 'transparent',
            eventFillOpacity: 0,
            eventStroke: 'transparent',
            eventStrokeOpacity: 0,
            eventStrokeWidth: 12,
        },
        pose: {
            enter: {
                delay: 300,
            },
            exit: {
                delay: 200,
            },
        },
        single: {
            pose: {
                enter: {
                    delay: 50,
                },
            },
            radius: 5,
        },
        snap: ['auto', 'auto'],
    },
    axis: {
        x: {
            easing: {
                opacity: 'gentle',
                x: 'stiff',
            },
            label: {
                color: settings.labelX,
            },
            stroke: {
                fill: token_common_1.ashLighter,
                height: 1,
            },
            tick: {
                fill: settings.tickX,
                height: 1,
            },
        },
        y: {
            isAnimated: false,
            label: {
                color: settings.labelY,
            },
            stroke: {
                fill: 'transparent',
                width: 1,
            },
            tick: {
                fill: settings.tickY,
                height: 1,
            },
            tickFirst: {
                fill: settings.tickYFirst,
                height: 1,
            },
        },
    },
    bar: {
        easing: {
            height: {
                damping: 40,
                stiffness: 300,
            },
            transformX: 'noWobble',
            y: {
                damping: 40,
                stiffness: 300,
            },
            yOffset: {
                damping: 40,
                stiffness: 300,
            },
        },
    },
    bars: {
        default: {
            cursor: 'pointer',
            fill: settings.primary,
            width: 60,
        },
        easing: {
            opacity: 'gentle',
            x: 'stiff',
        },
    },
    common: {
        fill: settings.primary,
        fillOpacity: settings.fillOpacity,
        mouseOver: {
            fill: settings.primary,
            fillOpacity: settings.fillOpacityOver,
            stroke: settings.primary,
            strokeOpacity: settings.strokeOpacityOver,
        },
        stroke: token_common_1.ashLighter,
        strokeDasharray: settings.strokeDasharray,
        strokeOpacity: settings.strokeOpacity,
        strokeWidth: settings.strokeWidth,
    },
    container: {
        background: 'transparent',
    },
    helpers: {
        area: {
            highlight: {
                fill: token_common_1.ashLightest,
                opacity: 0.6,
                stroke: 'transparent',
                strokeWidth: 0,
            },
            points: {
                fill: '#FFFFFF',
                opacity: 1,
                pose: {
                    enter: {
                        delay: 50,
                    },
                },
                radius: 5,
                stroke: settings.primary,
                strokeWidth: 2,
            },
            vertical: {
                dot: {
                    fill: '#FFFFFF',
                    opacity: 1,
                    radius: 5,
                    stroke: settings.primary,
                    strokeWidth: 2,
                },
                line: {
                    fill: token_common_1.ashLighter,
                    opacity: 1,
                    width: 1,
                },
            },
        },
        bar: {
            highlight: {
                bar: {
                    fill: token_common_1.ashLightest,
                    opacity: 1,
                },
                border: {
                    fill: token_common_1.ashLighter,
                    height: 3,
                    opacity: 1,
                },
            },
        },
    },
    label: {
        fontFamily: 'Arial, sans-serif',
        fontSize: '13px',
        textAnchor: 'middle',
    },
};
exports.default = theme;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,