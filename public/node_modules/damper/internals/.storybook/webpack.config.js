const path = require('path');

module.exports = ({ config }) => {
  const tsxRules = {
    test: /\.tsx?$/,
    loader: 'ts-loader',
    exclude: /node_modules\/(?!@buffet)/,
    options: { allowTsInNodeModules: true }
  };

  const scssRule = {
    test: /\.scss$/,
    use: [
      {
        loader: 'style-loader'
      },
      {
        loader: 'typings-for-css-modules-loader',
        options: {
          namedExport: true,
          camelCase: true,
          importLoaders: 2,
          modules: true,
          localIdentName: '[name]__[local]___[hash:base64]'
        }
      },
      {
        loader: 'postcss-loader'
      },
      {
        loader: 'sass-loader',
      },
    ],
  };

  config.module.rules.push(tsxRules);
  config.module.rules.push(scssRule);

  config.resolve.extensions.push('.ts', '.tsx');
  config.resolve = {
    ...config.resolve,
    alias: {
      ...config.resolve.alias,
    },
    modules: ['src', 'node_modules', 'dev/testing'],
    extensions: ['.ts', '.tsx', '.js', '.jsx', '.json', '.svg', '.scss', '.css'],
  };

  config.node = {
    child_process: "empty",
    fs: "empty",
  }

  config.target = 'web';

  return config;
};
