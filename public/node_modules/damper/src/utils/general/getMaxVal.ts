import { max } from './max';

interface IGetMaxVal {
  data?: any[];
  key?: string;
}

/**
 * Gets the max value from an arrays visible values
 * If the array is not number based it will return the length instead
 */
export const getMaxVal = ({ data, key }: IGetMaxVal = {}): number => {
  if (!data || !key) {
    throw new Error('Missing data or key');
  }

  const array = data
    .filter((d) => typeof d[key] !== 'undefined')
    .filter((d) => d.isVisible !== false)
    .map((d) => d[key]);

  if (array.length === 0) {
    return 0;
  }

  const arrayIsAllNumbers = array.every((el) => typeof el === 'number');

  if (arrayIsAllNumbers) {
    return max(array);
  }

  return array.length - 1;
};
