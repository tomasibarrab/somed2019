import React from 'react';
import { boolean, number } from '@storybook/addon-knobs';
import { Bar } from './Bar';
import theme from '../../theme/defaultTheme';

class StackedBarStory extends React.Component {
  render() {
    const valueOption = {
      range: true,
      min: 0,
      max: 800,
      step: 1,
    };

    const roundingOption = {
      range: true,
      min: 0,
      max: 100,
      step: 1,
    };

    const widthOption = {
      range: true,
      min: 0,
      max: 100,
      step: 1,
    };

    const isMounted = boolean('isMounted', true);
    const isAnimated = boolean('isAnimated', true);

    const value1 = number('Value: 01', 125, valueOption);
    const value2 = number('Value: 02', 64, valueOption);
    const value3 = number('Value: 03', 45, valueOption);

    const rounding = number('Rounding', 0, roundingOption);
    const width = number('Width', 60, widthOption);

    let customisedTheme = theme;

    if (rounding > 0) {
      customisedTheme = {
        ...customisedTheme,
        bars: {
          ...customisedTheme.bars,
          default: {
            ...customisedTheme.bars.default,
            rounding,
          },
        },
      };
    }

    customisedTheme = {
      ...customisedTheme,
      bars: {
        ...customisedTheme.bars,
        default: {
          ...customisedTheme.bars.default,
          width,
        },
      },
    };

    const values = [
      {
        theme: {
          id: 'reservationsAverage',
          style: {
            stroke: 'rgba(82, 151, 222, 1)',
            fill: 'transparent',
            strokeDashArray: '2px 2px',
            strokeDasharray: '4px',
            strokeWidth: '2px',
          },
        },
        value: value1,
      },
      {
        theme: {
          id: 'walkinsAverage',
          style: {
            stroke: 'rgba(131, 197, 184, 1)',
            fill: 'transparent',
            strokeDasharray: '4px',
            strokeWidth: '2px',
          },
        },
        value: value2,
      },
      {
        value: value3,
      },
    ];

    const graphHeight = 450;
    const totalValues = value1 + value2 + value3;

    return (
      <article className="markdown-body">
        <h1>StackedBar Component</h1>
        <svg width="100%" height={graphHeight}>
          {isMounted && (
            <Bar
              actions={{
                onClick: () => {},
                onMouseOver: () => {},
                onMouseOut: () => {},
              }}
              id="storybook-test"
              isAnimated={isAnimated}
              scale={(d) => d}
              theme={customisedTheme}
              values={values}
              xOffset={(width / 2) + 1}
              yOffset={graphHeight}
            />
          )}
        </svg>
        <hr />
        <p style={{ margin: '24px 0' }}>
          The Bar component is heavily used in bar graphs. It requires y-alignment within the component
          that&#39;s using it.
        </p>
        <p>
        Current settings for the previewed bar are;<br />
          Width: {width}px<br />
          Height: {totalValues}px (from values)<br />
          Rounding: {rounding}px<br />
          isAnimated: {`${isAnimated}`}<br />
        </p>
      </article>
    );
  }
}

export { StackedBarStory };
