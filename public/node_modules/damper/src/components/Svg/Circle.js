import React from 'react';
import posed from 'react-pose';

const Circle = React.forwardRef((props, ref) => {
  const defaultProps = {
    ref: null,
    opacity: 1,
    onClick: null,
    onMouseMove: null,
    onMouseOver: null,
    onMouseOut: null,
  };

  const mergedProps = {
    ...defaultProps,
    ...props,
  };

  const {
    style,
    cx,
    cy,
    r,
    opacity,
    onClick,
    onMouseMove,
    onMouseOver,
    onMouseOut,
  } = mergedProps;

  const circleProps = {
    ref,
    cx,
    cy,
    r,
    opacity,
    style: {
      stroke: style.stroke,
      strokeWidth: style.strokeWidth,
      strokeDasharray: style.strokeDasharray,
      fill: style.fill,
      fillOpacity: style.fillOpacity,
      pointerEvents: 'none',
    },
    onClick,
    onMouseMove,
    onMouseOver,
    onMouseOut,
  };

  return <circle {...circleProps} />;
});

const AnimatedCircle = posed(Circle)({
  enter: {
    scale: 1,
    opacity: 1,
    transition: {
      type: 'spring',
      stiffness: 150,
    },
    delay: ({ dotsVal }) => {
      if (dotsVal.index) {
        if (dotsVal.theme) {
          return dotsVal.index * dotsVal.theme.pose.enter.delay;
        }
        return dotsVal.index * 50;
      }
      return 0;
    },
  },
  exit: {
    scale: 0,
    opacity: 0,
  },
});

export { Circle, AnimatedCircle };
