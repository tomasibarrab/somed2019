import React from 'react';
import { boolean, number, color, select } from '@storybook/addon-knobs';
import * as d3 from 'd3';
import { Area } from '../Area';
import theme from '../../theme/defaultTheme';

const { scaleLinear } = d3;

const graphHeight = 450;
const areaData = [
  {
    key: 'a',
    style: {
      val: 207,
      x: 0,
      y0: 410,
      y1: 450,
    },
  },
  {
    key: 'b',
    style: {
      val: 29,
      x: 200,
      y0: 383,
      y1: 450,
    },
  },
  {
    key: 'c',
    style: {
      val: 45,
      x: 400,
      y0: 450,
      y1: 450,
    },
  },
  {
    key: 'd',
    style: {
      val: 45,
      x: 600,
      y0: 32,
      y1: 450,
    },
  },
  {
    key: 'e',
    style: {
      val: 45,
      x: 800,
      y0: 352,
      y1: 450,
    },
  },
];

const activeInnerArea = {
  top: 0,
  height: 450,
  scales: {
    x: scaleLinear().domain([0, 2]).range([30, (800 - 30)]),
    yInverted: scaleLinear().domain([0, 100]).range([450, 30]),
  },
};

class AreaStory extends React.Component {
  render() {
    const areaOpacityOption = {
      range: true,
      min: 0,
      max: 1,
      step: 0.1,
    };

    const areaCurveOptions = [
      'curveMonotoneX',
      'curveLinear',
      'curveCardinal',
      'curveStep',
    ];

    const isMounted = boolean('isMounted', true);
    const isAnimated = boolean('isAnimated', true);
    const areaCurve = select('Curve', areaCurveOptions, areaCurveOptions[0]);
    const areaOpacity = number('Opacity', 1, areaOpacityOption);
    const areaColor = color('Color', '#9D82ED');

    let customisedTheme = theme;

    customisedTheme = {
      ...customisedTheme,
      area: {
        ...customisedTheme.area,
        curve: areaCurve,
      },
      common: {
        ...customisedTheme.common,
        fill: areaColor,
        fillOpacity: areaOpacity,
        mouseOver: {
          ...customisedTheme.common.mouseOver,
          fill: areaColor,
          fillOpacity: areaOpacity,
        },
      },
    };

    return (
      <article className="markdown-body">
        <h1>Area Component</h1>
        <svg width={800} height={graphHeight}>
          {isMounted && (
            <Area
              actions={{
                onClick: () => {},
                onMouseOver: () => {},
                onMouseOut: () => {},
              }}
              id="storybook-test"
              index={1}
              animation={{
                animate: isAnimated,
              }}
              scale={(d) => d}
              theme={customisedTheme}
              data={areaData}
              activeInnerArea={activeInnerArea}
            />
          )}
        </svg>
        <hr />
        <p>
        Current settings for the previewed area are;<br />
          isAnimated: {`${isAnimated}`}<br />
          Curve: {`${areaCurve}`}<br />
          Opacity: {`${areaOpacity}`}<br />
          Color: {`${areaColor}`}<br />
        </p>
        <p>
          Note: if a fill is applied and it is not transparent in the theme, an area graph is generated.
        </p>
      </article>
    );
  }
}

export { AreaStory };
