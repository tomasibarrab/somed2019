import {
  createPublishEvent,
  createLoadPageEvent,
  createActionEvent,
  actionNames,
  eventNames,
} from './mixpanel';

describe('mixpanel redux module', () => {
  describe('helper methods', () => {
    it('should create publish event ', () => {
      const feature = 'Private Dining';
      const expected = {
        event: eventNames.PUBLISH,
        props: {
          feature,
          action: actionNames.CREATE,
        },
      };

      expect(createPublishEvent({ feature, action: actionNames.CREATE })).toEqual(expected);
    });

    it('should create load page event ', () => {
      const feature = 'Private Dining';
      const expected = {
        event: eventNames.LOAD_PAGE,
        props: {
          'Page name': feature,
          feature,
        },
      };

      expect(createLoadPageEvent({ feature })).toEqual(expected);
    });

    it('should create action event', () => {
      const feature = 'Private Dining';
      const action = 'Remove user';
      const props = {
        userName: 'sad@user.com'
      };
      const expected = {
        event: eventNames.CUSTOM_ACTION,
        props: {
          feature,
          action,
          userName: 'sad@user.com'
        },
      };

      expect(createActionEvent({ feature, action, props })).toEqual(expected);
    });

    it('should create load page event with pageName', () => {
      const feature = 'Private Dining';
      const pageName = 'Private Dining page';
      const expected = {
        event: eventNames.LOAD_PAGE,
        props: {
          'Page name': pageName,
          feature,
        },
      };

      expect(createLoadPageEvent({ feature, pageName })).toEqual(expected);
    });

    it('should create load page event with props', () => {
      const feature = 'Private Dining';
      const expected = {
        event: eventNames.LOAD_PAGE,
        props: {
          'Page name': feature,
          feature,
          action: 'PDF Download',
        },
      };

      expect(createLoadPageEvent({ feature, props: { action: 'PDF Download' } })).toEqual(expected);
    });
  });
});
