import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import './ExpandableContent.scss';

import { Chevron } from '../../icons/Chevron';

export class ExpandableContent extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      expandable: false,
      expanded: false,
    };

    this.toggle = () => this.setState({ expanded: !this.state.expanded });
  }

  componentDidMount() {
    if (this.content && this.content.scrollHeight > this.props.collapsedHeight) {
      // eslint-disable-next-line react/no-did-mount-set-state
      this.setState({ expandable: true });
    }
  }

  render() {
    const { expandable, expanded } = this.state;
    const collapsed = expandable && !expanded;

    const contentClass = classnames({
      'gca-expandable-content': true,
      collapsed,
    });

    const style = {
      maxHeight: collapsed ? this.props.collapsedHeight : 1000,
    };

    const toggleBar = (
      <button className="toggle" onClick={this.toggle}>
        <Chevron height="12" color="#B1B6C3" direction={expanded ? 'up' : 'down'} />
      </button>
    );

    return (
      <div
        className={contentClass}
        style={style}
        ref={content => {
          this.content = content;
        }}
      >
        {React.Children.toArray(this.props.children)}

        {expandable && toggleBar}
      </div>
    );
  }
}

ExpandableContent.propTypes = {
  children: PropTypes.node,
  collapsedHeight: PropTypes.number,
};

ExpandableContent.defaultProps = {
  collapsedHeight: 130,
};
