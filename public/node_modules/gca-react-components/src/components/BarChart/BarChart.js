import React from 'react';
import PropTypes from 'prop-types';
import './BarChart.scss';

export function BarChart(props) {
  const max = props.data.reduce((acc, point) => Math.max(acc, point.value), 0);

  const rows = props.data.map(point => {
    const style = {
      width: `${point.value / max / 0.01}%`,
      backgroundColor: props.color,
    };

    return (
      <tr key={point.key}>
        <td className="key">{point.key}</td>
        <td>
          <div className="bar" style={style}>
            <div className="offset">
              <span className="value">{point.value.toString()}</span>
            </div>
          </div>
        </td>
        <td className="padding" />
      </tr>
    );
  });

  return (
    <table className="gca-bar-chart">
      <tbody>{rows}</tbody>
    </table>
  );
}

BarChart.propTypes = {
  data: PropTypes.arrayOf(
    PropTypes.shape({
      key: PropTypes.string, // eslint-disable-line react/no-unused-prop-types
      value: PropTypes.number, // eslint-disable-line react/no-unused-prop-types
      formattedValue: PropTypes.string, // eslint-disable-line react/no-unused-prop-types
    }),
  ),
  color: PropTypes.string,
};

BarChart.defaultProps = {
  data: [],
  color: '#FFAB66',
};

export default BarChart;
