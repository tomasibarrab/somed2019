/**
 * FlashMessage: a component which will display transient active content for a designated interval,
 * otherwise it will display passive content. Setting the `active` property on the component
 * triggers it's active state.
 */
import React from 'react';
import PropTypes from 'prop-types';

export class FlashMessage extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      isActive: false,
    };
  }

  componentDidMount() {
    if (this.props.active) {
      this.showActive();
    }
  }

  componentWillReceiveProps(nextProps) {
    // don't show activeContent if it is already being shown
    if (nextProps.active !== this.props.active && nextProps.active && !this.state.isActive) {
      this.showActive();
    }
  }

  /**
   * Show the active state. This will hide the passiveContent and show the activeContent in it's
   * place temporarily (activeDuration).
   */
  showActive() {
    this.setState({ isActive: true });
    window.setTimeout(() => {
      this.setState({ isActive: false });
    }, this.props.activeDuration);
  }

  render() {
    if (this.state.isActive) return this.props.activeContent;

    return this.props.passiveContent;
  }
}

FlashMessage.propTypes = {
  activeContent: PropTypes.node,
  passiveContent: PropTypes.node,
  activeDuration: PropTypes.number,
  active: PropTypes.bool,
};

FlashMessage.defaultProps = {
  activeDuration: 5000,
  active: false,
  activeContent: null,
  passiveContent: null,
};
