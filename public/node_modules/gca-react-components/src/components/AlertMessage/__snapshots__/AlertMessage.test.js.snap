// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AlertMessage Inactive and Fadeout should not render children when not active 1`] = `
<TransitionGroup
  childFactory={[Function]}
  className="gca-alert-message"
  component="div"
/>
`;

exports[`AlertMessage Inline should render different styles 1`] = `
<AlertMessage
  active={true}
  canClose={false}
  delayTimeout={5000}
  display="inline"
  fadeOut={false}
  fadeout={false}
  inactiveContent={null}
  onClose={[MockFunction]}
  type="success"
>
  <span>
    Test content for 
    success
    .
  </span>
</AlertMessage>
`;

exports[`AlertMessage Inline should render different styles 2`] = `
<AlertMessage
  active={true}
  canClose={false}
  delayTimeout={5000}
  display="block"
  fadeOut={false}
  fadeout={false}
  inactiveContent={null}
  onClose={[MockFunction]}
  type="success"
>
  <span>
    Test content for 
    success
    .
  </span>
</AlertMessage>
`;

exports[`AlertMessage Inline should render different styles 3`] = `
<AlertMessage
  active={true}
  canClose={false}
  delayTimeout={5000}
  display="inline"
  fadeOut={false}
  fadeout={false}
  inactiveContent={null}
  onClose={[MockFunction]}
  type="warn"
>
  <span>
    Test content for 
    warn
    .
  </span>
</AlertMessage>
`;

exports[`AlertMessage Inline should render different styles 4`] = `
<AlertMessage
  active={true}
  canClose={false}
  delayTimeout={5000}
  display="block"
  fadeOut={false}
  fadeout={false}
  inactiveContent={null}
  onClose={[MockFunction]}
  type="warn"
>
  <span>
    Test content for 
    warn
    .
  </span>
</AlertMessage>
`;

exports[`AlertMessage Inline should render different styles 5`] = `
<AlertMessage
  active={true}
  canClose={false}
  delayTimeout={5000}
  display="inline"
  fadeOut={false}
  fadeout={false}
  inactiveContent={null}
  onClose={[MockFunction]}
  type="error"
>
  <span>
    Test content for 
    error
    .
  </span>
</AlertMessage>
`;

exports[`AlertMessage Inline should render different styles 6`] = `
<AlertMessage
  active={true}
  canClose={false}
  delayTimeout={5000}
  display="block"
  fadeOut={false}
  fadeout={false}
  inactiveContent={null}
  onClose={[MockFunction]}
  type="error"
>
  <span>
    Test content for 
    error
    .
  </span>
</AlertMessage>
`;
