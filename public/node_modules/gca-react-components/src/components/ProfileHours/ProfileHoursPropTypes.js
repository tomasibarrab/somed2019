import PropTypes from 'prop-types';

const StandardNameShiftPropTypes = PropTypes.shape({
  days: PropTypes.arrayOf(PropTypes.string).isRequired,
  lastSeating: PropTypes.string,
  shiftEnds: PropTypes.string.isRequired,
  shiftStarts: PropTypes.string.isRequired,
  standardShiftName: PropTypes.shape({
    id: PropTypes.string.isRequired,
  }),
});

const CustomShiftNamePropTypes = PropTypes.shape({
  customShiftName: PropTypes.shape({
    name: PropTypes.string.isRequired,
    locale: PropTypes.string.isRequired,
  }),
  days: PropTypes.arrayOf(PropTypes.string).isRequired,
  lastSeating: PropTypes.string.isRequired,
  shiftEnds: PropTypes.string.isRequired,
  shiftStarts: PropTypes.string,
});

export const ShiftPropTypes = PropTypes.oneOfType([StandardNameShiftPropTypes, CustomShiftNamePropTypes]).isRequired;

export const StandardShiftPropTypes = PropTypes.arrayOf(
  PropTypes.shape({
    id: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }),
).isRequired;

export const ShiftErrorPropTypes = PropTypes.shape({
  days: PropTypes.string,
  shiftName: PropTypes.string,
  timeRange: PropTypes.string,
}).isRequired;

export const LabelPropTypes = PropTypes.shape({
  addShift: PropTypes.string.isRequired,
  removeShift: PropTypes.string.isRequired,
  selectShiftName: PropTypes.string.isRequired,
  shiftEnds: PropTypes.string.isRequired,
  shiftStarts: PropTypes.string.isRequired,
  timeRangeTo: PropTypes.string.isRequired,
  lastSeating: PropTypes.string,
  invalidName: PropTypes.string.isRequired,
  invalidTimeRange: PropTypes.string.isRequired,
  invalidDays: PropTypes.string.isRequired,
}).isRequired;
