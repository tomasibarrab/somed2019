import React from 'react';
import classnames from 'classnames';
import PropTypes from 'prop-types';

import './Input.scss';

export class Input extends React.Component {
  setFocus = el => {
    if (this.props.autoFocus && el) {
      el.focus();
    }
  };

  render() {
    const { type, className, disabled, valid, onChange, value, errorText, ...rest } = this.props;
    return (
      <div>
        <input
          {...rest}
          ref={this.setFocus}
          value={value}
          className={classnames('gca-input', className, { invalid: !valid }, { disabled })}
          type={type}
          onChange={onChange}
        />
        {errorText && <div className="validation-error">{errorText}</div>}
      </div>
    );
  }
}

Input.propTypes = {
  className: PropTypes.string,
  onChange: PropTypes.func,
  type: PropTypes.string,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  valid: PropTypes.bool,
  autoFocus: PropTypes.bool,
  errorText: PropTypes.string,
  disabled: PropTypes.bool,
};

Input.defaultProps = {
  type: 'text',
  disabled: false,
};

export default Input;
