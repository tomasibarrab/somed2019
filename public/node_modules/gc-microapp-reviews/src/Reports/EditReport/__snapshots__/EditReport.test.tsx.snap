// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditReport /> Create should render a create update  1`] = `
<tr
  className="gca-edit-report"
>
  <td>
    <Select
      arrowRenderer={[Function]}
      autosize={true}
      backspaceRemoves={true}
      backspaceToRemoveMessage="Press backspace to remove {label}"
      clearAllText="Clear all"
      clearRenderer={[Function]}
      clearValueText="Clear value"
      clearable={false}
      closeOnSelect={true}
      deleteRemoves={true}
      delimiter=","
      disabled={false}
      escapeClearsValue={true}
      filterOptions={[Function]}
      ignoreAccents={true}
      ignoreCase={true}
      inputProps={Object {}}
      isLoading={false}
      joinValues={false}
      labelKey="label"
      matchPos="any"
      matchProp="any"
      menuBuffer={0}
      menuRenderer={[Function]}
      multi={false}
      name="Frequency"
      noResultsText="No results found"
      onBlurResetsInput={true}
      onChange={[Function]}
      onCloseResetsInput={true}
      onSelectResetsInput={true}
      openOnClick={true}
      optionComponent={[Function]}
      options={
        Array [
          Object {
            "label": "Daily",
            "value": "Daily",
          },
          Object {
            "label": "Weekly (every Monday)",
            "value": "Weekly",
          },
          Object {
            "label": "Monthly (1st of the month)",
            "value": "Monthly",
          },
        ]
      }
      pageSize={5}
      placeholder="Select..."
      removeSelected={true}
      required={false}
      rtl={false}
      scrollMenuIntoView={true}
      searchable={true}
      simpleValue={false}
      tabSelectsValue={true}
      trimFilter={true}
      value=""
      valueComponent={[Function]}
      valueKey="value"
    />
  </td>
  <td>
    <Select
      arrowRenderer={[Function]}
      autosize={true}
      backspaceRemoves={true}
      backspaceToRemoveMessage="Press backspace to remove {label}"
      clearAllText="Clear all"
      clearRenderer={[Function]}
      clearValueText="Clear value"
      clearable={false}
      closeOnSelect={true}
      deleteRemoves={true}
      delimiter=","
      disabled={false}
      escapeClearsValue={true}
      filterOptions={[Function]}
      ignoreAccents={true}
      ignoreCase={true}
      inputProps={Object {}}
      isLoading={false}
      joinValues={false}
      labelKey="label"
      matchPos="any"
      matchProp="any"
      menuBuffer={0}
      menuRenderer={[Function]}
      multi={false}
      name="Type"
      noResultsText="No results found"
      onBlurResetsInput={true}
      onChange={[Function]}
      onCloseResetsInput={true}
      onSelectResetsInput={true}
      openOnClick={true}
      optionComponent={[Function]}
      options={
        Array [
          Object {
            "label": "All Reviews",
            "value": "Detailed",
          },
          Object {
            "label": "Reviews without comments",
            "value": "RatingsOnly",
          },
        ]
      }
      pageSize={5}
      placeholder="Select..."
      removeSelected={true}
      required={false}
      rtl={false}
      scrollMenuIntoView={true}
      searchable={true}
      simpleValue={false}
      tabSelectsValue={true}
      trimFilter={true}
      value=""
      valueComponent={[Function]}
      valueKey="value"
    />
  </td>
  <td>
    <textarea
      className=""
      name="Recipients"
      onBlur={[Function]}
      onChange={[Function]}
      placeholder="Please enter recipients' email addresses."
      value=""
    />
  </td>
  <td>
    <Button
      disabled={false}
      htmlType="button"
      onClick={[Function]}
      theme="bare"
      type="button"
    >
      <FormattedMessage
        id="reports.cancel"
        values={Object {}}
      />
    </Button>
    <Button
      busy={false}
      disabled={true}
      htmlType="button"
      onClick={[Function]}
      style={
        Object {
          "height": "40px",
          "width": "100px",
        }
      }
      theme="primary"
      type="button"
    >
      <FormattedMessage
        id="reports.add"
        values={Object {}}
      />
    </Button>
  </td>
</tr>
`;

exports[`<EditReport /> Update should render an update edit 1`] = `
<tr
  className="gca-edit-report"
>
  <td>
    <Select
      arrowRenderer={[Function]}
      autosize={true}
      backspaceRemoves={true}
      backspaceToRemoveMessage="Press backspace to remove {label}"
      clearAllText="Clear all"
      clearRenderer={[Function]}
      clearValueText="Clear value"
      clearable={false}
      closeOnSelect={true}
      deleteRemoves={true}
      delimiter=","
      disabled={false}
      escapeClearsValue={true}
      filterOptions={[Function]}
      ignoreAccents={true}
      ignoreCase={true}
      inputProps={Object {}}
      isLoading={false}
      joinValues={false}
      labelKey="label"
      matchPos="any"
      matchProp="any"
      menuBuffer={0}
      menuRenderer={[Function]}
      multi={false}
      name="Frequency"
      noResultsText="No results found"
      onBlurResetsInput={true}
      onChange={[Function]}
      onCloseResetsInput={true}
      onSelectResetsInput={true}
      openOnClick={true}
      optionComponent={[Function]}
      options={
        Array [
          Object {
            "label": "Daily",
            "value": "Daily",
          },
          Object {
            "label": "Weekly (every Monday)",
            "value": "Weekly",
          },
          Object {
            "label": "Monthly (1st of the month)",
            "value": "Monthly",
          },
        ]
      }
      pageSize={5}
      placeholder="Select..."
      removeSelected={true}
      required={false}
      rtl={false}
      scrollMenuIntoView={true}
      searchable={true}
      simpleValue={false}
      tabSelectsValue={true}
      trimFilter={true}
      value="Daily"
      valueComponent={[Function]}
      valueKey="value"
    />
  </td>
  <td>
    <Select
      arrowRenderer={[Function]}
      autosize={true}
      backspaceRemoves={true}
      backspaceToRemoveMessage="Press backspace to remove {label}"
      clearAllText="Clear all"
      clearRenderer={[Function]}
      clearValueText="Clear value"
      clearable={false}
      closeOnSelect={true}
      deleteRemoves={true}
      delimiter=","
      disabled={false}
      escapeClearsValue={true}
      filterOptions={[Function]}
      ignoreAccents={true}
      ignoreCase={true}
      inputProps={Object {}}
      isLoading={false}
      joinValues={false}
      labelKey="label"
      matchPos="any"
      matchProp="any"
      menuBuffer={0}
      menuRenderer={[Function]}
      multi={false}
      name="Type"
      noResultsText="No results found"
      onBlurResetsInput={true}
      onChange={[Function]}
      onCloseResetsInput={true}
      onSelectResetsInput={true}
      openOnClick={true}
      optionComponent={[Function]}
      options={
        Array [
          Object {
            "label": "All Reviews",
            "value": "Detailed",
          },
          Object {
            "label": "Reviews without comments",
            "value": "RatingsOnly",
          },
        ]
      }
      pageSize={5}
      placeholder="Select..."
      removeSelected={true}
      required={false}
      rtl={false}
      scrollMenuIntoView={true}
      searchable={true}
      simpleValue={false}
      tabSelectsValue={true}
      trimFilter={true}
      value="Detailed"
      valueComponent={[Function]}
      valueKey="value"
    />
  </td>
  <td>
    <textarea
      className=""
      name="Recipients"
      onBlur={[Function]}
      onChange={[Function]}
      placeholder="Please enter recipients' email addresses."
      value="test@ot.com"
    />
  </td>
  <td>
    <Button
      disabled={false}
      htmlType="button"
      onClick={[Function]}
      theme="bare"
      type="button"
    >
      <FormattedMessage
        id="reports.cancel"
        values={Object {}}
      />
    </Button>
    <Button
      busy={false}
      disabled={true}
      htmlType="button"
      onClick={[Function]}
      style={
        Object {
          "height": "40px",
          "width": "100px",
        }
      }
      theme="primary"
      type="button"
    >
      <FormattedMessage
        id="reports.save"
        values={Object {}}
      />
    </Button>
  </td>
</tr>
`;
