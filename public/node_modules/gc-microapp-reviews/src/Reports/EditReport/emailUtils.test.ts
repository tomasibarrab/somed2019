import { emailsAreAllValid, emailsToList, sanitizeEmails } from './emailUtils';

describe('email utils', () => {
  it('should replace any whitespace, comma, or newlilne with a newline character', () => {
    const emailInput = 'test@test.com, foo@bar.com\n   fizz@buzz.biz,\nanother@another.com,last@last.com';
    const expected = 'test@test.com\nfoo@bar.com\nfizz@buzz.biz\nanother@another.com\nlast@last.com';
    const actual = sanitizeEmails(emailInput);
    expect(actual).toEqual(expected);
  });

  it('should replace any whitespace, comma, and be splittable on newline to produce a correct array of emails', () => {
    const emailInput = `
       test@test.com, foo@bar.com\n   1@a.com,2@b.com,3@.com\n\n\n\n\n
       fizz@buzz.biz,\nanother@another.com,last@last.com`;
    const expected = [
      'test@test.com',
      'foo@bar.com',
      '1@a.com',
      '2@b.com',
      '3@.com',
      'fizz@buzz.biz',
      'another@another.com',
      'last@last.com',
    ];
    const actual = emailsToList(sanitizeEmails(emailInput));
    expect(actual).toEqual(expected);
  });

  it('should return the corret boolean for a list of emails', () => {
    const invalid = emailsAreAllValid('bad@foo, good@bar.com\nanotherGood@foo.com');
    const valid = emailsAreAllValid('ok@foo.biz, good@bar.com\nanotherGood@foo.com');
    expect(invalid).toBe(false);
    expect(valid).toBe(true);
  });
});
