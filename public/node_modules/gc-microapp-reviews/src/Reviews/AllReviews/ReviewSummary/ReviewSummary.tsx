import { StarRating } from 'gca-react-components';
import React from 'react';

import { Rating } from '../../../store/allReviews/allReviews';
import ReviewBreakdown from '../ReviewBreakdown/ReviewBreakdown';

import './ReviewSummary.scss';

const REJECTED_COLOR = '#A0A8BD';
/**
 * @param {object} ratings An object of ratings, already mapped to camel case.
 * @return {boolean}       Excepting 'overall', returns true if all values are null, false if any are non-null.
 */
const isOverallOnly = (ratings: Rating) =>
  Object.keys(ratings).filter(rating => ratings[rating] !== null && rating !== 'overall').length < 2;

interface Props {
  ratings: Rating;
  rejected: boolean;
}

export default function ReviewSummary(props: Props) {
  const { ratings, rejected } = props;
  const rejectedColor = rejected ? REJECTED_COLOR : undefined;

  if (isOverallOnly(ratings)) {
    return (
      <div className="gca-review-summary">
        <div className="gca-star-container">
          <StarRating size={20} rating={ratings.Overall} />
        </div>
      </div>
    );
  }

  return (
    <div className="gca-review-summary">
      <div className="gca-star-container">
        <StarRating color={rejectedColor} size={20} rating={ratings.Overall} />
      </div>
      <ReviewBreakdown ratings={ratings} />
    </div>
  );
}
