import { shallow } from 'enzyme';
import { shallowWithIntl } from 'gca-jest-config';
import React from 'react';

import { PureDateFilterDropdown } from './DateFilterDropdown';

describe('<PureDateFilterDropdown />', () => {
  let props;

  beforeEach(() => {
    props = {
      current: 'SubmissionDateTimeUtc',
      focused: true,
      pending: 'SubmissionDateTimeUtc',

      // Actions
      cancel: jest.fn(),
      focus: jest.fn(),
      set: jest.fn(),
    };
  });

  it('should show the correct open state', () => {
    props.focused = false;
    const wrapper = shallowWithIntl(<PureDateFilterDropdown {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('should show the correct open state', () => {
    const wrapper = shallowWithIntl(<PureDateFilterDropdown {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('should show the correct label', () => {
    const wrapper = shallowWithIntl(<PureDateFilterDropdown {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('should show the correct label', () => {
    props.current = 'DinedOnDateTimeUtc';
    const wrapper = shallowWithIntl(<PureDateFilterDropdown {...props} />);

    expect(wrapper).toMatchSnapshot();
  });

  it('should call toggleDateFilter on button click', () => {
    const wrapper = shallowWithIntl(<PureDateFilterDropdown {...props} />);

    wrapper.find('.date-filter-button').map(node => {
      node.simulate('click');
    });

    expect(props.set).toHaveBeenCalledWith('DinedOnDateTimeUtc', true);
    expect(props.set).toHaveBeenCalledWith('LastActivityDateTimeUtc', true);
  });
});
