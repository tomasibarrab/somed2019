/**
 * Combine all reducers in this file and export the combined reducers.
 * If we were to do this in store.js, reducers wouldn't be hot reloadable.
 */
import { currentContextReducer } from 'gca-react-components/src/redux-modules/currentContext';
import { featureTogglesReducer } from 'gca-react-components/src/redux-modules/featureToggles';
import {
  createReducer as createLanguageReducer,
  LangLocale,
} from 'gca-react-components/src/redux-modules/languageProvider';
import get from 'lodash/get';
import { routerReducer } from 'react-router-redux';
import { combineReducers } from 'redux';
import { State } from './types';

import { reducer as form } from 'redux-form';
import { allReviewsReducer } from './allReviews/allReviews';
import { modalsReducer } from './modals/modals';
import { reportsReducer } from './reports/reports';
import { reducer as reviewFilters } from './reviewFilters/reviewFilters';
import { reviewRepliesReducer } from './reviewReplies/reviewReplies';
import { reviewSummaryReducer } from './reviewSummary/reviewSummary';

const locale: LangLocale = get(window, ['gcaConfig', 'i18n', 'primaryLocale']);
/**
 * Creates the main reducer with the asynchronously loaded ones
 */

export default function createReducer() {
  return combineReducers<State>({
    allReviews: allReviewsReducer,
    currentContext: currentContextReducer,
    featureToggles: featureTogglesReducer,
    form,
    language: createLanguageReducer({ locale: locale || 'en-us' }),
    modals: modalsReducer,
    reports: reportsReducer,
    reviewFilters,
    reviewReplies: reviewRepliesReducer,
    reviewSummary: reviewSummaryReducer,
  });
}
