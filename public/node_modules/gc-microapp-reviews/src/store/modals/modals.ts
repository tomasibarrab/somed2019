import { types as introVideoTypes } from 'gca-react-components/src/redux-modules/introVideo';
import { Action, actionCreatorFactory, Success } from 'typescript-fsa';
import { reducerWithInitialState } from 'typescript-fsa-reducers';

import { Epic } from '../../store/types';

// --------------------------------- //
// Types
// --------------------------------- //

export interface ModalsState {
  currentModal: string | null;
}

// --------------------------------- //
// Actions
// --------------------------------- //

const actionCreator = actionCreatorFactory('MODALS');

export const openModal = actionCreator<{ modal: string; modalPayload?: any }>('OPEN');
export const closeModal = actionCreator<{ modal: string }>('CLOSE');
export const confirmCloseModal = actionCreator<{ modal: string }>('CONFIRM_CLOSE');

// --------------------------------- //
// Reducer
// --------------------------------- //

export const initialState: ModalsState = {
  currentModal: null,
};

export const modalsReducer = reducerWithInitialState(initialState)
  .case(openModal, (state, { modal }) => ({
    ...state,
    currentModal: modal,
  }))
  .cases([closeModal, confirmCloseModal], (state, { modal }) => ({
    ...state,
    currentModal: null,
  }));

// --------------------------------- //
// Epics
// --------------------------------- //

export const videoModalEpic: Epic = action$ => {
  return action$.ofType(introVideoTypes.SHOW_INTRO_VIDEO).mapTo(openModal({ modal: 'INTRO_VIDEO' }));
};
