import { Checkbox } from 'gca-react-components';
import React, { ReactNode, SFC } from 'react';
import { InjectedIntlProps, injectIntl } from 'react-intl';
import { Field } from 'redux-form';
import { Times as TimesType } from '../../../../store/flexiblepricing/flexiblepricing.types';
import EveningIcon from './images/EveningIcon';
import MiddayIcon from './images/MiddayIcon';
import MorningIcon from './images/MorningIcon';
import { SetValue } from './types';

interface Props {
  time: TimesType;
  i18nKey: string;
  selectedIcon: ReactNode;
  setValue: SetValue;
  value: boolean;
}

const timeToIconMap = {
  [TimesType.Morning]: <MorningIcon />,
  [TimesType.Midday]: <MiddayIcon />,
  [TimesType.Evening]: <EveningIcon />,
};

const Time: SFC<Props & InjectedIntlProps> = ({ selectedIcon, time, i18nKey, setValue, value, intl }) => (
  <li>
    <Checkbox
      checked={value}
      label={
        <div className="time-label">
          <div className="icons">
            {value ? (
              <div className="selected-time-icon">{selectedIcon}</div>
            ) : (
              <div className="unselected-time-icon">{timeToIconMap[time]}</div>
            )}
          </div>
          <span className="short">{intl.formatMessage({ id: `times.${i18nKey}.name` })}</span>
          <span className="time">{intl.formatMessage({ id: `times.${i18nKey}.period` })}</span>
        </div>
      }
      onClick={() => {
        setValue(!value);
      }}
    />
  </li>
);

export default injectIntl<Props>(Time);
