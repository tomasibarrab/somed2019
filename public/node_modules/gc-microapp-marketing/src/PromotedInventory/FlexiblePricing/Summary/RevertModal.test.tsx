import RevertModal from './RevertModal';

import { mount } from 'enzyme';
import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import configureMockStore from 'redux-mock-store';
import makeMockState from '../../../store/flexiblepricing/makeMockState';
import { keys } from '../../../translations/bundles/marketing.json';

const renderComponent = (state: any) => {
  const store = configureMockStore([])(state);

  const defaultProps = {
    onCancel: () => {
      /* do nothing */
    },
    onConfirm: () => {
      /* do nothing */
    },
  };

  return mount(
    <Provider store={store}>
      <IntlProvider messages={keys} locale="en-US">
        <RevertModal {...defaultProps} />
      </IntlProvider>
    </Provider>,
  );
};

describe('RevertModal', () => {
  const commonState = makeMockState();
  const scenarios = [
    {
      description: 'without flat fee',
      hasFlatFee: false,
    },
    {
      description: 'with flat fee',
      hasFlatFee: true,
    },
  ];

  scenarios.forEach(({ description, hasFlatFee, noSystemFee }: any) => {
    it(`Matches snapshot ${description}`, () => {
      const stateOptions: any = {
        hasFlatFee,
      };
      const state = makeMockState(stateOptions);
      const wrapper = renderComponent(state);

      expect(wrapper.debug()).toMatchSnapshot();
    });
  });
});
