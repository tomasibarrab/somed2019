import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { create } from 'react-test-renderer';
import configureMockStore from 'redux-mock-store';
import { TermsType } from '../../../store/flexiblepricing/flexiblepricing.types';
import makeMockState from '../../../store/flexiblepricing/makeMockState';
import { keys } from '../../../translations/bundles/marketing.json';
import ModalTermsAndConditions from './ModalTermsAndConditions';

describe('ModalTermsAndConditions', () => {
  it('should match snapshot', () => {
    const store = configureMockStore()(makeMockState());

    const component = create(
      <Provider store={store}>
        <IntlProvider locale="en-US" messages={keys}>
          <ModalTermsAndConditions
            confirm={() => {
              /* INFO: tslint `block is empty` */
            }}
            onClose={() => {
              /* INFO: tslint `block is empty` */
            }}
            termsType={TermsType.FirstRun}
          />
        </IntlProvider>
      </Provider>,
    );
    const tree = component.toJSON();
    expect(tree).toMatchSnapshot();
  });
});
