// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LandingPage /> wizard flow 1`] = `
<Connect(EducationPage)
  onClickNext={[Function]}
  onClickPrevious={[Function]}
  type="intro-prices"
>
  <EducationPage
    clickOrInteract={[Function]}
    difference={
      Object {
        "amount": 423,
        "currencyCode": "USD",
      }
    }
    discoveryPrices={
      Object {
        "increase": Object {
          "amount": 2.75,
          "currencyCode": "USD",
        },
        "reduce": Object {
          "amount": 0.75,
          "currencyCode": "USD",
        },
        "standard": Object {
          "amount": 1.5,
          "currencyCode": "USD",
        },
      }
    }
    featureToggles={
      Object {
        "features": Object {},
      }
    }
    onClickNext={[Function]}
    onClickPrevious={[Function]}
    type="intro-prices"
  >
    <div
      className="education-page intro-prices"
    >
      <h1>
        <FormattedMessage
          id="flexiblepricing.educationpage.introprices.title"
          values={Object {}}
        >
          <span>
            Take control of your bill
          </span>
        </FormattedMessage>
      </h1>
      <h2
        className="subtitle"
      >
        <FormattedMessage
          id="flexiblepricing.educationpage.introprices.subtitle.save_up_to"
          values={
            Object {
              "price": "$423",
            }
          }
        >
          <span>
            With Flexible Pricing you can save up to $423 or invest your savings to optimize your covers and grow your business.
          </span>
        </FormattedMessage>
      </h2>
      <Component>
        IntroPricesContentMock
      </Component>
      <div
        className="buttons"
      >
        <div
          className="dots"
        >
          <span
            className="dot on"
          />
          <span
            className="dot"
          />
          <span
            className="dot"
          />
        </div>
        <Button
          data-testid="btnNext"
          disabled={false}
          htmlType="button"
          name="See my bill [Next btn on 1st screen]"
          onClick={[Function]}
          theme="primary"
          type="button"
        >
          <button
            className="gca-button primary"
            data-testid="btnNext"
            name="See my bill [Next btn on 1st screen]"
            onClick={[Function]}
            type="button"
          >
            <span
              className="button-content"
            >
              <FormattedMessage
                id="flexiblepricing.educationpage.introprices.buttonnexttitle"
                values={Object {}}
              >
                <span>
                  See my bill
                </span>
              </FormattedMessage>
            </span>
          </button>
        </Button>
      </div>
    </div>
  </EducationPage>
</Connect(EducationPage)>
`;

exports[`<LandingPage /> wizard flow 2`] = `
<Connect(EducationPage)
  onClickNext={[Function]}
  onClickPrevious={[Function]}
  type="bill-detail"
>
  <EducationPage
    clickOrInteract={[Function]}
    difference={
      Object {
        "amount": 423,
        "currencyCode": "USD",
      }
    }
    discoveryPrices={
      Object {
        "increase": Object {
          "amount": 2.75,
          "currencyCode": "USD",
        },
        "reduce": Object {
          "amount": 0.75,
          "currencyCode": "USD",
        },
        "standard": Object {
          "amount": 1.5,
          "currencyCode": "USD",
        },
      }
    }
    featureToggles={
      Object {
        "features": Object {},
      }
    }
    onClickNext={[Function]}
    onClickPrevious={[Function]}
    type="bill-detail"
  >
    <div
      className="education-page bill-detail"
    >
      <h1>
        <FormattedMessage
          id="flexiblepricing.educationpage.billdetail.title"
          values={Object {}}
        >
          <span>
            How your bill would change with Flexible Pricing
          </span>
        </FormattedMessage>
      </h1>
      <h2
        className="subtitle"
      />
      <Connect(InjectIntl(BillDetailContent)) />
      <div
        className="buttons"
      >
        <div
          className="dots"
        >
          <span
            className="dot"
          />
          <span
            className="dot on"
          />
          <span
            className="dot"
          />
        </div>
        <Button
          data-testid="btnNext"
          disabled={false}
          htmlType="button"
          name="Show me how [Next btn on 2nd screen]"
          onClick={[Function]}
          theme="primary"
          type="button"
        >
          <button
            className="gca-button primary"
            data-testid="btnNext"
            name="Show me how [Next btn on 2nd screen]"
            onClick={[Function]}
            type="button"
          >
            <span
              className="button-content"
            >
              <FormattedMessage
                id="flexiblepricing.educationpage.billdetail.buttonnexttitle"
                values={Object {}}
              >
                <span>
                  Show me how
                </span>
              </FormattedMessage>
            </span>
          </button>
        </Button>
        <Button
          data-testid="btnPrevious"
          disabled={false}
          htmlType="button"
          name="Back btn on Bill Details [2nd screen]"
          onClick={[Function]}
          theme="link"
          type="button"
        >
          <button
            className="gca-button link"
            data-testid="btnPrevious"
            name="Back btn on Bill Details [2nd screen]"
            onClick={[Function]}
            type="button"
          >
            <span
              className="button-content"
            >
              <FormattedMessage
                id="flexiblepricing.educationpage.buttonprevioustitle"
                values={Object {}}
              >
                <span>
                  Back
                </span>
              </FormattedMessage>
            </span>
          </button>
        </Button>
      </div>
    </div>
  </EducationPage>
</Connect(EducationPage)>
`;

exports[`<LandingPage /> wizard flow 3`] = `
<Connect(EducationPage)
  onClickNext={[Function]}
  onClickPrevious={[Function]}
  type="discovery-explanation"
>
  <EducationPage
    clickOrInteract={[Function]}
    difference={
      Object {
        "amount": 423,
        "currencyCode": "USD",
      }
    }
    discoveryPrices={
      Object {
        "increase": Object {
          "amount": 2.75,
          "currencyCode": "USD",
        },
        "reduce": Object {
          "amount": 0.75,
          "currencyCode": "USD",
        },
        "standard": Object {
          "amount": 1.5,
          "currencyCode": "USD",
        },
      }
    }
    featureToggles={
      Object {
        "features": Object {},
      }
    }
    onClickNext={[Function]}
    onClickPrevious={[Function]}
    type="discovery-explanation"
  >
    <div
      className="education-page discovery-explanation"
    >
      <h1>
        <FormattedMessage
          id="flexiblepricing.educationpage.discoveryexplanation.title"
          values={Object {}}
        >
          <span>
            Control your exposure
          </span>
        </FormattedMessage>
      </h1>
      <h2
        className="subtitle"
      >
        <FormattedMessage
          id="flexiblepricing.educationpage.discoveryexplanation.subtitle"
          values={
            Object {
              "priceFrom": "$1.50",
              "priceTo": "$2.75",
            }
          }
        >
          <span>
            With discovery bookings ($1.50 - $2.75/cover), you can adjust your exposure in search, lists, and marketing emails to get in front of more diners exploring where to eat.
          </span>
        </FormattedMessage>
      </h2>
      <Component>
        DiscoveryExplanationContentMock
      </Component>
      <div
        className="buttons"
      >
        <div
          className="dots"
        >
          <span
            className="dot"
          />
          <span
            className="dot"
          />
          <span
            className="dot on"
          />
        </div>
        <Link
          className="set-my-visibility"
          replace={false}
          to="settings"
        >
          <a
            className="set-my-visibility"
            href="/settings"
            onClick={[Function]}
          >
            <Button
              data-testid="btnNext"
              disabled={false}
              htmlType="button"
              name="Set my exposure [Next btn on 3rd screen]"
              onClick={[Function]}
              theme="primary"
              type="button"
            >
              <button
                className="gca-button primary"
                data-testid="btnNext"
                name="Set my exposure [Next btn on 3rd screen]"
                onClick={[Function]}
                type="button"
              >
                <span
                  className="button-content"
                >
                  <FormattedMessage
                    id="flexiblepricing.educationpage.discoveryexplanation.buttonnexttitle"
                    values={Object {}}
                  >
                    <span>
                      Set my exposure
                    </span>
                  </FormattedMessage>
                </span>
              </button>
            </Button>
          </a>
        </Link>
        <Button
          data-testid="btnPrevious"
          disabled={false}
          htmlType="button"
          name="Back btn on Discovery Explanation [3rd screen]"
          onClick={[Function]}
          theme="link"
          type="button"
        >
          <button
            className="gca-button link"
            data-testid="btnPrevious"
            name="Back btn on Discovery Explanation [3rd screen]"
            onClick={[Function]}
            type="button"
          >
            <span
              className="button-content"
            >
              <FormattedMessage
                id="flexiblepricing.educationpage.buttonprevioustitle"
                values={Object {}}
              >
                <span>
                  Back
                </span>
              </FormattedMessage>
            </span>
          </button>
        </Button>
      </div>
    </div>
  </EducationPage>
</Connect(EducationPage)>
`;

exports[`<LandingPage /> wizard flow 4`] = `
<Connect(EducationPage)
  onClickNext={[Function]}
  onClickPrevious={[Function]}
  type="bill-detail"
>
  <EducationPage
    clickOrInteract={[Function]}
    difference={
      Object {
        "amount": 423,
        "currencyCode": "USD",
      }
    }
    discoveryPrices={
      Object {
        "increase": Object {
          "amount": 2.75,
          "currencyCode": "USD",
        },
        "reduce": Object {
          "amount": 0.75,
          "currencyCode": "USD",
        },
        "standard": Object {
          "amount": 1.5,
          "currencyCode": "USD",
        },
      }
    }
    featureToggles={
      Object {
        "features": Object {},
      }
    }
    onClickNext={[Function]}
    onClickPrevious={[Function]}
    type="bill-detail"
  >
    <div
      className="education-page bill-detail"
    >
      <h1>
        <FormattedMessage
          id="flexiblepricing.educationpage.billdetail.title"
          values={Object {}}
        >
          <span>
            How your bill would change with Flexible Pricing
          </span>
        </FormattedMessage>
      </h1>
      <h2
        className="subtitle"
      />
      <Connect(InjectIntl(BillDetailContent)) />
      <div
        className="buttons"
      >
        <div
          className="dots"
        >
          <span
            className="dot"
          />
          <span
            className="dot on"
          />
          <span
            className="dot"
          />
        </div>
        <Button
          data-testid="btnNext"
          disabled={false}
          htmlType="button"
          name="Show me how [Next btn on 2nd screen]"
          onClick={[Function]}
          theme="primary"
          type="button"
        >
          <button
            className="gca-button primary"
            data-testid="btnNext"
            name="Show me how [Next btn on 2nd screen]"
            onClick={[Function]}
            type="button"
          >
            <span
              className="button-content"
            >
              <FormattedMessage
                id="flexiblepricing.educationpage.billdetail.buttonnexttitle"
                values={Object {}}
              >
                <span>
                  Show me how
                </span>
              </FormattedMessage>
            </span>
          </button>
        </Button>
        <Button
          data-testid="btnPrevious"
          disabled={false}
          htmlType="button"
          name="Back btn on Bill Details [2nd screen]"
          onClick={[Function]}
          theme="link"
          type="button"
        >
          <button
            className="gca-button link"
            data-testid="btnPrevious"
            name="Back btn on Bill Details [2nd screen]"
            onClick={[Function]}
            type="button"
          >
            <span
              className="button-content"
            >
              <FormattedMessage
                id="flexiblepricing.educationpage.buttonprevioustitle"
                values={Object {}}
              >
                <span>
                  Back
                </span>
              </FormattedMessage>
            </span>
          </button>
        </Button>
      </div>
    </div>
  </EducationPage>
</Connect(EducationPage)>
`;

exports[`<LandingPage /> wizard flow 5`] = `
<Connect(EducationPage)
  onClickNext={[Function]}
  onClickPrevious={[Function]}
  type="intro-prices"
>
  <EducationPage
    clickOrInteract={[Function]}
    difference={
      Object {
        "amount": 423,
        "currencyCode": "USD",
      }
    }
    discoveryPrices={
      Object {
        "increase": Object {
          "amount": 2.75,
          "currencyCode": "USD",
        },
        "reduce": Object {
          "amount": 0.75,
          "currencyCode": "USD",
        },
        "standard": Object {
          "amount": 1.5,
          "currencyCode": "USD",
        },
      }
    }
    featureToggles={
      Object {
        "features": Object {},
      }
    }
    onClickNext={[Function]}
    onClickPrevious={[Function]}
    type="intro-prices"
  >
    <div
      className="education-page intro-prices"
    >
      <h1>
        <FormattedMessage
          id="flexiblepricing.educationpage.introprices.title"
          values={Object {}}
        >
          <span>
            Take control of your bill
          </span>
        </FormattedMessage>
      </h1>
      <h2
        className="subtitle"
      >
        <FormattedMessage
          id="flexiblepricing.educationpage.introprices.subtitle.save_up_to"
          values={
            Object {
              "price": "$423",
            }
          }
        >
          <span>
            With Flexible Pricing you can save up to $423 or invest your savings to optimize your covers and grow your business.
          </span>
        </FormattedMessage>
      </h2>
      <Component>
        IntroPricesContentMock
      </Component>
      <div
        className="buttons"
      >
        <div
          className="dots"
        >
          <span
            className="dot on"
          />
          <span
            className="dot"
          />
          <span
            className="dot"
          />
        </div>
        <Button
          data-testid="btnNext"
          disabled={false}
          htmlType="button"
          name="See my bill [Next btn on 1st screen]"
          onClick={[Function]}
          theme="primary"
          type="button"
        >
          <button
            className="gca-button primary"
            data-testid="btnNext"
            name="See my bill [Next btn on 1st screen]"
            onClick={[Function]}
            type="button"
          >
            <span
              className="button-content"
            >
              <FormattedMessage
                id="flexiblepricing.educationpage.introprices.buttonnexttitle"
                values={Object {}}
              >
                <span>
                  See my bill
                </span>
              </FormattedMessage>
            </span>
          </button>
        </Button>
      </div>
    </div>
  </EducationPage>
</Connect(EducationPage)>
`;
