import { mount } from 'enzyme';
import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { MemoryRouter } from 'react-router';
import configureMockStore from 'redux-mock-store';
import makeMockState from '../../../store/flexiblepricing/makeMockState';
import { keys } from '../../../translations/bundles/marketing.json';
import findAndClick from '../findAndClick';
import EducationPage, { EducationPageType } from './EducationPage';
import LandingPage from './LandingPage';

jest.mock('./EducationPages/BillDetailContent');
jest.mock('./EducationPages/DiscoveryExplanationContent', () => () => 'DiscoveryExplanationContentMock');
jest.mock('./EducationPages/IntroPricesContent', () => () => 'IntroPricesContentMock');

const enum TestId {
  btnNext = 'btnNext',
  btnPrevious = 'btnPrevious',
}

describe('<LandingPage />', () => {
  test('wizard flow', () => {
    const store = configureMockStore()(makeMockState());

    const wrapper = mount(
      <Provider store={store}>
        <IntlProvider locale="en-US" messages={keys}>
          <MemoryRouter>
            <LandingPage {...{ location: {} } as any} />
          </MemoryRouter>
        </IntlProvider>
      </Provider>,
    );

    expect(wrapper.find(`.${EducationPageType.IntroPrices}`).length).toEqual(1);
    expect(wrapper.find(EducationPage)).toMatchSnapshot();

    findAndClick(TestId.btnNext, wrapper);

    expect(wrapper.find(`.${EducationPageType.BillDetail}`).length).toEqual(1);
    expect(wrapper.find(EducationPage)).toMatchSnapshot();

    findAndClick(TestId.btnNext, wrapper);

    expect(wrapper.find(`.${EducationPageType.DiscoveryExplanation}`).length).toEqual(1);
    expect(wrapper.find(EducationPage)).toMatchSnapshot();

    findAndClick(TestId.btnPrevious, wrapper);

    expect(wrapper.find(`.${EducationPageType.BillDetail}`).length).toEqual(1);
    expect(wrapper.find(EducationPage)).toMatchSnapshot();

    findAndClick(TestId.btnPrevious, wrapper);

    expect(wrapper.find(`.${EducationPageType.IntroPrices}`).length).toEqual(1);
    expect(wrapper.find(EducationPage)).toMatchSnapshot();
  });
});
