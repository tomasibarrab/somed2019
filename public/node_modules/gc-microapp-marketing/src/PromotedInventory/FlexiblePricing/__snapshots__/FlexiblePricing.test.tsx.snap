// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FlexiblePricing /> should show error boundary if state has error 1`] = `
"<Provider store={{...}}>
  <IntlProvider locale=\\"en\\" messages={{...}}>
    <MemoryRouter>
      <Router history={{...}}>
        <Connect(FlexiblePricing) match={{...}}>
          <FlexiblePricing match={{...}} activeContractPrices={[undefined]} appInitialized={[undefined]} hasVisibilitySettings={true} pricingInfo={{...}} visibilitySettings={{...}} fetchActiveContractPricesStarted={[Function]} fetchPricingInfoStarted={[Function]}>
            <InjectIntl(ErrorBoundary) hasError={true}>
              <ErrorBoundary hasError={true} intl={{...}}>
                <Panel title=\\"Error\\">
                  <section className=\\"gca-panel\\">
                    <header className=\\"gca-panel-header\\">
                      <h1>
                        Error
                      </h1>
                    </header>
                    <div className=\\"gca-panel-body\\">
                      <FormattedMessage tagName=\\"h2\\" id=\\"flexiblepricing.errorboundary.something_went_wrong\\" values={{...}}>
                        <h2>
                          Something went wrong! Try again a bit later.
                        </h2>
                      </FormattedMessage>
                      <FormattedMessage tagName=\\"h2\\" id=\\"flexiblepricing.errorboundary.if_persists\\" values={{...}}>
                        <h2>
                          If the error persists, please 
                          <a href=\\"https://support.opentable.com/s/send-us-an-email?language=en_US\\">
                            contact support
                          </a>
                          .
                        </h2>
                      </FormattedMessage>
                    </div>
                  </section>
                </Panel>
              </ErrorBoundary>
            </InjectIntl(ErrorBoundary)>
          </FlexiblePricing>
        </Connect(FlexiblePricing)>
      </Router>
    </MemoryRouter>
  </IntlProvider>
</Provider>"
`;
