import React from 'react';
import { shallow } from 'enzyme';
import { shallowToJson } from 'enzyme-to-json';
import dimensionWrapper, {
  getViewBoxFromFunctionBody,
} from './dimensionWrapper';

describe('dimensionWrapper', () => {
  describe('getViewBoxFromFunctionBody', () => {
    it('should work with single quotes', () => {
      expect(getViewBoxFromFunctionBody('...height:t.height,viewBox:\'0 0 5 5\',version...'))
        .toEqual(['0', '0', '5', '5']);
    });

    it('should work with double quotes', () => {
      expect(getViewBoxFromFunctionBody('...height:t.height,viewBox:"0 0 5 5",version...'))
        .toEqual(['0', '0', '5', '5']);
    });
  });
  describe('dimensionWrapper', () => {
    const Icon = dimensionWrapper((props) => (
      <svg xmlns="http://www.w3.org/2000/svg" height={props.width} width={props.width} viewBox="1648 28 8 8">
        <title>Cross Icon</title>
        <path d="M1649.5 29.5L1654.5 34.5" stroke={props.color} fill="none"></path>
        <path d="M1654.5 29.5L1649.5 34.5" stroke={props.color} fill="none"></path>
      </svg>
    ));

    it('defaults to 24px width and height', () => {
      const wrapper = shallow(<Icon />);
      expect(shallowToJson(wrapper)).toMatchSnapshot();
    });

    it('accepts width only', () => {
      const wrapper = shallow(<Icon width="50" />);
      expect(shallowToJson(wrapper)).toMatchSnapshot();
    });

    it('accepts height only', () => {
      const wrapper = shallow(<Icon height="10" />);
      expect(shallowToJson(wrapper)).toMatchSnapshot();
    });

    it('accepts width and height', () => {
      const wrapper = shallow(<Icon width="20" height="40" />);
      expect(shallowToJson(wrapper)).toMatchSnapshot();
    });
  });
});
