/*
  Pixel to rem conversion (and vice versa)
*/

@import '../common/_variables.scss';

// Functions
// *********
@function parse-int($n) {
  @return $n / ($n * 0 + 1);
}

//pixel to rem
@function px-to-rem($size) {
  @if (unit($size) == 'px') {
    $remSize: $size / $base-font-size;

    @return #{$remSize}rem;
  }

  @else {
    @return $size;
  }
}

// rem to pixel
@function rem-to-px($size) {
  @if (unit($size) == 'rem') {
    @return round(parse-int($size) * $base-font-size);
  }

  // Return pixel as is
  @else {
    @return $size;
  }
}

// Find out if it is px or rem and convert it correctly
@function calculate-correct-unit($value, $isRem: false) {
  @if ($isRem == false) {
    @return px-to-rem($value);
  }

  @else {
    @return rem-to-px($value);
  }
}

// Convert each value in a list
@function list-property-values($values, $isRem: false) {
  $list_values: ();

  @each $value in $values {
    @if ($value == 0) {
      $list_values: append($list_values, $value);
    }

    @else if (type-of($value) != 'number') {
      $list_values: append($list_values, $value);
    }

    @else if (unitless($value)) {
      $list_values: append($list_values, $value);
    }

    @else {
      $list_values: append($list_values, calculate-correct-unit($value, $isRem));
    }
  }

  @return $list_values;
}

// Mixins
// *********

// Font size converter (pixel to rem or vice versa)
@mixin font-size($size) {
  @if (unit($size) == 'px') {
    font-size: $size;
    font-size: px-to-rem($size);
  }

  @else {
    font-size: rem-to-px($size);
    font-size: $size;
  }
}

// Property converter (pixel to rem)
@mixin to-rem($property, $property_values) {
  #{$property}: $property_values;

  @if type-of($property_values) == 'number' {
    #{$property}: calculate-correct-unit($property_values);
  }

  @else {
    #{$property}: list-property-values($property_values);
  }
}

// Property converter (rem to pixel)
@mixin to-px($property, $property_values) {
  @if type-of($property_values) == 'number' {
    #{$property}: calculate-correct-unit($property_values, true);
  }

  @else {
    #{$property}: list-property-values($property_values, true);
  }

  #{$property}: $property_values;
}

// Property converter (shorthand)
@mixin rem($property, $property_values, $isRem: false) {
  @if ($isRem) {
    @include to-px($property, $property_values);
  }

  @else {
    @include to-rem($property, $property_values);
  }
}
