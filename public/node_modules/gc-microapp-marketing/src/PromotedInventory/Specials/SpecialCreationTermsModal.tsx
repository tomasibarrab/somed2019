import { Modal, ModalHeader, ModalMain } from 'gca-react-components';
import React, { SFC } from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { CreateActionPayload, Pages } from '../../store/campaigns/campaigns.types';
import { LINK_TO_SPECIALS_TERMS_V1 } from '../constants';
import TermsAndConditions, { TermsFVWithBrowserInfo } from '../TermsAndConditions/TermsAndConditions';
import { makeSpecialPayload } from './makeSpecialPayload';
import './SpecialCreationTermsModal.scss';

interface OP {
  formValuesSnapshot: any;
  close: () => void;
  confirm: (payload: CreateActionPayload) => void;
}

type Props = OP & InjectedIntlProps;

export const SpecialCreationTermsModal: SFC<Props> = ({ formValuesSnapshot, close, confirm, intl }) => {
  const { incentives, ...transformedCampaign } = makeSpecialPayload(formValuesSnapshot);

  const addLinkToTermsAndConfirm = (termsFVWithBrowserInfo: TermsFVWithBrowserInfo): void => {
    const approvalInfo = { ...termsFVWithBrowserInfo, linkToTerms: LINK_TO_SPECIALS_TERMS_V1 };

    confirm({ approvalInfo, formValues: formValuesSnapshot, refetchCampaigns: Pages.Specials });
  };

  const typeName: string = formValuesSnapshot.type;
  const incentive = {
    ...incentives[0],
    offerTypeName: intl.formatMessage({ id: `guestcampaigns.specials.form.type.${typeName}` }),
  };

  return (
    <Modal onClose={close} modalClass="special-creation-terms-modal">
      <ModalHeader onClose={close} title={intl.formatMessage({ id: 'guestcampaigns.terms.terms_and_conditions' })} />
      <ModalMain className="special-creation-terms-modal-main">
        <div className="intro">
          <FormattedMessage id="guestcampaigns.terms.specials.description" />
        </div>
        <TermsAndConditions
          linkToTerms={{
            id: 'guestcampaigns.terms.opentable_client_agreement',
            link: LINK_TO_SPECIALS_TERMS_V1,
          }}
          campaign={transformedCampaign}
          incentive={incentive}
          detailsOpen={false}
          confirm={addLinkToTermsAndConfirm}
        />
      </ModalMain>
    </Modal>
  );
};

export default injectIntl(SpecialCreationTermsModal);
