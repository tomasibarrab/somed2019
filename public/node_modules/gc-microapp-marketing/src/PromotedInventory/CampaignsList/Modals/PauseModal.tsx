import { Button, Modal, ModalHeader, ModalMain } from 'gca-react-components';
import moment from 'moment';
import React from 'react';
import {
    FormattedDate, FormattedMessage, FormattedTime, InjectedIntlProps, injectIntl,
} from 'react-intl';

interface OP {
  confirm: () => void;
  close: (success: boolean) => void;
}

type Props = OP & InjectedIntlProps;

interface State {
  success: boolean;
}

/* P, S */
class PauseModal extends React.Component<Props, State> {
  public state = {
    success: false,
  };

  public render() {
    return (
      <Modal onClose={this.onClose} modalClass="pause-campaign-modal">
        <ModalHeader
          onClose={this.onClose}
          title={this.props.intl.formatMessage({
            id: 'guestcampaigns.list.title.pause_campaign',
          })}
        />
        <ModalMain>
          {!this.state.success
            ? [
                <FormattedMessage
                  key="1"
                  id="guestcampaigns.list.pause.description.1"
                  tagName="p"
                  values={{
                    'formatted-duration': (
                      <FormattedMessage id="guestcampaigns.list.pause.description.next_48_hours" tagName="b" />
                    ),
                  }}
                />,

                <FormattedMessage
                  key="2"
                  id="guestcampaigns.list.pause.description.2"
                  tagName="p"
                  values={{ 'phone-number': <FormattedMessage id="guestcampaigns.support.phone" tagName="strong" /> }}
                />,
              ]
            : [
                <FormattedMessage
                  key="1"
                  id="guestcampaigns.list.pause.confirmed.1"
                  tagName="p"
                  values={{
                    date: (
                      <b>
                        <FormattedDate
                          value={moment()
                            .add(48, 'hours')
                            .toDate()}
                          month="short"
                          day="numeric"
                        />
                      </b>
                    ),
                    time: (
                      <b>
                        <FormattedTime
                          value={moment()
                            .add(48, 'hours')
                            .toDate()}
                        />
                      </b>
                    ),
                  }}
                />,
                <FormattedMessage
                  key="2"
                  id="guestcampaigns.list.pause.confirmed.2"
                  tagName="p"
                  values={{ 'phone-number': <FormattedMessage id="guestcampaigns.support.phone" tagName="strong" /> }}
                />,
              ]}
          {!this.state.success && (
            <Button
              onClick={() => {
                this.setState({
                  success: true,
                });
                this.props.confirm();
              }}
            >
              <FormattedMessage id="guestcampaigns.list.pause.button.confirm" tagName="span" />
            </Button>
          )}
          <Button onClick={this.onClose}>
            <FormattedMessage
              id={this.state.success ? 'guestcampaigns.list.button.got_it' : 'guestcampaigns.list.pause.button.cancel'}
              tagName="span"
            />
          </Button>
        </ModalMain>
      </Modal>
    );
  }

  private onClose = () => {
    this.props.close(this.state.success);
  };
}

export default injectIntl(PauseModal);
