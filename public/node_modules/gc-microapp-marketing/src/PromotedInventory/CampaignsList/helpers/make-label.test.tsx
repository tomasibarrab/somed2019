import moment from 'moment';
import React from 'react';
import { IntlProvider } from 'react-intl';
import { create } from 'react-test-renderer';
import { EndDateType } from '../../../store/campaigns/campaigns.types';
import { keys } from '../../../translations/bundles/marketing.json';
import makeLabel from './make-label';

describe('makeLabel', () => {
  const inFourDays = moment()
    .add(3, 'day')
    .toDate();
  const today = moment().toDate();

  const scenarios = [
    {
      description: 'startDate today, endDate inFourDays',
      props: {
        item: {
          endDate: inFourDays,
          label: 'a label',
          startDate: today,
        },
      },
    },
    {
      description: 'startDate today, endDate today',
      props: {
        item: {
          endDate: today,
          label: 'a label',
          startDate: today,
        },
      },
    },
    {
      description: 'no label, startDate and endDate today',
      props: {
        item: {
          endDate: today,
          label: null,
          startDate: today,
        },
      },
    },
    {
      description: 'startDate today, endDate null',
      props: {
        item: {
          endDate: null,
          label: 'a label',
          startDate: today,
        },
      },
    },
  ];

  scenarios.map(({ description, props: { item } }) => {
    test(description, () => {
      const intlProvider = new IntlProvider({ locale: 'en' }, {});
      const intl = intlProvider.getChildContext().intl;
      const component = create(
        <IntlProvider locale="en-US" messages={keys}>
          <div>{makeLabel(intl, item)}</div>
        </IntlProvider>,
      );
      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });
  });
});
