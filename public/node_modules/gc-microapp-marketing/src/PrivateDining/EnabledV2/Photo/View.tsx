import { AsyncContent, Button, ReplaceIcon, StorefrontIcon } from 'gca-react-components';
import React, { Component } from 'react';
import { FormattedMessage } from 'react-intl';
import { Field, GenericFieldHTMLAttributes, WrappedFieldProps } from 'redux-form';

import './View.scss';

export enum Status {
  Loading,
  Success,
  Empty,
  Error,
}

interface Props {
  url: null | string;
  status: Status;
  height: number;
  width: number;
  onSelectClick(): void;
}

class PhotoView extends Component<Props> {
  private emptyIcon = <StorefrontIcon width={(this.props.width * 0.383333).toString()} />;

  public render() {
    const { height, width } = this.props;

    return (
      <div className="photo-view">
        {this.props.url !== null && (
          <div className="action-row">
            <Button theme="link" onClick={this.props.onSelectClick}>
              <ReplaceIcon />
              <FormattedMessage id="privatedining.enabled.v2.photo.replace" />
            </Button>
          </div>
        )}
        <div className="photo-box" style={{ height, width }}>
          <AsyncContent
            emptyIcon={this.emptyIcon}
            isLoading={this.props.status === Status.Loading}
            isError={this.props.status === Status.Error}
            isEmpty={this.props.url === null}
            emptyMessage={
              <Button theme="link" onClick={this.props.onSelectClick}>
                <FormattedMessage id="privatedining.enabled.v2.photo.add" />
              </Button>
            }
          >
            <img src={this.props.url || ''} />
          </AsyncContent>
        </div>
      </div>
    );
  }
}

export default PhotoView;
