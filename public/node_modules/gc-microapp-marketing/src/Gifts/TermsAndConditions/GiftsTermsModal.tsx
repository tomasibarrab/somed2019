import { Modal, ModalHeader, ModalMain } from 'gca-react-components';
import React, { SFC } from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { PatchGiftsUrlPayload } from '../../store/gifts/gifts.types';
import { LINK_TO_GIFTS_TERMS_V1 } from '../constants';
import TermsAndConditions, { TermsFVWithBrowserInfo } from '../TermsAndConditions/TermsAndConditions';
import './GiftsTermsModal.scss';

interface OP {
  close: () => void;
  confirm: (payload: PatchGiftsUrlPayload) => void;
  url: string;
}

type Props = OP & InjectedIntlProps;

export const GiftsTermsModal: SFC<Props> = ({ url, close, confirm, intl }) => {
  const addLinkToTermsAndConfirm = (termsFVWithBrowserInfo: TermsFVWithBrowserInfo): void => {
    const approvalInfo = { ...termsFVWithBrowserInfo, linkToTerms: LINK_TO_GIFTS_TERMS_V1 };
    confirm({ approvalInfo, url, isEdit: false });
  };

  return (
    <Modal onClose={close} modalClass="gifts-terms-modal">
      <ModalHeader onClose={close} title={intl.formatMessage({ id: 'guestcampaigns.terms.terms_and_conditions' })} />
      <ModalMain className="gifts-terms-modal-main">
        <div className="intro">
          <FormattedMessage
            id="gifts.terms.description"
            values={{
              'gifts-client-agreement-link': (
                <a href={LINK_TO_GIFTS_TERMS_V1}>{intl.formatMessage({ id: 'gifts.terms.gifts_client_agreement' })}</a>
              ),
            }}
          />
        </div>
        <TermsAndConditions confirm={addLinkToTermsAndConfirm} />
      </ModalMain>
    </Modal>
  );
};

export default injectIntl(GiftsTermsModal);
