import { Button, Panel } from 'gca-react-components';
import React, { SFC } from 'react';
import { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';

import GiftCard from '-!svg-react-loader?name=GiftCard!./spot-icon-gift-card.svg';
import Money from '-!svg-react-loader?name=Money!./spot-icon-money.svg';

import { actions } from '../store/gifts/gifts';
import { ClickOrInteractPayload, GiftsPageType, ShowPagePayload } from '../store/gifts/gifts.types';

import './Gifts.scss';

interface DP {
  showPage: (payload: ShowPagePayload) => void;
  clickOrInteract: (payload: ClickOrInteractPayload) => void;
}

type Props = DP & InjectedIntlProps;

const showLaunchDate = Date.UTC(2018, 10, 1) > Date.now(); // TODO: remove when past date

const GiftsLanding: SFC<Props> = props => (
  <Panel title={props.intl.formatMessage({ id: 'gifts.title' })}>
    <section className="gca-gifts-landing">
      <ul>
        <li>
          <GiftCard />
          <FormattedMessage id="gifts.landing.one.header" tagName="h3" />
          <FormattedMessage id="gifts.landing.one" tagName="p" />
        </li>
        <li>
          <Money />
          <FormattedMessage id="gifts.landing.two.header" tagName="h3" />
          <FormattedMessage id="gifts.landing.two" tagName="p" />
        </li>
      </ul>
      {showLaunchDate && <FormattedMessage id="gifts.liveDate" tagName="p" />}
      <Button
        onClick={() => {
          props.clickOrInteract({ action: 'Click', props: { name: 'Sign Up', page: 'Landing Page' } });
          props.showPage({ pageType: GiftsPageType.UrlEntryPage });
        }}
        type="button"
        theme="primary"
        name="gifts-sign-up-from-landing"
        data-testid="sign-up-from-landing"
      >
        <FormattedMessage id="gifts.landing.cta" tagName="span" />
      </Button>
    </section>
  </Panel>
);

const mapDispatch = {
  clickOrInteract: actions.clickOrInteract,
  showPage: actions.showPage,
};

export default connect<{}, DP, {}>(
  undefined,
  mapDispatch,
)(injectIntl(GiftsLanding));
