import React from 'react';
import { IntlProvider } from 'react-intl';
import { Provider } from 'react-redux';
import { MemoryRouter } from 'react-router';
import { create } from 'react-test-renderer';
import configureMockStore from 'redux-mock-store';
import { keys } from '../../translations/bundles/marketing.json';
import MainNav from './MainNav';

jest.mock('../../PrivateDining/PrivateDining', () => () => 'PrivateDiningComponent');
jest.mock('../../Promos/Promos', () => () => 'PromosComponent');
jest.mock('../../PromotedInventory/ColumnsLayout/CampaignsList', () => () => 'CampaignsListComponent');

describe('<MainNav />', () => {
  const enabledFeatures = {
    featureGcaPiApproveCustomPromotion: true,
    featureGcaPiCreateCustomPromotion: true,
    featureGcaPiCustomPromotions: true,
    featureGcaPiFlexiblePricing: true,
    featureGcaPiFlexiblePricingReduceVisibility: true,
    featureGcaPiFlexiblePricingRevert: true,
    featureGcaPiGifts: true,
    featureGcaPiGuestCampaigns: true,
    featureGcaPiInsights: true,
    featureGcaPiRecommended: true,
    featureGcaPiSpecials: true,
  };
  const scenarios = [
    {
      description: 'to match snapshot when featureGcaPiInsights is true',
      features: enabledFeatures,
    },
    {
      description: 'to match snapshot when featureGcaPiInsights is false',
      features: Object.assign({}, enabledFeatures, { featureGcaPiInsights: false }),
    },
  ];

  scenarios.forEach(({ description, features }) => {
    it(description, () => {
      const state = {
        featureToggles: { features },
      };
      const store = configureMockStore([])(state);
      const component = create(
        <Provider store={store}>
          <IntlProvider locale="en-US" messages={keys}>
            <MemoryRouter>
              <MainNav />
            </MemoryRouter>
          </IntlProvider>
        </Provider>,
      );

      const tree = component.toJSON();
      expect(tree).toMatchSnapshot();
    });
  });
});
