import { Modal, ModalHeader, ModalMain } from 'gca-react-components';
import * as React from 'react';
import { InjectedIntlProps, injectIntl } from 'react-intl';
import { connect } from 'react-redux';
import { cancelEditPromo, currentPromoSelector } from '../../store/promos/promos';
import { RestaurantPromo } from '../../store/promos/promos.types';
import { Dispatch, State } from '../../store/types';
import EditPromoForm from './EditPromoForm';

import './EditPromoModal.scss';

interface SP {
  currentPromo: RestaurantPromo;
}
interface DP {
  cancelEditPromo: () => void;
}
type Props = SP & DP & InjectedIntlProps;

// tslint:disable no-shadowed-variable
function EditPromoModal({ cancelEditPromo, currentPromo, intl: { formatMessage } }: Props) {
  if (!currentPromo) {
    return <div />;
  }

  const titleId = currentPromo.promoRestaurant ? 'promos.form.title.edit' : 'promos.form.title.join';

  return (
    <Modal onClose={cancelEditPromo} modalClass="edit-promo-modal">
      <ModalHeader
        onClose={cancelEditPromo}
        title={formatMessage({ id: titleId }, { promoName: currentPromo.promo.selfServeDetails.name })}
      />
      <ModalMain>
        <EditPromoForm />
      </ModalMain>
    </Modal>
  );
}

const mapState = (state: State) => ({ currentPromo: currentPromoSelector(state) });

const mapDispatch = {
  cancelEditPromo,
};

export default connect(mapState, mapDispatch)(injectIntl(EditPromoModal));
