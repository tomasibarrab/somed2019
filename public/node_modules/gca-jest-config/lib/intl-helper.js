/**
 * Components using the react-intl module require access to the intl context.
 * This is not available when mounting single components in Enzyme.
 * These helper functions aim to address that and wrap a valid,
 * English-locale intl context around them.
 */

const messages = require(`${process.cwd()}/src/translations/json/en-us`);

const React = require('react');
const { IntlProvider, intlShape } = require('react-intl');
const { mount, shallow } = require('enzyme');

module.exports = {
  shallowWithIntl: function (node, { context, childContextTypes } = {}) {
    // Create the IntlProvider to retrieve context for wrapping around.
    const intlProvider = new IntlProvider({ locale: 'en-us', messages }, {});
    const { intl } = intlProvider.getChildContext();

    return shallow(
      React.cloneElement(node, { intl }),
      {
        context: Object.assign({}, context, { intl }),
        childContextTypes: Object.assign({}, { intl: intlShape }, childContextTypes),
      }
    );
  },
  mountWithIntl: function (node, { context, childContextTypes } = {}) {
    const intlProvider = new IntlProvider({ locale: 'en-us', messages }, {});
    const { intl } = intlProvider.getChildContext();
    return mount(
      React.cloneElement(node, { intl }),
      {
        context: Object.assign({}, context, { intl }),
        childContextTypes: Object.assign({}, { intl: intlShape }, childContextTypes),
      }
    );
  }
}