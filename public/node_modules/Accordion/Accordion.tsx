import React from 'react';


import './Accordion.scss';
import { getClassNames } from './AccordionHelpers';
import { AccordionProps } from './AccordionTypes';
import { useOpenCloseAnimation } from './useOpenCloseAnimation';


export default function Accordion({
  isOpen,
  animationDuration = 300,
  animateScale = false,
  animateOpacity = false,
  onOpen = () => undefined,
  onClose = () => undefined,
  children,
}: AccordionProps) {
  const {
    wrapperRef,
    contentRef,
    height,
    isAnimating,
    renderChildren,
  } = useOpenCloseAnimation({ isOpen, onOpen, onClose });

  return (
    <div
      ref={wrapperRef}
      className={`AccordionWrapper ${getClassNames({ isOpen, animateScale, animateOpacity })}`}
      style={{
        ...(height !== null && {
          height: `${height}px`,
          transitionDuration: `${(animationDuration || 0) / 1000}s`,
        }),
        ...((isAnimating || (height === 0)) && { overflow: 'hidden' }),
      }}
    >
      <div
        ref={contentRef}
        className="AccordionContentWrapper"
        style={{
          transitionDuration: `${(animationDuration || 0) / 1000}s`,
        }}
      >
        { renderChildren ? children : null}
      </div>
    </div>
  );
}
