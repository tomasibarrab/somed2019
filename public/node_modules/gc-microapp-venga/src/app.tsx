/**
 * This is the entry file for the application, only setup and boilerplate
 * code.
 */
// import 'babel-polyfill';  // Temporary: removed because included in the index.html file directly (IE11 fix)

import { IntlProvider as BuffetIntlProvider, registerMessages } from '@buffet/intl';
import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import { BrowserRouter as Router } from 'react-router-dom';

import App from './common/App/App';

import configureStore from './store/store';
import { translationMessages } from './translations/i18n';

import 'sanitize.css/sanitize.css';


const gcScope = (window as any).gcScope;

const initialState = {};
const store = configureStore(initialState);

registerMessages(translationMessages);

const render = () => {
  ReactDOM.render(
    <Provider store={store}>
      <BuffetIntlProvider>
        <Router basename={`/restaurant/${gcScope.id}/partner-services/venga`}>
          <App />
        </Router>
      </BuffetIntlProvider>
    </Provider>,
    document.getElementById('app'),
  );
};

// Hot re-loadable translation json files
if (module.hot) {
  // modules.hot.accept does not accept dynamic dependencies,
  // have to be constants at compile-time
  module.hot.accept('translations/i18n', () => {
    render();
  });
}

render();
