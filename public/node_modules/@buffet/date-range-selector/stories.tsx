import React from 'react';
import moment, { Moment } from 'moment';
import { action } from '@storybook/addon-actions';
import { storiesOf } from '@storybook/react';
import { EnhancedDateRange, DateRangeSelector, DatePicker } from './src/index';

interface State {
  date: Moment;
}

class SingleDatePickerStory extends React.Component<any, State> {
  state = {
    date: moment.utc()
  };

  updateDate = (date: any) => {
    this.setState({
      date
    });
  };

  render() {
    return (
      <DatePicker
        startRange={moment().subtract(1, 'month')}
        endRange={moment().add(1, 'month')}
        date={this.state.date}
        updateDate={this.updateDate}
      />
    );
  }
}

interface WrapperState {
  selectedValue: string;
}

class DateRangePickerWrapper extends React.Component<any, WrapperState> {
  state: WrapperState = {
    selectedValue: 'visit_date'
  };

  handleChange = (value: string) => {
    this.setState({
      selectedValue: value
    });
  };

  render() {
    const applyButton = {
      id: 'apply',
      label: 'Apply',
      action: () => action('Apply Dates')
    };
    const predefinedDateOptions = [
      {
        value: 'visit_date',
        label: 'Visit Date'
      },
      {
        value: 'created_date',
        label: (
          <span>
            {' '}
            Created Date <span style={{ color: '#000000' }}> ( Custom Applied ) </span>
          </span>
        ),
        disabled: true
      }
    ];
    return (
      <DateRangeSelector
        applyButton={applyButton}
        startRange={moment.utc('2017-05-01T02:00:00.000Z')}
        endRange={moment.utc('2017-05-24T02:00:00.000Z')}
        startDate={moment.utc('2017-05-03T02:00:00.000Z')}
        endDate={moment.utc('2017-05-15T02:00:00.000Z')}
        updateFocusedDate={action('updated focused date')}
        updateDate={action('Updated Date')}
        radioButtons={predefinedDateOptions}
        selectedRadioButton={this.state.selectedValue}
        onRadioButtonChange={this.handleChange}
      />
    );
  }
}

// DateRangeSelector
storiesOf('Reporting/DateRangeSelector', module)
  .add('Defaults date to today', () => (
    <DateRangeSelector updateFocusedDate={() => action('updated focused date')} updateDate={action('updated date')} />
  ))
  .add('With title', () => (
    <DateRangeSelector
      title="Date Selector"
      updateFocusedDate={() => action('updated focused date')}
      updateDate={action('updated date')}
    />
  ))
  .add('Defined date range', () => (
    <DateRangeSelector
      startDate={moment.utc('2018-05-01T02:00:00.000Z')}
      endDate={moment.utc('2018-05-24T02:00:00.000Z')}
      updateFocusedDate={() => action('updated focused date')}
      updateDate={action('updated date')}
    />
  ))
  .add('With a date range', () => (
    <DateRangeSelector
      title="Also has a title!"
      startRange={moment.utc('2018-05-01T02:00:00.000Z')}
      endRange={moment.utc('2018-05-24T02:00:00.000Z')}
      startDate={moment.utc('2018-05-03T02:00:00.000Z')}
      endDate={moment.utc('2018-05-15T02:00:00.000Z')}
      updateFocusedDate={() => action('updated focused date')}
      updateDate={action('updated date')}
    />
  ))
  .add('With predefined date options', () => {
    const applyButton = {
      id: 'apply',
      label: 'Apply',
      action: () => action('Apply Dates')
    };
    const predefinedDateOptions = [
      {
        id: 'today',
        label: 'Today',
        action: action('Predefined date selected')
      },
      {
        id: 'lastWeek',
        label: 'Last Week',
        action: action('Predefined date selected')
      },
      {
        id: 'lastMonth',
        label: 'Last Month',
        action: action('Predefined date selected')
      },
      {
        id: 'last7Days',
        label: 'Last 7 Days',
        action: action('Predefined date selected')
      },
      {
        id: 'last30Days',
        label: 'Last 30 Days',
        action: action('Predefined date selected')
      },
      {
        id: 'yearToDate',
        label: 'Year to date',
        action: action('Predefined date selected')
      }
    ];
    return (
      <DateRangeSelector
        applyButton={applyButton}
        title="Common Date Ranges"
        startRange={moment.utc('2017-05-01T02:00:00.000Z')}
        endRange={moment.utc('2017-05-24T02:00:00.000Z')}
        startDate={moment.utc('2017-05-03T02:00:00.000Z')}
        endDate={moment.utc('2017-05-15T02:00:00.000Z')}
        updateFocusedDate={action('updated focused date')}
        updateDate={action('Updated Date')}
        buttons={predefinedDateOptions}
      />
    );
  })
  .add('Enhanced date range selector with a date range', () => (
    <EnhancedDateRange
      title="Also has a title!"
      startRange={moment.utc('2018-05-01T02:00:00.000Z')}
      endRange={moment.utc('2018-05-24T02:00:00.000Z')}
      startDate={moment.utc('2018-05-03T02:00:00.000Z')}
      endDate={moment.utc('2018-05-15T02:00:00.000Z')}
      updateFocusedDate={() => action('updated focused date')}
      updateDate={action('updated date')}
      clickOutside={action('clicked outside')}
    />
  ))
  .add('With radio button option', () => (
    <div>
      <DateRangePickerWrapper />
    </div>
  ))
  .add('Single Date Picker', () => <SingleDatePickerStory />);
