import React from 'react';
import { storiesOf } from '@storybook/react';
import { isValidPhoneNumber } from 'react-phone-number-input';
import PhoneInput from './src';

class ValueWrapper extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: {
        isValid: undefined,
        value: this.props.initialValue
      }
    };
    this.onChange = this.onChange.bind(this);

    this.hasError = ({ value }) => {
      if (value) {
        if (isValidPhoneNumber(value)) {
          return undefined;
        }
        return 'Invalid phone number';
      }
      return undefined;
    };
  }

  onChange(value) {
    this.setState({ value });
  }

  render() {
    return (
      <div>
        {this.props.render({
          value: this.state.value,
          onChange: this.onChange,
          hasError: this.hasError
        })}
        <pre>{JSON.stringify(this.state.value, null, 2)}</pre>
        <p>Some values to try:</p>
        <ul>
          <li>US: 916-234-5678</li>
          <li>RU: +78001234567</li>
          <li>UK: +442030115900</li>
          <li>Freeform: 1-800-OPENTABLE</li>
          <li>Freeform: 530-555-5555 ext. 555</li>
          <li>Weird: {'" (530) 277--3976 "'}</li>
        </ul>
      </div>
    );
  }
}

const phoneInputStories = storiesOf('PhoneInput', module);

phoneInputStories.add('Phone input', () => (
  <div
    style={{
      width: '300px',
      padding: '16px'
    }}
  >
    <ValueWrapper
      render={({ onChange, value }) => (
        <PhoneInput
          placeholder="Phone number"
          value={value.value}
          onChange={onChange}
          label="Phone number"
          showLabel={false}
        />
      )}
    />
  </div>
));

phoneInputStories.add('Phone input with label and default country', () => (
  <div
    style={{
      width: '300px',
      padding: '16px'
    }}
  >
    <ValueWrapper
      render={({ onChange, value }) => (
        <PhoneInput label="Phone number" value={value.value} onChange={onChange} defaultCountry="US" />
      )}
    />
  </div>
));

phoneInputStories.add('Phone input that allows non-standard characters', () => (
  <div
    style={{
      width: '300px',
      padding: '16px'
    }}
  >
    <ValueWrapper
      render={({ onChange, value }) => (
        <PhoneInput
          allowNonStandardCharacters={true}
          label="Phone number"
          value={value.value}
          onChange={onChange}
          defaultCountry="US"
        />
      )}
    />
  </div>
));

phoneInputStories.add('Phone input country detection', () => (
  <div
    style={{
      width: '300px',
      padding: '16px'
    }}
  >
    <ValueWrapper
      initialValue="+443448002400"
      render={({ onChange, value }) => (
        <PhoneInput
          placeholder="PhoneInput placeholder text"
          value={value.value}
          onChange={onChange}
          label="Phone number"
        />
      )}
    />
  </div>
));

phoneInputStories.add('Phone input invalid number', () => (
  <div
    style={{
      width: '300px',
      padding: '16px'
    }}
  >
    <ValueWrapper
      initialValue="1-800-OPENTABLE"
      render={({ onChange, value, hasError }) => (
        <PhoneInput label="Phone number" value={value.value} onChange={onChange} error={hasError(value)} />
      )}
    />
  </div>
));
