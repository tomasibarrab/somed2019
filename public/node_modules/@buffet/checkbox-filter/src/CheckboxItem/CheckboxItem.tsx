import React from 'react';
import { Checkbox } from '../Checkbox/Checkbox';
import { CheckboxItem as CheckboxItemProps } from '../types';
import { CheckboxListContainer } from '../CheckboxListContainer/CheckboxListContainer';
import { CheckboxListItemContainer } from '../CheckboxListItemContainer/CheckboxListItemContainer';
import { ExpandCollapse } from '../ExpandCollapse/ExpandCollapse';
import styles from './CheckboxItem.css';

export interface Props extends CheckboxItemProps {
  onClick(id: string): void;
  onToggleClick?(id: string): void;
}

export class CheckboxItem extends React.Component<Props> {
  determineState = (option: CheckboxItemProps) => {
    const { state } = option;
    return !state ? 'unchecked' : state;
  };

  getLabel = (label: string, options: Array<CheckboxItemProps> | undefined) => {
    if (typeof options === 'undefined') {
      return label;
    }

    const selectedOptions = options.reduce((selected: number, option: CheckboxItemProps) => {
      if (option.state === 'checked') {
        return selected + 1;
      }
      return selected;
    }, 0);

    return `${label} (${selectedOptions}/${options.length})`;
  };

  renderCheckboxList = (options: Array<CheckboxItemProps> | undefined, isCollapsed: boolean | undefined) => {
    if (!options) return null;
    return (
      <CheckboxListContainer maxHeight={-1} isCollapsed={Boolean(isCollapsed)}>
        {options.map(option => {
          return (
            <CheckboxListItemContainer className={styles.nested} key={option.id}>
              <Checkbox
                key={option.id}
                id={option.id}
                label={option.label}
                state={this.determineState(option)}
                onClick={this.props.onClick}
                data-testid={`checkbox-child--id--${option.id}`}
              />
            </CheckboxListItemContainer>
          );
        })}
      </CheckboxListContainer>
    );
  };

  render() {
    const { id, label, options, isCollapsed, onToggleClick } = this.props;

    const expandCollapseState = isCollapsed ? 'expand' : 'collapse';

    return (
      <React.Fragment>
        <div className={styles.container}>
          <Checkbox
            id={id}
            label={this.getLabel(label, options)}
            state={this.determineState(this.props)}
            onClick={this.props.onClick}
            data-testid={`checkbox--id--${id}`}
          />
          {Boolean(options) &&
            typeof onToggleClick !== 'undefined' && (
              <div className={styles['icon-container']}>
                <ExpandCollapse
                  id={id}
                  state={expandCollapseState}
                  onClick={onToggleClick}
                  data-testid={`checkbox--expansion-toggle--id--${id}`}
                />
              </div>
            )}
        </div>
        {this.renderCheckboxList(options, isCollapsed)}
      </React.Fragment>
    );
  }
}
