import React from 'react';
import { ToggleAll } from '../types';
import { Checkbox } from '../Checkbox/Checkbox';
import { ExpandCollapse } from '../ExpandCollapse/ExpandCollapse';
import styles from './GlobalToggle.css';

interface Props {
  toggleOptions?: ToggleAll;
  optionCount: number;
  selectedOptionCount?: number;
  onClick(toggleId: string): void;
  onToggleClick?(id: string): void;
}

export class GlobalToggle extends React.Component<Props> {
  onGlobalClick = () => {
    this.props.onClick('global');
  };

  getLabel = (options: ToggleAll) => {
    const { optionCount, selectedOptionCount } = this.props;

    const { label, toggleCount } = options;

    if (toggleCount === 'all') {
      return `${label} (${optionCount})`;
    }

    if (toggleCount === 'selected') {
      const selectedOptions = selectedOptionCount || 0;
      return `${label} (${selectedOptions})`;
    }

    if (toggleCount === 'selectedOfAll') {
      const selectedOptions = selectedOptionCount || 0;
      return `${label} (${selectedOptions}/${optionCount})`;
    }

    return label;
  };

  render() {
    const { toggleOptions, onToggleClick } = this.props;

    if (!toggleOptions || !toggleOptions.isVisible) {
      return null;
    }

    const globalToggleProps = {
      id: 'globalToggle',
      label: this.getLabel(toggleOptions),
      count: -1,
      state: toggleOptions.state || 'unchecked',
      onClick: this.onGlobalClick
    };

    return (
      <div className={styles.container}>
        <Checkbox {...globalToggleProps} data-testid="checkbox-global" />
        {toggleOptions.showGlobalExpansionToggle &&
          onToggleClick && (
            <ExpandCollapse
              id="global"
              state="sort"
              onClick={onToggleClick}
              data-testid="checkbox-global--expansion-toggle"
            />
          )}
      </div>
    );
  }
}
