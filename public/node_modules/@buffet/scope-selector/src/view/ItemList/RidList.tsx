import React from 'react';
import { CurrentUserConsumer } from '@buffet/current-user-context';
import { Restaurant } from '../../service/ScopeSelector.types';
import styles from './ItemList.css';
import { FormattedMessage } from 'react-intl';

export interface Props {
  onClick(rid: number): void;
  rids: Restaurant[];
  currentRid?: number;
}

export class RidList extends React.Component<Props> {
  render() {
    const { onClick, rids, currentRid } = this.props;

    return (
      <CurrentUserConsumer>
        {userState => {
          const showRestaurantType = userState.status === 'done' && userState.data && userState.data.isInternalUser;

          return (
            <ul className={styles.list} data-testid="scope-selector__rid-list">
              {rids.map(rid => (
                <li key={rid.rid}>
                  <button
                    type="button"
                    className={rid.rid === currentRid ? styles.item__active : styles.item__normal}
                    onClick={rid.rid === currentRid ? undefined : () => onClick(rid.rid)}
                  >
                    <div className={styles.row}>
                      <div className={styles.name}>{rid.name}</div>
                      <div className={styles.id}>{rid.rid}</div>
                    </div>
                    <div className={styles.row}>
                      <div className={styles.address} data-testid="scope-selector__rid-location">
                        {rid.city}, {rid.country}
                      </div>
                      {showRestaurantType &&
                        (rid.isTestRestaurant ? (
                          <div className={styles.type__test}>
                            <FormattedMessage id="scopeSelector.test" />
                          </div>
                        ) : (
                          <div className={styles.type__customer}>
                            <FormattedMessage id="scopeSelector.customer" />
                          </div>
                        ))}
                    </div>
                  </button>
                </li>
              ))}
            </ul>
          );
        }}
      </CurrentUserConsumer>
    );
  }
}
