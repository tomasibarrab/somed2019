import { Icon } from '@buffet/icon';
import React from 'react';
import styles from './Checkbox.css';
import classnames from 'classnames/bind';

const cx = classnames.bind(styles);

export interface CheckboxProps {
  checked: boolean;
  className?: string;
  disabled?: boolean;
  id: string;
  indeterminate?: boolean;
  onClick(e: React.MouseEvent<HTMLInputElement>): void;
  testId?: string;
}

export const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>((props, ref) => {
  const checkedState = {
    disabled: props.disabled,
    checked: props.checked,
    indeterminate: props.indeterminate
  };

  let ariaChecked: React.AriaAttributes['aria-checked'] = 'false';
  if (props.indeterminate) {
    ariaChecked = 'mixed';
  } else if (props.checked) {
    ariaChecked = 'true';
  }

  return (
    <>
      <input
        className={cx('hiddenCheckbox')}
        data-testid={props.testId}
        aria-checked={ariaChecked}
        disabled={props.disabled}
        id={props.id}
        onClick={props.onClick}
        ref={ref}
        type="checkbox"
      />
      <div className={cx('fakeCheckbox', { disabled: props.disabled }, props.className)}>
        <div className={cx('fakeCheckboxIcon', checkedState)} />
        <Icon iconId="checkboxSelected" className={cx('fakeCheckboxSelected', checkedState, props.className)} />
      </div>
    </>
  );
});
