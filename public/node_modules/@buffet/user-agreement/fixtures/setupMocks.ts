/* istanbul ignore file */
import mock from 'xhr-mock';
const GATEWAY_BASE_PATH = '/gateway/proxies/userAgreementService';
const UAS_BASE_PATH = '/v1/user-agreement/agreements';
export const AGREEMENT_ID = 'cebcafae-5c6b-4152-adeb-3c466b800032';
export const AGREEMENT_TYPE = 'pos_integration';
export const AGREEMENT_CONTEXT = 'urn:ot.restaurants:123';
export const AGREEMENT_CONTEXT_NAME = 'Tasty Restaurant';

export const mockGetAgreement = async (status: number, payload: any = {}, isLoading: boolean = false) => {
  mock.get(
    `${GATEWAY_BASE_PATH}${UAS_BASE_PATH}/${AGREEMENT_TYPE}/${AGREEMENT_CONTEXT}`,
    isLoading
      ? () => new Promise(() => {})
      : {
          status,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        }
  );
};
export const mockCreateAgreement = async (status: number, payload: any = {}, isLoading: boolean = false) => {
  mock.post(
    `${GATEWAY_BASE_PATH}${UAS_BASE_PATH}`,
    isLoading
      ? () => new Promise(() => {})
      : {
          status,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        }
  );
};

export const mockSignAgreement = async (status: number, payload: any = {}, isLoading: boolean = false) => {
  mock.post(
    `${GATEWAY_BASE_PATH}${UAS_BASE_PATH}/${AGREEMENT_ID}/sign`,
    isLoading
      ? () => new Promise(() => {})
      : {
          status,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        }
  );
};
