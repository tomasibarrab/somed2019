import * as React from 'react';
import { FieldRenderProps } from 'react-final-form';
import { ReactSelectProps } from 'react-select';

import { DropdownSelect } from '@buffet/select';

import { customFinalField, InputFieldProps } from './customfield';

import './FinalField.scss';

type DropdownSelectWrapperProps = InputFieldProps<Partial<ReactSelectProps>>;

interface OptionType {
  label: string;
  value: string;
}
const dropdownSelectWrapper = (
  { disabled, valid, options, className, type, tabIndex, id }: DropdownSelectWrapperProps,
  { input }: FieldRenderProps,
) => {
  const optValue = options ? options.find((o: OptionType) => o.value === input.value) : undefined;

  return (
    <div id={id} className={`${className} final-field ${valid ? '' : 'final-field-invalid'}`}>
      <DropdownSelect
        isDisabled={disabled}
        // tabIndex={tabIndex}
        type={type}
        options={options}
        // valid={valid}
        value={optValue}
        onChange={(option: OptionType) => input.onChange(option.value)}
        // {...input}
      />
    </div>
  );
};

/**
 * InputField react-final-form field for buffet LabeledInput component
 */
export const SelectFinalField = customFinalField<Partial<DropdownSelectWrapperProps>>(dropdownSelectWrapper);
