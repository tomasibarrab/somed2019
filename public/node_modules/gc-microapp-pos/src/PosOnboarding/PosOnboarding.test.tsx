import { shallow } from 'enzyme';
import React from 'react';

import OnboardingFooter from './OnboardingFooter';
import { Props, PurePosOnboarding as PosOnboarding } from './PosOnboarding';

describe('<PosOnboarding />', () => {
  const setup = (override = {}) => {
    const { displayState = 'landing' } = override as Props;
    const props: Props = {
      displayState,
    };

    const posOnboarding = shallow(<PosOnboarding {...props} />);

    return { posOnboarding, props };
  };

  describe('UserAgreement component', () => {
    describe('displays when', () => {
      it('display state is posSelect', () => {
        const { posOnboarding } = setup({ displayState: 'posSelect' });
        expect(posOnboarding.find(OnboardingFooter).length).toBe(1);
      });

      it('display state is nextSteps', () => {
        const { posOnboarding } = setup({ displayState: 'nextSteps' });
        expect(posOnboarding.find(OnboardingFooter).length).toBe(1);
      });

      it('does not display state is landing page', () => {
        const { posOnboarding } = setup({ displayState: 'landing' });
        expect(posOnboarding.find(OnboardingFooter).length).toBe(0);
      });

      it('does not display state is active page', () => {
        const { posOnboarding } = setup({ displayState: 'active' });
        expect(posOnboarding.find(OnboardingFooter).length).toBe(0);
      });

      it('does not display state is active page', () => {
        const { posOnboarding } = setup({ displayState: 'unsupported' });
        expect(posOnboarding.find(OnboardingFooter).length).toBe(0);
      });
    });
  });
});
