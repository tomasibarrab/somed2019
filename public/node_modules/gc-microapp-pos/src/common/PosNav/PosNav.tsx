import { Icon } from '@buffet/icon';
import { Nav, NavIcon, NavLabel } from '@buffet/nav';
import React from 'react';
import { FormattedMessage } from 'react-intl';
import { connect } from 'react-redux';
import { NavLink } from 'react-router-dom';
import { OnboardingDisplayStateName, SupportedPosBrandsIds } from '../../store/types';
import { State } from '../../store/types';
import './PosNav.scss';

interface SP {
  posId: string;
  displayState: OnboardingDisplayStateName;
}

export type Props = SP;

class PosNav extends React.Component<Props, {}> {
  public render() {
    if (!this.isActive() || this.isUpserve()) {
      return null;
    }
    return (
      <Nav>
        {renderProps => (
          <>
            <NavLink to="/" exact activeClassName={renderProps.activeClassName}>
              <NavIcon>
                <Icon iconId="appPointOfSale" />
              </NavIcon>
              <NavLabel>
                <FormattedMessage id="posstatus.nav.posIntegration" />
              </NavLabel>
            </NavLink>
            <NavLink to="/table-status" activeClassName={renderProps.activeClassName}>
              <NavIcon>
                <Icon iconId="appTableStatus" />
              </NavIcon>
              <NavLabel>
                <FormattedMessage id="posstatus.nav.tableStatus" />
              </NavLabel>
            </NavLink>
          </>
        )}
      </Nav>
    );
  }

  private isUpserve() {
    return this.props.posId === SupportedPosBrandsIds.Upserve;
  }

  private isActive() {
    return this.props.displayState === 'active';
  }
}
const mapState = (state: State): SP => ({
  displayState: state.onBoarding.displayState,
  posId: state.onBoarding.selectedPos.Id,
});

const mapDispatch = {};

export default connect(
  mapState,
  mapDispatch,
)(PosNav);
export { PosNav as PurePosNav };
