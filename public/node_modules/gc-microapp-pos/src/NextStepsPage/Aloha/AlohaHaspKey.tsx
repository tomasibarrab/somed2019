import eventTracker from '@buffet/event-tracker';
import React from 'react';
import { FormRenderProps } from 'react-final-form';
import { InjectedIntlProps, injectIntl } from 'react-intl';
import { Options } from 'react-select';
import { InputFinalField, SelectFinalField } from 'shared-react-atomic-ui/finalform-fields';
import { alohaResellerOptions } from './alohaReseller.const';

import { gaTrackTypes } from '../../constants';
import './AlohaHaspKey.scss';

type Props = FormRenderProps & InjectedIntlProps;

class AlohaHaspKey extends React.Component<Props> {
  private alohaResellerOptions: Options = [
    { value: '', label: this.props.intl.formatMessage({ id: 'nextSteps.aloha.reseller.noReseller' }) },
    ...alohaResellerOptions,
    { value: 'Unknown', label: this.props.intl.formatMessage({ id: 'nextSteps.aloha.reseller.other' }) },
  ];

  public render() {
    const {
      handleSubmit,
      intl: { formatMessage },
    } = this.props;

    return (
      <form className="hasp-key__form" onSubmit={handleSubmit} id="alohaHaspKeyForm">
        <fieldset className="form-control">
          <InputFinalField
            name="haspKey"
            label={formatMessage({ id: 'nextSteps.aloha.haspkey.placeholder' })}
            className="field"
            autoFocus
            type="tel"
            onBlur={this.gaHandler}
          />
        </fieldset>
        <fieldset className="form-control hasp-key__select">
          <SelectFinalField name="reseller" options={this.alohaResellerOptions} />
        </fieldset>
      </form>
    );
  }

  private gaHandler() {
    eventTracker.sendEvent({
      action: gaTrackTypes.actions.enter,
      category: gaTrackTypes.category,
      label: 'next-steps:form-input:aloha-hasp-key',
    });
  }
}

export default injectIntl<FormRenderProps>(AlohaHaspKey);

export { AlohaHaspKey as PureAlohaHaspKey, Props };
