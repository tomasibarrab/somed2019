import { shallow } from 'enzyme';
import React from 'react';

import { LabeledCheckbox } from '@buffet/checkbox';
import { FlatCategoryDisplay } from './FlatCategoryDisplay';
import { HierarchicalCategoryDisplay, Props } from './HierarchicalCategoryDisplay';

describe('<hierarchicalCategoryDisplay />', () => {
  const setup = (overriderProps = {}) => {
    const {} = overriderProps as Props;
    const props: Props = {
      categories: [
        {
          category_id: '211',
          checked: false,
          level: 1,
          name: 'waffles',
          parent_category_id: '311',
          status_id: 111,
        },
        {
          category_id: '212',
          checked: false,
          level: 2,
          name: 'tacos',
          parent_category_id: null,
          status_id: 112,
        },
        {
          category_id: '213',
          checked: false,
          level: 1,
          name: 'sushi',
          parent_category_id: null,
          status_id: 113,
        },
        {
          category_id: '214',
          checked: false,
          level: 1,
          name: 'noodles',
          parent_category_id: '314',
          status_id: 114,
        },
        {
          category_id: '215',
          checked: false,
          level: 3,
          name: 'cheese burgers',
          parent_category_id: '315',
          status_id: 115,
        },
        {
          category_id: '216',
          checked: false,
          level: 1,
          name: 'bacon',
          parent_category_id: '311',
          status_id: 116,
        },
      ],
      onCheckCategory: jest.fn(),
      parentCategoriesDictionary: {
        311: {
          category_id: '22',
          checked: false,
          level: 1,
          name: 'breakfast',
          parent_category_id: '12',
          status_id: 12,
        },
      },
      statusDictionary: {},
    };

    const hierarchicalCategoryDisplayComponent = shallow(<HierarchicalCategoryDisplay {...props} />);

    return { hierarchicalCategoryDisplayComponent, props };
  };

  describe('getHierarchicalCategories', () => {
    it(
      'filter out categories that are not level 1' +
        ' and do not have parent_category_id and sort categories with the same parent_category_id together',
      () => {
        const { hierarchicalCategoryDisplayComponent, props } = setup();

        expect(hierarchicalCategoryDisplayComponent.instance().getHierarchicalCategories()).toEqual({
          311: [props.categories[0], props.categories[5]],
          314: [props.categories[3]],
        });
      },
    );
  });

  it('should render null if the category has no parent', () => {
    const { hierarchicalCategoryDisplayComponent } = setup();

    expect(hierarchicalCategoryDisplayComponent.find('.parent-category').length).toBe(1);

    expect(hierarchicalCategoryDisplayComponent.find('.parent-display-314').length).toBe(0);
  });

  it('should render a Chechbox and FlatCategory for categories with parents', () => {
    const { hierarchicalCategoryDisplayComponent, props } = setup();

    // test checkbox
    const checkbox = hierarchicalCategoryDisplayComponent.find(LabeledCheckbox);
    const checkboxProps = checkbox.props();
    expect(checkbox.length).toBe(1);
    expect(checkboxProps.checked).toBe(props.parentCategoriesDictionary['311'].checked);
    expect(checkboxProps.label).toBe(props.parentCategoriesDictionary['311'].name);
    checkboxProps.onClick();
    expect(props.onCheckCategory).toHaveBeenCalledTimes(1);

    // test flatCategoryDisplay
    const flatCategoryDisplay = hierarchicalCategoryDisplayComponent.find(FlatCategoryDisplay);
    const flatCategoryDisplayProps = flatCategoryDisplay.props();
    expect(flatCategoryDisplay.length).toBe(1);
    expect(flatCategoryDisplayProps.categories).toEqual([props.categories[0], props.categories[5]]);
    expect(flatCategoryDisplayProps.statusDictionary).toBe(props.statusDictionary);
    expect(flatCategoryDisplayProps.onCheckCategory).toBe(props.onCheckCategory);
  });
});
