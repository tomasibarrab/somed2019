import { combineEpics } from 'redux-observable';

import {
  groupContextEpic,
  ridContextEpic,
  userContextEpic,
} from 'gca-react-components/src/redux-modules/currentContext';
import { featureTogglesEpic } from 'gca-react-components/src/redux-modules/featureToggles';
import { initializeGcScopeEpic } from 'gca-react-components/src/redux-modules/initializeApp';
import { introVideoEpic } from 'gca-react-components/src/redux-modules/introVideo';

import { epics as tableStatusEpics } from '../store/tablestatus/tablestatus';

import {
  activateUpserveLinkEpic,
  getAlohaHaspKeyEpic,
  sendAlohaHaspKeyEpic,
  verifyUpserveLinkEpic,
} from './onboarding/nextStepsData';

import {
  cancelPosActivationEpic,
  cancelPosActivationErrorEpic,
  doneFetchPosRideEpic,
  fetchPosRideDataEpic,
  triggerFetchPosRideDataEpic,
} from './onboarding/posStatus';

import { dismissSavePosBrandErrorsEpic, savePosBrandEpic, triggerSavePosBrand } from './onboarding/savePosBrand';
import { fetchSupportedPosBrandsEpic } from './onboarding/supportedPosBrands';
import { clearErrorNotificationsEpic, submitLeadGenEpic } from './onboarding/unsupportedPosbrands';
import { fetchUnsupportedPosBrandsEpic } from './onboarding/unsupportedPosBrandsData';
import {
  createUserAgreementEpic,
  fetchUserAgreementEpic,
  triggerCreateUserAgreementEpic,
  triggerFetchUserAgreementEpic,
} from './onboarding/userAgreement';

const onBoardingEpic = combineEpics(
  verifyUpserveLinkEpic,
  activateUpserveLinkEpic,
  cancelPosActivationEpic,
  cancelPosActivationErrorEpic,
  clearErrorNotificationsEpic,
  triggerSavePosBrand,
  triggerFetchPosRideDataEpic,
  fetchPosRideDataEpic,
  fetchSupportedPosBrandsEpic,
  fetchUserAgreementEpic,
  submitLeadGenEpic,
  fetchUnsupportedPosBrandsEpic,
  savePosBrandEpic,
  sendAlohaHaspKeyEpic,
  triggerFetchUserAgreementEpic,
  doneFetchPosRideEpic,
  getAlohaHaspKeyEpic,
  tableStatusEpics.publishStatusEpic,
  tableStatusEpics.fetchDataEpic,
  tableStatusEpics.toggleTableStatusChangeEnabledEpic,
  dismissSavePosBrandErrorsEpic,
  triggerCreateUserAgreementEpic,
  createUserAgreementEpic,
);

export default combineEpics(
  groupContextEpic,
  ridContextEpic,
  userContextEpic,
  initializeGcScopeEpic,
  featureTogglesEpic,
  introVideoEpic,
  onBoardingEpic,
);
