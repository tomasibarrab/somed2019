export interface LoginCredentials {
  username: string;
  password: string;
}

export interface LoginRequest extends LoginCredentials {
  code?: string;
  rememberCredentials?: boolean;
  recaptchaTokenV2?: string;
  recaptchaTokenV3?: string;
}

export interface RegisterPhoneRequest extends LoginCredentials {
  country_code: string;
  cellphone: string;
}

export interface ChangePasswordRequest {
  password: string;
  passwordConfirm: string;
  token: string
}

// Predetermined responses from the api
export enum ResultStatus {
  singleRid = 0,
  multiRid = 1, // depracated
  loggedOut = 2,
  unauthorized = 3,   // when 2FA registration is required or token is required
  error = 4,
  onboardingRestaurant = 5,
  credentialsLockedOut = 6, // user account is locked out
  noRid = 7,
  billingLockedOut = 8, // restaurant is locked out
  postLogin = 9,
}

export enum ErrorCode {
  needsRegistration = 'need_registration',
  codeNeeded = 'code_needed',
  recaptchaRequired = 'token_needed',
}

export interface LoginResponse {
  resultStatus: ResultStatus;
  redirectUrl: string;
  errorCode: ErrorCode;
  cellphone: string;
  errorMessages: string[];
}

export enum MessageType {
  success = 'success',
  error = 'error',
}

export interface Message {
  text: string;
  type: MessageType;
}
